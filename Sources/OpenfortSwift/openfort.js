! function(e, t, r, n, s, a, i, o) {
    var l, c = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {},
        d = "function" == typeof c[n] && c[n],
        u = d.i || {},
        f = d.cache || {},
        h = "undefined" != typeof module && "function" == typeof module.require && module.require.bind(module);

    function p(t, r) {
        if (!f[t]) {
            if (!e[t]) {
                if (s[t]) return s[t];
                var a = "function" == typeof c[n] && c[n];
                if (!r && a) return a(t, !0);
                if (d) return d(t, !0);
                if (h && "string" == typeof t) return h(t);
                var i = Error("Cannot find module '" + t + "'");
                throw i.code = "MODULE_NOT_FOUND", i
            }
            l.resolve = function(r) {
                var n = e[t][1][r];
                return null != n ? n : r
            }, l.cache = {};
            var o = f[t] = new p.Module(t);
            e[t][0].call(o.exports, l, o, o.exports, c)
        }
        return f[t].exports;

        function l(e) {
            var t = l.resolve(e);
            return !1 === t ? {} : p(t)
        }
    }
    p.isParcelRequire = !0, p.Module = function(e) {
        this.id = e, this.bundle = p, this.require = h, this.exports = {}
    }, p.modules = e, p.cache = f, p.parent = d, p.distDir = "./", p.publicUrl = "/", p.devServer = void 0, p.i = u, p.register = function(t, r) {
        e[t] = [function(e, t) {
            t.exports = r
        }, {}]
    }, p.resolve = function(e) {
        if (e = u[e] || e, !l) try {
            throw Error()
        } catch (r) {
            var t = ("" + r.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\/\/[^)\n]+/g);
            if (!t) return "./" + e;
            l = t[0]
        }
        return new URL(a + e, l).toString()
    }, p.extendImportMap = function(e) {
        Object.assign(u, e)
    }, Object.defineProperty(p, "root", {
        get: function() {
            return c[n]
        }
    }), c[n] = p;
    for (var g = 0; g < t.length; g++) p(t[g]);
    if (r) {
        var m = p(r);
        "object" == typeof exports && "undefined" != typeof module ? module.exports = m : "function" == typeof define && define.amd && define(function() {
            return m
        })
    }
}({
    "6Df0C": [function(e, t, r, n) {
        t.bundle.extendImportMap({
            "7UhPZ": "esm.7a5d15e0.js"
        })
    }, {}],
    id4SM: [function(e, t, r, n) {
        e("@ethersproject/hash"), e("@ethersproject/providers"), e("ethers"), e("eventemitter3"), e("jose");
        var s = e("@openfort/openfort-js");
        window.Openfort = s.Openfort
    }, {
        "@ethersproject/hash": "jLDfB",
        "@ethersproject/providers": "lpm2Y",
        ethers: "8wpcu",
        eventemitter3: "gddYA",
        jose: "kXgGE",
        "@openfort/openfort-js": "31lx6"
    }],
    jLDfB: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "id", () => a.id), s.export(r, "dnsEncode", () => i.dnsEncode), s.export(r, "namehash", () => i.namehash), s.export(r, "isValidName", () => i.isValidName), s.export(r, "ensNormalize", () => i.ensNormalize), s.export(r, "messagePrefix", () => o.messagePrefix), s.export(r, "hashMessage", () => o.hashMessage), s.export(r, "_TypedDataEncoder", () => l.TypedDataEncoder);
        "use strict";
        var a = e("./id"),
            i = e("./namehash"),
            o = e("./message"),
            l = e("./typed-data")
    }, {
        "./id": "h8d98",
        "./namehash": "85tDg",
        "./message": "dncJF",
        "./typed-data": "keHK9",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    h8d98: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "id", () => o);
        var a = e("@ethersproject/keccak256"),
            i = e("@ethersproject/strings");

        function o(e) {
            return (0, a.keccak256)((0, i.toUtf8Bytes)(e))
        }
    }, {
        "@ethersproject/keccak256": "eWtzg",
        "@ethersproject/strings": "edSy2",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    eWtzg: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "keccak256", () => l);
        "use strict";
        var a = e("js-sha3"),
            i = s.interopDefault(a),
            o = e("@ethersproject/bytes");

        function l(e) {
            return "0x" + i.default.keccak_256((0, o.arrayify)(e))
        }
    }, {
        "js-sha3": "l9ad0",
        "@ethersproject/bytes": "19SwW",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    l9ad0: [function(e, t, r, n) {
        arguments[3], ! function() {
            "use strict";
            var e = "input is invalid type",
                r = "object" == typeof window,
                n = r ? window : {};
            n.JS_SHA3_NO_WINDOW && (r = !1);
            var s = !r && "object" == typeof self;
            n.JS_SHA3_NO_NODE_JS, s && (n = self);
            var a = !n.JS_SHA3_NO_COMMON_JS && t.exports,
                i = "function" == typeof define && define.amd,
                o = !n.JS_SHA3_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer,
                l = "0123456789abcdef".split(""),
                c = [4, 1024, 262144, 0x4000000],
                d = [0, 8, 16, 24],
                u = [1, 0, 32898, 0, 32906, 0x80000000, 0x80008000, 0x80000000, 32907, 0, 0x80000001, 0, 0x80008081, 0x80000000, 32777, 0x80000000, 138, 0, 136, 0, 0x80008009, 0, 0x8000000a, 0, 0x8000808b, 0, 139, 0x80000000, 32905, 0x80000000, 32771, 0x80000000, 32770, 0x80000000, 128, 0x80000000, 32778, 0, 0x8000000a, 0x80000000, 0x80008081, 0x80000000, 32896, 0x80000000, 0x80000001, 0, 0x80008008, 0x80000000],
                f = [224, 256, 384, 512],
                h = [128, 256],
                p = ["hex", "buffer", "arrayBuffer", "array", "digest"],
                g = {
                    128: 168,
                    256: 136
                };
            (n.JS_SHA3_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(e) {
                return "[object Array]" === Object.prototype.toString.call(e)
            }), o && (n.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(e) {
                return "object" == typeof e && e.buffer && e.buffer.constructor === ArrayBuffer
            });
            for (var m = function(e, t, r) {
                    return function(n) {
                        return new C(e, t, e).update(n)[r]()
                    }
                }, y = function(e, t, r) {
                    return function(n, s) {
                        return new C(e, t, s).update(n)[r]()
                    }
                }, b = function(e, t, r) {
                    return function(t, n, s, a) {
                        return A["cshake" + e].update(t, n, s, a)[r]()
                    }
                }, x = function(e, t, r) {
                    return function(t, n, s, a) {
                        return A["kmac" + e].update(t, n, s, a)[r]()
                    }
                }, v = function(e, t, r, n) {
                    for (var s = 0; s < p.length; ++s) {
                        var a = p[s];
                        e[a] = t(r, n, a)
                    }
                    return e
                }, w = function(e, t) {
                    var r = m(e, t, "hex");
                    return r.create = function() {
                        return new C(e, t, e)
                    }, r.update = function(e) {
                        return r.create().update(e)
                    }, v(r, m, e, t)
                }, E = [{
                    name: "keccak",
                    padding: [1, 256, 65536, 0x1000000],
                    bits: f,
                    createMethod: w
                }, {
                    name: "sha3",
                    padding: [6, 1536, 393216, 0x6000000],
                    bits: f,
                    createMethod: w
                }, {
                    name: "shake",
                    padding: [31, 7936, 2031616, 0x1f000000],
                    bits: h,
                    createMethod: function(e, t) {
                        var r = y(e, t, "hex");
                        return r.create = function(r) {
                            return new C(e, t, r)
                        }, r.update = function(e, t) {
                            return r.create(t).update(e)
                        }, v(r, y, e, t)
                    }
                }, {
                    name: "cshake",
                    padding: c,
                    bits: h,
                    createMethod: function(e, t) {
                        var r = g[e],
                            n = b(e, t, "hex");
                        return n.create = function(n, s, a) {
                            return s || a ? new C(e, t, n).bytepad([s, a], r) : A["shake" + e].create(n)
                        }, n.update = function(e, t, r, s) {
                            return n.create(t, r, s).update(e)
                        }, v(n, b, e, t)
                    }
                }, {
                    name: "kmac",
                    padding: c,
                    bits: h,
                    createMethod: function(e, t) {
                        var r = g[e],
                            n = x(e, t, "hex");
                        return n.create = function(n, s, a) {
                            return new P(e, t, s).bytepad(["KMAC", a], r).bytepad([n], r)
                        }, n.update = function(e, t, r, s) {
                            return n.create(e, r, s).update(t)
                        }, v(n, x, e, t)
                    }
                }], A = {}, j = [], I = 0; I < E.length; ++I)
                for (var S = E[I], R = S.bits, k = 0; k < R.length; ++k) {
                    var _ = S.name + "_" + R[k];
                    if (j.push(_), A[_] = S.createMethod(R[k], S.padding), "sha3" !== S.name) {
                        var T = S.name + R[k];
                        j.push(T), A[T] = A[_]
                    }
                }

            function C(e, t, r) {
                this.blocks = [], this.s = [], this.padding = t, this.outputBits = r, this.reset = !0, this.finalized = !1, this.block = 0, this.start = 0, this.blockCount = 1600 - (e << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = r >> 5, this.extraBytes = (31 & r) >> 3;
                for (var n = 0; n < 50; ++n) this.s[n] = 0
            }

            function P(e, t, r) {
                C.call(this, e, t, r)
            }
            C.prototype.update = function(t) {
                if (this.finalized) throw Error("finalize already called");
                var r, n = typeof t;
                if ("string" !== n) {
                    if ("object" === n) {
                        if (null === t) throw Error(e);
                        else if (o && t.constructor === ArrayBuffer) t = new Uint8Array(t);
                        else if (!Array.isArray(t) && (!o || !ArrayBuffer.isView(t))) throw Error(e)
                    } else throw Error(e);
                    r = !0
                }
                for (var s, a, i = this.blocks, l = this.byteCount, c = t.length, u = this.blockCount, f = 0, h = this.s; f < c;) {
                    if (this.reset)
                        for (s = 1, this.reset = !1, i[0] = this.block; s < u + 1; ++s) i[s] = 0;
                    if (r)
                        for (s = this.start; f < c && s < l; ++f) i[s >> 2] |= t[f] << d[3 & s++];
                    else
                        for (s = this.start; f < c && s < l; ++f)(a = t.charCodeAt(f)) < 128 ? i[s >> 2] |= a << d[3 & s++] : (a < 2048 ? i[s >> 2] |= (192 | a >> 6) << d[3 & s++] : (a < 55296 || a >= 57344 ? i[s >> 2] |= (224 | a >> 12) << d[3 & s++] : (a = 65536 + ((1023 & a) << 10 | 1023 & t.charCodeAt(++f)), i[s >> 2] |= (240 | a >> 18) << d[3 & s++], i[s >> 2] |= (128 | a >> 12 & 63) << d[3 & s++]), i[s >> 2] |= (128 | a >> 6 & 63) << d[3 & s++]), i[s >> 2] |= (128 | 63 & a) << d[3 & s++]);
                    if (this.lastByteIndex = s, s >= l) {
                        for (this.start = s - l, this.block = i[u], s = 0; s < u; ++s) h[s] ^= i[s];
                        O(h), this.reset = !0
                    } else this.start = s
                }
                return this
            }, C.prototype.encode = function(e, t) {
                var r = 255 & e,
                    n = 1,
                    s = [r];
                for (e >>= 8, r = 255 & e; r > 0;) s.unshift(r), e >>= 8, r = 255 & e, ++n;
                return t ? s.push(n) : s.unshift(n), this.update(s), s.length
            }, C.prototype.encodeString = function(t) {
                var r, n = typeof t;
                if ("string" !== n) {
                    if ("object" === n) {
                        if (null === t) throw Error(e);
                        else if (o && t.constructor === ArrayBuffer) t = new Uint8Array(t);
                        else if (!Array.isArray(t) && (!o || !ArrayBuffer.isView(t))) throw Error(e)
                    } else throw Error(e);
                    r = !0
                }
                var s = 0,
                    a = t.length;
                if (r) s = a;
                else
                    for (var i = 0; i < t.length; ++i) {
                        var l = t.charCodeAt(i);
                        l < 128 ? s += 1 : l < 2048 ? s += 2 : l < 55296 || l >= 57344 ? s += 3 : (l = 65536 + ((1023 & l) << 10 | 1023 & t.charCodeAt(++i)), s += 4)
                    }
                return s += this.encode(8 * s), this.update(t), s
            }, C.prototype.bytepad = function(e, t) {
                for (var r = this.encode(t), n = 0; n < e.length; ++n) r += this.encodeString(e[n]);
                var s = [];
                return s.length = t - r % t, this.update(s), this
            }, C.prototype.finalize = function() {
                if (!this.finalized) {
                    this.finalized = !0;
                    var e = this.blocks,
                        t = this.lastByteIndex,
                        r = this.blockCount,
                        n = this.s;
                    if (e[t >> 2] |= this.padding[3 & t], this.lastByteIndex === this.byteCount)
                        for (t = 1, e[0] = e[r]; t < r + 1; ++t) e[t] = 0;
                    for (e[r - 1] |= 0x80000000, t = 0; t < r; ++t) n[t] ^= e[t];
                    O(n)
                }
            }, C.prototype.toString = C.prototype.hex = function() {
                this.finalize();
                for (var e, t = this.blockCount, r = this.s, n = this.outputBlocks, s = this.extraBytes, a = 0, i = 0, o = ""; i < n;) {
                    for (a = 0; a < t && i < n; ++a, ++i) o += l[(e = r[a]) >> 4 & 15] + l[15 & e] + l[e >> 12 & 15] + l[e >> 8 & 15] + l[e >> 20 & 15] + l[e >> 16 & 15] + l[e >> 28 & 15] + l[e >> 24 & 15];
                    i % t == 0 && (O(r), a = 0)
                }
                return s && (o += l[(e = r[a]) >> 4 & 15] + l[15 & e], s > 1 && (o += l[e >> 12 & 15] + l[e >> 8 & 15]), s > 2 && (o += l[e >> 20 & 15] + l[e >> 16 & 15])), o
            }, C.prototype.arrayBuffer = function() {
                this.finalize();
                for (var e, t = this.blockCount, r = this.s, n = this.outputBlocks, s = this.extraBytes, a = 0, i = 0, o = this.outputBits >> 3, l = new Uint32Array(e = new ArrayBuffer(s ? n + 1 << 2 : o)); i < n;) {
                    for (a = 0; a < t && i < n; ++a, ++i) l[i] = r[a];
                    i % t == 0 && O(r)
                }
                return s && (l[a] = r[a], e = e.slice(0, o)), e
            }, C.prototype.buffer = C.prototype.arrayBuffer, C.prototype.digest = C.prototype.array = function() {
                this.finalize();
                for (var e, t, r = this.blockCount, n = this.s, s = this.outputBlocks, a = this.extraBytes, i = 0, o = 0, l = []; o < s;) {
                    for (i = 0; i < r && o < s; ++i, ++o) e = o << 2, t = n[i], l[e] = 255 & t, l[e + 1] = t >> 8 & 255, l[e + 2] = t >> 16 & 255, l[e + 3] = t >> 24 & 255;
                    o % r == 0 && O(n)
                }
                return a && (e = o << 2, t = n[i], l[e] = 255 & t, a > 1 && (l[e + 1] = t >> 8 & 255), a > 2 && (l[e + 2] = t >> 16 & 255)), l
            }, P.prototype = new C, P.prototype.finalize = function() {
                return this.encode(this.outputBits, !0), C.prototype.finalize.call(this)
            };
            var O = function(e) {
                var t, r, n, s, a, i, o, l, c, d, f, h, p, g, m, y, b, x, v, w, E, A, j, I, S, R, k, _, T, C, P, O, N, M, D, B, U, L, F, J, H, W, K, G, z, q, V, Q, Y, Z, X, $, ee, et, er, en, es, ea, ei, eo, el, ec, ed;
                for (n = 0; n < 48; n += 2) s = e[0] ^ e[10] ^ e[20] ^ e[30] ^ e[40], a = e[1] ^ e[11] ^ e[21] ^ e[31] ^ e[41], i = e[2] ^ e[12] ^ e[22] ^ e[32] ^ e[42], o = e[3] ^ e[13] ^ e[23] ^ e[33] ^ e[43], l = e[4] ^ e[14] ^ e[24] ^ e[34] ^ e[44], c = e[5] ^ e[15] ^ e[25] ^ e[35] ^ e[45], d = e[6] ^ e[16] ^ e[26] ^ e[36] ^ e[46], f = e[7] ^ e[17] ^ e[27] ^ e[37] ^ e[47], h = e[8] ^ e[18] ^ e[28] ^ e[38] ^ e[48], p = e[9] ^ e[19] ^ e[29] ^ e[39] ^ e[49], t = h ^ (i << 1 | o >>> 31), r = p ^ (o << 1 | i >>> 31), e[0] ^= t, e[1] ^= r, e[10] ^= t, e[11] ^= r, e[20] ^= t, e[21] ^= r, e[30] ^= t, e[31] ^= r, e[40] ^= t, e[41] ^= r, t = s ^ (l << 1 | c >>> 31), r = a ^ (c << 1 | l >>> 31), e[2] ^= t, e[3] ^= r, e[12] ^= t, e[13] ^= r, e[22] ^= t, e[23] ^= r, e[32] ^= t, e[33] ^= r, e[42] ^= t, e[43] ^= r, t = i ^ (d << 1 | f >>> 31), r = o ^ (f << 1 | d >>> 31), e[4] ^= t, e[5] ^= r, e[14] ^= t, e[15] ^= r, e[24] ^= t, e[25] ^= r, e[34] ^= t, e[35] ^= r, e[44] ^= t, e[45] ^= r, t = l ^ (h << 1 | p >>> 31), r = c ^ (p << 1 | h >>> 31), e[6] ^= t, e[7] ^= r, e[16] ^= t, e[17] ^= r, e[26] ^= t, e[27] ^= r, e[36] ^= t, e[37] ^= r, e[46] ^= t, e[47] ^= r, t = d ^ (s << 1 | a >>> 31), r = f ^ (a << 1 | s >>> 31), e[8] ^= t, e[9] ^= r, e[18] ^= t, e[19] ^= r, e[28] ^= t, e[29] ^= r, e[38] ^= t, e[39] ^= r, e[48] ^= t, e[49] ^= r, g = e[0], m = e[1], q = e[11] << 4 | e[10] >>> 28, V = e[10] << 4 | e[11] >>> 28, _ = e[20] << 3 | e[21] >>> 29, T = e[21] << 3 | e[20] >>> 29, eo = e[31] << 9 | e[30] >>> 23, el = e[30] << 9 | e[31] >>> 23, W = e[40] << 18 | e[41] >>> 14, K = e[41] << 18 | e[40] >>> 14, M = e[2] << 1 | e[3] >>> 31, D = e[3] << 1 | e[2] >>> 31, y = e[13] << 12 | e[12] >>> 20, b = e[12] << 12 | e[13] >>> 20, Q = e[22] << 10 | e[23] >>> 22, Y = e[23] << 10 | e[22] >>> 22, C = e[33] << 13 | e[32] >>> 19, P = e[32] << 13 | e[33] >>> 19, ec = e[42] << 2 | e[43] >>> 30, ed = e[43] << 2 | e[42] >>> 30, et = e[5] << 30 | e[4] >>> 2, er = e[4] << 30 | e[5] >>> 2, B = e[14] << 6 | e[15] >>> 26, U = e[15] << 6 | e[14] >>> 26, x = e[25] << 11 | e[24] >>> 21, v = e[24] << 11 | e[25] >>> 21, Z = e[34] << 15 | e[35] >>> 17, X = e[35] << 15 | e[34] >>> 17, O = e[45] << 29 | e[44] >>> 3, N = e[44] << 29 | e[45] >>> 3, I = e[6] << 28 | e[7] >>> 4, S = e[7] << 28 | e[6] >>> 4, en = e[17] << 23 | e[16] >>> 9, es = e[16] << 23 | e[17] >>> 9, L = e[26] << 25 | e[27] >>> 7, F = e[27] << 25 | e[26] >>> 7, w = e[36] << 21 | e[37] >>> 11, E = e[37] << 21 | e[36] >>> 11, $ = e[47] << 24 | e[46] >>> 8, ee = e[46] << 24 | e[47] >>> 8, G = e[8] << 27 | e[9] >>> 5, z = e[9] << 27 | e[8] >>> 5, R = e[18] << 20 | e[19] >>> 12, k = e[19] << 20 | e[18] >>> 12, ea = e[29] << 7 | e[28] >>> 25, ei = e[28] << 7 | e[29] >>> 25, J = e[38] << 8 | e[39] >>> 24, H = e[39] << 8 | e[38] >>> 24, A = e[48] << 14 | e[49] >>> 18, j = e[49] << 14 | e[48] >>> 18, e[0] = g ^ ~y & x, e[1] = m ^ ~b & v, e[10] = I ^ ~R & _, e[11] = S ^ ~k & T, e[20] = M ^ ~B & L, e[21] = D ^ ~U & F, e[30] = G ^ ~q & Q, e[31] = z ^ ~V & Y, e[40] = et ^ ~en & ea, e[41] = er ^ ~es & ei, e[2] = y ^ ~x & w, e[3] = b ^ ~v & E, e[12] = R ^ ~_ & C, e[13] = k ^ ~T & P, e[22] = B ^ ~L & J, e[23] = U ^ ~F & H, e[32] = q ^ ~Q & Z, e[33] = V ^ ~Y & X, e[42] = en ^ ~ea & eo, e[43] = es ^ ~ei & el, e[4] = x ^ ~w & A, e[5] = v ^ ~E & j, e[14] = _ ^ ~C & O, e[15] = T ^ ~P & N, e[24] = L ^ ~J & W, e[25] = F ^ ~H & K, e[34] = Q ^ ~Z & $, e[35] = Y ^ ~X & ee, e[44] = ea ^ ~eo & ec, e[45] = ei ^ ~el & ed, e[6] = w ^ ~A & g, e[7] = E ^ ~j & m, e[16] = C ^ ~O & I, e[17] = P ^ ~N & S, e[26] = J ^ ~W & M, e[27] = H ^ ~K & D, e[36] = Z ^ ~$ & G, e[37] = X ^ ~ee & z, e[46] = eo ^ ~ec & et, e[47] = el ^ ~ed & er, e[8] = A ^ ~g & y, e[9] = j ^ ~m & b, e[18] = O ^ ~I & R, e[19] = N ^ ~S & k, e[28] = W ^ ~M & B, e[29] = K ^ ~D & U, e[38] = $ ^ ~G & q, e[39] = ee ^ ~z & V, e[48] = ec ^ ~et & en, e[49] = ed ^ ~er & es, e[0] ^= u[n], e[1] ^= u[n + 1]
            };
            if (a) t.exports = A;
            else {
                for (I = 0; I < j.length; ++I) n[j[I]] = A[j[I]];
                i && define(function() {
                    return A
                })
            }
        }()
    }, {}],
    "19SwW": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "isBytesLike", () => d), s.export(r, "isBytes", () => f), s.export(r, "arrayify", () => h), s.export(r, "concat", () => p), s.export(r, "stripZeros", () => g), s.export(r, "zeroPad", () => m), s.export(r, "isHexString", () => y), s.export(r, "hexlify", () => x), s.export(r, "hexDataLength", () => v), s.export(r, "hexDataSlice", () => w), s.export(r, "hexConcat", () => E), s.export(r, "hexValue", () => A), s.export(r, "hexStripZeros", () => j), s.export(r, "hexZeroPad", () => I), s.export(r, "splitSignature", () => S), s.export(r, "joinSignature", () => R);
        "use strict";
        var a = e("@ethersproject/logger"),
            i = e("./_version");
        let o = new(0, a.Logger)(i.version);

        function l(e) {
            return !!e.toHexString
        }

        function c(e) {
            return e.slice || (e.slice = function() {
                let t = Array.prototype.slice.call(arguments);
                return c(new Uint8Array(Array.prototype.slice.apply(e, t)))
            }), e
        }

        function d(e) {
            return y(e) && !(e.length % 2) || f(e)
        }

        function u(e) {
            return "number" == typeof e && e == e && e % 1 == 0
        }

        function f(e) {
            if (null == e) return !1;
            if (e.constructor === Uint8Array) return !0;
            if ("string" == typeof e || !u(e.length) || e.length < 0) return !1;
            for (let t = 0; t < e.length; t++) {
                let r = e[t];
                if (!u(r) || r < 0 || r >= 256) return !1
            }
            return !0
        }

        function h(e, t) {
            if (t || (t = {}), "number" == typeof e) {
                o.checkSafeUint53(e, "invalid arrayify value");
                let t = [];
                for (; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                return 0 === t.length && t.push(0), c(new Uint8Array(t))
            }
            if (t.allowMissingPrefix && "string" == typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), l(e) && (e = e.toHexString()), y(e)) {
                let r = e.substring(2);
                r.length % 2 && ("left" === t.hexPad ? r = "0" + r : "right" === t.hexPad ? r += "0" : o.throwArgumentError("hex data is odd-length", "value", e));
                let n = [];
                for (let e = 0; e < r.length; e += 2) n.push(parseInt(r.substring(e, e + 2), 16));
                return c(new Uint8Array(n))
            }
            return f(e) ? c(new Uint8Array(e)) : o.throwArgumentError("invalid arrayify value", "value", e)
        }

        function p(e) {
            let t = e.map(e => h(e)),
                r = new Uint8Array(t.reduce((e, t) => e + t.length, 0));
            return t.reduce((e, t) => (r.set(t, e), e + t.length), 0), c(r)
        }

        function g(e) {
            let t = h(e);
            if (0 === t.length) return t;
            let r = 0;
            for (; r < t.length && 0 === t[r];) r++;
            return r && (t = t.slice(r)), t
        }

        function m(e, t) {
            (e = h(e)).length > t && o.throwArgumentError("value out of range", "value", arguments[0]);
            let r = new Uint8Array(t);
            return r.set(e, t - e.length), c(r)
        }

        function y(e, t) {
            return "string" == typeof e && !!e.match(/^0x[0-9A-Fa-f]*$/) && (!t || e.length === 2 + 2 * t)
        }
        let b = "0123456789abcdef";

        function x(e, t) {
            if (t || (t = {}), "number" == typeof e) {
                o.checkSafeUint53(e, "invalid hexlify value");
                let t = "";
                for (; e;) t = b[15 & e] + t, e = Math.floor(e / 16);
                return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00"
            }
            if ("bigint" == typeof e) return (e = e.toString(16)).length % 2 ? "0x0" + e : "0x" + e;
            if (t.allowMissingPrefix && "string" == typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), l(e)) return e.toHexString();
            if (y(e)) return e.length % 2 && ("left" === t.hexPad ? e = "0x0" + e.substring(2) : "right" === t.hexPad ? e += "0" : o.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
            if (f(e)) {
                let t = "0x";
                for (let r = 0; r < e.length; r++) {
                    let n = e[r];
                    t += b[(240 & n) >> 4] + b[15 & n]
                }
                return t
            }
            return o.throwArgumentError("invalid hexlify value", "value", e)
        }

        function v(e) {
            if ("string" != typeof e) e = x(e);
            else if (!y(e) || e.length % 2) return null;
            return (e.length - 2) / 2
        }

        function w(e, t, r) {
            return ("string" != typeof e ? e = x(e) : (!y(e) || e.length % 2) && o.throwArgumentError("invalid hexData", "value", e), t = 2 + 2 * t, null != r) ? "0x" + e.substring(t, 2 + 2 * r) : "0x" + e.substring(t)
        }

        function E(e) {
            let t = "0x";
            return e.forEach(e => {
                t += x(e).substring(2)
            }), t
        }

        function A(e) {
            let t = j(x(e, {
                hexPad: "left"
            }));
            return "0x" === t ? "0x0" : t
        }

        function j(e) {
            "string" != typeof e && (e = x(e)), y(e) || o.throwArgumentError("invalid hex string", "value", e), e = e.substring(2);
            let t = 0;
            for (; t < e.length && "0" === e[t];) t++;
            return "0x" + e.substring(t)
        }

        function I(e, t) {
            for ("string" != typeof e ? e = x(e) : y(e) || o.throwArgumentError("invalid hex string", "value", e), e.length > 2 * t + 2 && o.throwArgumentError("value out of range", "value", arguments[1]); e.length < 2 * t + 2;) e = "0x0" + e.substring(2);
            return e
        }

        function S(e) {
            let t = {
                r: "0x",
                s: "0x",
                _vs: "0x",
                recoveryParam: 0,
                v: 0,
                yParityAndS: "0x",
                compact: "0x"
            };
            if (d(e)) {
                let r = h(e);
                64 === r.length ? (t.v = 27 + (r[32] >> 7), r[32] &= 127, t.r = x(r.slice(0, 32)), t.s = x(r.slice(32, 64))) : 65 === r.length ? (t.r = x(r.slice(0, 32)), t.s = x(r.slice(32, 64)), t.v = r[64]) : o.throwArgumentError("invalid signature string", "signature", e), t.v < 27 && (0 === t.v || 1 === t.v ? t.v += 27 : o.throwArgumentError("signature invalid v byte", "signature", e)), t.recoveryParam = 1 - t.v % 2, t.recoveryParam && (r[32] |= 128), t._vs = x(r.slice(32, 64))
            } else {
                if (t.r = e.r, t.s = e.s, t.v = e.v, t.recoveryParam = e.recoveryParam, t._vs = e._vs, null != t._vs) {
                    let r = m(h(t._vs), 32);
                    t._vs = x(r);
                    let n = +(r[0] >= 128);
                    null == t.recoveryParam ? t.recoveryParam = n : t.recoveryParam !== n && o.throwArgumentError("signature recoveryParam mismatch _vs", "signature", e), r[0] &= 127;
                    let s = x(r);
                    null == t.s ? t.s = s : t.s !== s && o.throwArgumentError("signature v mismatch _vs", "signature", e)
                }
                if (null == t.recoveryParam) null == t.v ? o.throwArgumentError("signature missing v and recoveryParam", "signature", e) : 0 === t.v || 1 === t.v ? t.recoveryParam = t.v : t.recoveryParam = 1 - t.v % 2;
                else if (null == t.v) t.v = 27 + t.recoveryParam;
                else {
                    let r = 0 === t.v || 1 === t.v ? t.v : 1 - t.v % 2;
                    t.recoveryParam !== r && o.throwArgumentError("signature recoveryParam mismatch v", "signature", e)
                }
                null != t.r && y(t.r) ? t.r = I(t.r, 32) : o.throwArgumentError("signature missing or invalid r", "signature", e), null != t.s && y(t.s) ? t.s = I(t.s, 32) : o.throwArgumentError("signature missing or invalid s", "signature", e);
                let r = h(t.s);
                r[0] >= 128 && o.throwArgumentError("signature s out of range", "signature", e), t.recoveryParam && (r[0] |= 128);
                let n = x(r);
                t._vs && (y(t._vs) || o.throwArgumentError("signature invalid _vs", "signature", e), t._vs = I(t._vs, 32)), null == t._vs ? t._vs = n : t._vs !== n && o.throwArgumentError("signature _vs mismatch v and s", "signature", e)
            }
            return t.yParityAndS = t._vs, t.compact = t.r + t.yParityAndS.substring(2), t
        }

        function R(e) {
            return x(p([(e = S(e)).r, e.s, e.recoveryParam ? "0x1c" : "0x1b"]))
        }
    }, {
        "@ethersproject/logger": "6NWvR",
        "./_version": "gnsK7",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "6NWvR": [function(e, t, r, n) {
        var s, a, i, o, l = e("@parcel/transformer-js/src/esmodule-helpers.js");
        l.defineInteropFlag(r), l.export(r, "LogLevel", () => i), l.export(r, "ErrorCode", () => o), l.export(r, "Logger", () => y);
        "use strict";
        var c = e("./_version");
        let d = !1,
            u = !1,
            f = {
                debug: 1,
                default: 2,
                info: 2,
                warning: 3,
                error: 4,
                off: 5
            },
            h = f.default,
            p = null,
            g = function() {
                try {
                    let e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach(t => {
                            try {
                                if ("test" !== "test".normalize(t)) throw Error("bad normalize")
                            } catch (r) {
                                e.push(t)
                            }
                        }), e.length) throw Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw Error("broken implementation")
                } catch (e) {
                    return e.message
                }
                return null
            }();
        (s = i || (i = {})).DEBUG = "DEBUG", s.INFO = "INFO", s.WARNING = "WARNING", s.ERROR = "ERROR", s.OFF = "OFF", (a = o || (o = {})).UNKNOWN_ERROR = "UNKNOWN_ERROR", a.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", a.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", a.NETWORK_ERROR = "NETWORK_ERROR", a.SERVER_ERROR = "SERVER_ERROR", a.TIMEOUT = "TIMEOUT", a.BUFFER_OVERRUN = "BUFFER_OVERRUN", a.NUMERIC_FAULT = "NUMERIC_FAULT", a.MISSING_NEW = "MISSING_NEW", a.INVALID_ARGUMENT = "INVALID_ARGUMENT", a.MISSING_ARGUMENT = "MISSING_ARGUMENT", a.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", a.CALL_EXCEPTION = "CALL_EXCEPTION", a.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", a.NONCE_EXPIRED = "NONCE_EXPIRED", a.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", a.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", a.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", a.ACTION_REJECTED = "ACTION_REJECTED";
        let m = "0123456789abcdef";
        class y {
            constructor(e) {
                Object.defineProperty(this, "version", {
                    enumerable: !0,
                    value: e,
                    writable: !1
                })
            }
            _log(e, t) {
                let r = e.toLowerCase();
                null == f[r] && this.throwArgumentError("invalid log level name", "logLevel", e), h > f[r] || console.log.apply(console, t)
            }
            debug(...e) {
                this._log(y.levels.DEBUG, e)
            }
            info(...e) {
                this._log(y.levels.INFO, e)
            }
            warn(...e) {
                this._log(y.levels.WARNING, e)
            }
            makeError(e, t, r) {
                if (u) return this.makeError("censored error", t, {});
                t || (t = y.errors.UNKNOWN_ERROR), r || (r = {});
                let n = [];
                Object.keys(r).forEach(e => {
                    let t = r[e];
                    try {
                        if (t instanceof Uint8Array) {
                            let r = "";
                            for (let e = 0; e < t.length; e++) r += m[t[e] >> 4], r += m[15 & t[e]];
                            n.push(e + "=Uint8Array(0x" + r + ")")
                        } else n.push(e + "=" + JSON.stringify(t))
                    } catch (t) {
                        n.push(e + "=" + JSON.stringify(r[e].toString()))
                    }
                }), n.push(`code=${t}`), n.push(`version=${this.version}`);
                let s = e,
                    a = "";
                switch (t) {
                    case o.NUMERIC_FAULT: {
                        a = "NUMERIC_FAULT";
                        let t = e;
                        switch (t) {
                            case "overflow":
                            case "underflow":
                            case "division-by-zero":
                                a += "-" + t;
                                break;
                            case "negative-power":
                            case "negative-width":
                                a += "-unsupported";
                                break;
                            case "unbound-bitwise-result":
                                a += "-unbound-result"
                        }
                        break
                    }
                    case o.CALL_EXCEPTION:
                    case o.INSUFFICIENT_FUNDS:
                    case o.MISSING_NEW:
                    case o.NONCE_EXPIRED:
                    case o.REPLACEMENT_UNDERPRICED:
                    case o.TRANSACTION_REPLACED:
                    case o.UNPREDICTABLE_GAS_LIMIT:
                        a = t
                }
                a && (e += " [ See: https://links.ethers.org/v5-errors-" + a + " ]"), n.length && (e += " (" + n.join(", ") + ")");
                let i = Error(e);
                return i.reason = s, i.code = t, Object.keys(r).forEach(function(e) {
                    i[e] = r[e]
                }), i
            }
            throwError(e, t, r) {
                throw this.makeError(e, t, r)
            }
            throwArgumentError(e, t, r) {
                return this.throwError(e, y.errors.INVALID_ARGUMENT, {
                    argument: t,
                    value: r
                })
            }
            assert(e, t, r, n) {
                e || this.throwError(t, r, n)
            }
            assertArgument(e, t, r, n) {
                e || this.throwArgumentError(t, r, n)
            }
            checkNormalize(e) {
                null == e && (e = "platform missing String.prototype.normalize"), g && this.throwError("platform missing String.prototype.normalize", y.errors.UNSUPPORTED_OPERATION, {
                    operation: "String.prototype.normalize",
                    form: g
                })
            }
            checkSafeUint53(e, t) {
                "number" == typeof e && (null == t && (t = "value not safe"), (e < 0 || e >= 0x1fffffffffffff) && this.throwError(t, y.errors.NUMERIC_FAULT, {
                    operation: "checkSafeInteger",
                    fault: "out-of-safe-range",
                    value: e
                }), e % 1 && this.throwError(t, y.errors.NUMERIC_FAULT, {
                    operation: "checkSafeInteger",
                    fault: "non-integer",
                    value: e
                }))
            }
            checkArgumentCount(e, t, r) {
                r = r ? ": " + r : "", e < t && this.throwError("missing argument" + r, y.errors.MISSING_ARGUMENT, {
                    count: e,
                    expectedCount: t
                }), e > t && this.throwError("too many arguments" + r, y.errors.UNEXPECTED_ARGUMENT, {
                    count: e,
                    expectedCount: t
                })
            }
            checkNew(e, t) {
                (e === Object || null == e) && this.throwError("missing new", y.errors.MISSING_NEW, {
                    name: t.name
                })
            }
            checkAbstract(e, t) {
                e === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", y.errors.UNSUPPORTED_OPERATION, {
                    name: e.name,
                    operation: "new"
                }) : (e === Object || null == e) && this.throwError("missing new", y.errors.MISSING_NEW, {
                    name: t.name
                })
            }
            static globalLogger() {
                return p || (p = new y(c.version)), p
            }
            static setCensorship(e, t) {
                if (!e && t && this.globalLogger().throwError("cannot permanently disable censorship", y.errors.UNSUPPORTED_OPERATION, {
                        operation: "setCensorship"
                    }), d) {
                    if (!e) return;
                    this.globalLogger().throwError("error censorship permanent", y.errors.UNSUPPORTED_OPERATION, {
                        operation: "setCensorship"
                    })
                }
                u = !!e, d = !!t
            }
            static setLogLevel(e) {
                let t = f[e.toLowerCase()];
                if (null == t) return void y.globalLogger().warn("invalid log level - " + e);
                h = t
            }
            static from(e) {
                return new y(e)
            }
        }
        y.errors = o, y.levels = i
    }, {
        "./_version": "aDnFn",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    aDnFn: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "logger/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    cI3Jn: [function(e, t, r, n) {
        r.interopDefault = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }, r.defineInteropFlag = function(e) {
            Object.defineProperty(e, "__esModule", {
                value: !0
            })
        }, r.exportAll = function(e, t) {
            return Object.keys(e).forEach(function(r) {
                "default" === r || "__esModule" === r || Object.prototype.hasOwnProperty.call(t, r) || Object.defineProperty(t, r, {
                    enumerable: !0,
                    get: function() {
                        return e[r]
                    }
                })
            }), t
        }, r.export = function(e, t, r) {
            Object.defineProperty(e, t, {
                enumerable: !0,
                get: r
            })
        }
    }, {}],
    gnsK7: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "bytes/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    edSy2: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "_toEscapedUtf8String", () => o._toEscapedUtf8String), s.export(r, "toUtf8Bytes", () => o.toUtf8Bytes), s.export(r, "toUtf8CodePoints", () => o.toUtf8CodePoints), s.export(r, "toUtf8String", () => o.toUtf8String), s.export(r, "Utf8ErrorFuncs", () => o.Utf8ErrorFuncs), s.export(r, "Utf8ErrorReason", () => o.Utf8ErrorReason), s.export(r, "UnicodeNormalizationForm", () => o.UnicodeNormalizationForm), s.export(r, "formatBytes32String", () => a.formatBytes32String), s.export(r, "parseBytes32String", () => a.parseBytes32String), s.export(r, "nameprep", () => i.nameprep);
        "use strict";
        var a = e("./bytes32"),
            i = e("./idna"),
            o = e("./utf8")
    }, {
        "./bytes32": "5F91f",
        "./idna": "kkxaO",
        "./utf8": "4E82p",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "5F91f": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "formatBytes32String", () => l), s.export(r, "parseBytes32String", () => c);
        "use strict";
        var a = e("@ethersproject/constants"),
            i = e("@ethersproject/bytes"),
            o = e("./utf8");

        function l(e) {
            let t = (0, o.toUtf8Bytes)(e);
            if (t.length > 31) throw Error("bytes32 string must be less than 32 bytes");
            return (0, i.hexlify)((0, i.concat)([t, a.HashZero]).slice(0, 32))
        }

        function c(e) {
            let t = (0, i.arrayify)(e);
            if (32 !== t.length) throw Error("invalid bytes32 - not 32 bytes long");
            if (0 !== t[31]) throw Error("invalid bytes32 string - no null terminator");
            let r = 31;
            for (; 0 === t[r - 1];) r--;
            return (0, o.toUtf8String)(t.slice(0, r))
        }
    }, {
        "@ethersproject/constants": "cSsuf",
        "@ethersproject/bytes": "19SwW",
        "./utf8": "4E82p",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    cSsuf: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "AddressZero", () => a.AddressZero), s.export(r, "NegativeOne", () => i.NegativeOne), s.export(r, "Zero", () => i.Zero), s.export(r, "One", () => i.One), s.export(r, "Two", () => i.Two), s.export(r, "WeiPerEther", () => i.WeiPerEther), s.export(r, "MaxUint256", () => i.MaxUint256), s.export(r, "MinInt256", () => i.MinInt256), s.export(r, "MaxInt256", () => i.MaxInt256), s.export(r, "HashZero", () => o.HashZero), s.export(r, "EtherSymbol", () => l.EtherSymbol);
        "use strict";
        var a = e("./addresses"),
            i = e("./bignumbers"),
            o = e("./hashes"),
            l = e("./strings")
    }, {
        "./addresses": "3I8he",
        "./bignumbers": "4GaKw",
        "./hashes": "iRbHe",
        "./strings": "ex5EG",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "3I8he": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "AddressZero", () => a);
        let a = "0x0000000000000000000000000000000000000000"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "4GaKw": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "NegativeOne", () => i), s.export(r, "Zero", () => o), s.export(r, "One", () => l), s.export(r, "Two", () => c), s.export(r, "WeiPerEther", () => d), s.export(r, "MaxUint256", () => u), s.export(r, "MinInt256", () => f), s.export(r, "MaxInt256", () => h);
        var a = e("@ethersproject/bignumber");
        let i = a.BigNumber.from(-1),
            o = a.BigNumber.from(0),
            l = a.BigNumber.from(1),
            c = a.BigNumber.from(2),
            d = a.BigNumber.from("1000000000000000000"),
            u = a.BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),
            f = a.BigNumber.from("-0x8000000000000000000000000000000000000000000000000000000000000000"),
            h = a.BigNumber.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")
    }, {
        "@ethersproject/bignumber": "hIcBX",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    hIcBX: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "BigNumber", () => a.BigNumber), s.export(r, "formatFixed", () => i.formatFixed), s.export(r, "FixedFormat", () => i.FixedFormat), s.export(r, "FixedNumber", () => i.FixedNumber), s.export(r, "parseFixed", () => i.parseFixed), s.export(r, "_base16To36", () => a._base16To36), s.export(r, "_base36To16", () => a._base36To16);
        var a = e("./bignumber"),
            i = e("./fixednumber")
    }, {
        "./bignumber": "ha6R2",
        "./fixednumber": "7GQTq",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    ha6R2: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "isBigNumberish", () => h), s.export(r, "BigNumber", () => g), s.export(r, "_base36To16", () => v), s.export(r, "_base16To36", () => w);
        "use strict";
        var a = e("bn.js"),
            i = s.interopDefault(a),
            o = e("@ethersproject/bytes"),
            l = e("@ethersproject/logger"),
            c = e("./_version"),
            d = i.default.BN;
        let u = new(0, l.Logger)(c.version),
            f = {};

        function h(e) {
            return null != e && (g.isBigNumber(e) || "number" == typeof e && e % 1 == 0 || "string" == typeof e && !!e.match(/^-?[0-9]+$/) || (0, o.isHexString)(e) || "bigint" == typeof e || (0, o.isBytes)(e))
        }
        let p = !1;
        class g {
            constructor(e, t) {
                e !== f && u.throwError("cannot call constructor directly; use BigNumber.from", l.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "new (BigNumber)"
                }), this._hex = t, this._isBigNumber = !0, Object.freeze(this)
            }
            fromTwos(e) {
                return y(b(this).fromTwos(e))
            }
            toTwos(e) {
                return y(b(this).toTwos(e))
            }
            abs() {
                return "-" === this._hex[0] ? g.from(this._hex.substring(1)) : this
            }
            add(e) {
                return y(b(this).add(b(e)))
            }
            sub(e) {
                return y(b(this).sub(b(e)))
            }
            div(e) {
                return g.from(e).isZero() && x("division-by-zero", "div"), y(b(this).div(b(e)))
            }
            mul(e) {
                return y(b(this).mul(b(e)))
            }
            mod(e) {
                let t = b(e);
                return t.isNeg() && x("division-by-zero", "mod"), y(b(this).umod(t))
            }
            pow(e) {
                let t = b(e);
                return t.isNeg() && x("negative-power", "pow"), y(b(this).pow(t))
            }
            and(e) {
                let t = b(e);
                return (this.isNegative() || t.isNeg()) && x("unbound-bitwise-result", "and"), y(b(this).and(t))
            }
            or(e) {
                let t = b(e);
                return (this.isNegative() || t.isNeg()) && x("unbound-bitwise-result", "or"), y(b(this).or(t))
            }
            xor(e) {
                let t = b(e);
                return (this.isNegative() || t.isNeg()) && x("unbound-bitwise-result", "xor"), y(b(this).xor(t))
            }
            mask(e) {
                return (this.isNegative() || e < 0) && x("negative-width", "mask"), y(b(this).maskn(e))
            }
            shl(e) {
                return (this.isNegative() || e < 0) && x("negative-width", "shl"), y(b(this).shln(e))
            }
            shr(e) {
                return (this.isNegative() || e < 0) && x("negative-width", "shr"), y(b(this).shrn(e))
            }
            eq(e) {
                return b(this).eq(b(e))
            }
            lt(e) {
                return b(this).lt(b(e))
            }
            lte(e) {
                return b(this).lte(b(e))
            }
            gt(e) {
                return b(this).gt(b(e))
            }
            gte(e) {
                return b(this).gte(b(e))
            }
            isNegative() {
                return "-" === this._hex[0]
            }
            isZero() {
                return b(this).isZero()
            }
            toNumber() {
                try {
                    return b(this).toNumber()
                } catch (e) {
                    x("overflow", "toNumber", this.toString())
                }
                return null
            }
            toBigInt() {
                try {
                    return BigInt(this.toString())
                } catch (e) {}
                return u.throwError("this platform does not support BigInt", l.Logger.errors.UNSUPPORTED_OPERATION, {
                    value: this.toString()
                })
            }
            toString() {
                return arguments.length > 0 && (10 === arguments[0] ? p || (p = !0, u.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? u.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", l.Logger.errors.UNEXPECTED_ARGUMENT, {}) : u.throwError("BigNumber.toString does not accept parameters", l.Logger.errors.UNEXPECTED_ARGUMENT, {})), b(this).toString(10)
            }
            toHexString() {
                return this._hex
            }
            toJSON(e) {
                return {
                    type: "BigNumber",
                    hex: this.toHexString()
                }
            }
            static from(e) {
                if (e instanceof g) return e;
                if ("string" == typeof e) return e.match(/^-?0x[0-9a-f]+$/i) ? new g(f, m(e)) : e.match(/^-?[0-9]+$/) ? new g(f, m(new d(e))) : u.throwArgumentError("invalid BigNumber string", "value", e);
                if ("number" == typeof e) return e % 1 && x("underflow", "BigNumber.from", e), (e >= 0x1fffffffffffff || e <= -0x1fffffffffffff) && x("overflow", "BigNumber.from", e), g.from(String(e));
                if ("bigint" == typeof e) return g.from(e.toString());
                if ((0, o.isBytes)(e)) return g.from((0, o.hexlify)(e));
                if (e)
                    if (e.toHexString) {
                        let t = e.toHexString();
                        if ("string" == typeof t) return g.from(t)
                    } else {
                        let t = e._hex;
                        if (null == t && "BigNumber" === e.type && (t = e.hex), "string" == typeof t && ((0, o.isHexString)(t) || "-" === t[0] && (0, o.isHexString)(t.substring(1)))) return g.from(t)
                    } return u.throwArgumentError("invalid BigNumber value", "value", e)
            }
            static isBigNumber(e) {
                return !!(e && e._isBigNumber)
            }
        }

        function m(e) {
            if ("string" != typeof e) return m(e.toString(16));
            if ("-" === e[0]) return ("-" === (e = e.substring(1))[0] && u.throwArgumentError("invalid hex", "value", e), "0x00" === (e = m(e))) ? e : "-" + e;
            if ("0x" !== e.substring(0, 2) && (e = "0x" + e), "0x" === e) return "0x00";
            for (e.length % 2 && (e = "0x0" + e.substring(2)); e.length > 4 && "0x00" === e.substring(0, 4);) e = "0x" + e.substring(4);
            return e
        }

        function y(e) {
            return g.from(m(e))
        }

        function b(e) {
            let t = g.from(e).toHexString();
            return "-" === t[0] ? new d("-" + t.substring(3), 16) : new d(t.substring(2), 16)
        }

        function x(e, t, r) {
            let n = {
                fault: e,
                operation: t
            };
            return null != r && (n.value = r), u.throwError(e, l.Logger.errors.NUMERIC_FAULT, n)
        }

        function v(e) {
            return new d(e, 36).toString(16)
        }

        function w(e) {
            return new d(e, 16).toString(36)
        }
    }, {
        "bn.js": "lXPno",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/logger": "6NWvR",
        "./_version": "FsnUp",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    lXPno: [function(e, t, r, n) {
        ! function(t, r) {
            "use strict";

            function n(e, t) {
                if (!e) throw Error(t || "Assertion failed")
            }

            function s(e, t) {
                e.super_ = t;
                var r = function() {};
                r.prototype = t.prototype, e.prototype = new r, e.prototype.constructor = e
            }

            function a(e, t, r) {
                if (a.isBN(e)) return e;
                this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== e && (("le" === t || "be" === t) && (r = t, t = 10), this._init(e || 0, t || 10, r || "be"))
            }
            "object" == typeof t ? t.exports = a : r.BN = a, a.BN = a, a.wordSize = 26;
            try {
                u = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : e("bd440367abe2ded7").Buffer
            } catch (e) {}

            function i(e, t) {
                var r = e.charCodeAt(t);
                return r >= 48 && r <= 57 ? r - 48 : r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : void n(!1, "Invalid character in " + e)
            }

            function o(e, t, r) {
                var n = i(e, r);
                return r - 1 >= t && (n |= i(e, r - 1) << 4), n
            }

            function l(e, t, r, s) {
                for (var a = 0, i = 0, o = Math.min(e.length, r), l = t; l < o; l++) {
                    var c = e.charCodeAt(l) - 48;
                    a *= s, i = c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c, n(c >= 0 && i < s, "Invalid character"), a += i
                }
                return a
            }

            function c(e, t) {
                e.words = t.words, e.length = t.length, e.negative = t.negative, e.red = t.red
            }
            if (a.isBN = function(e) {
                    return e instanceof a || null !== e && "object" == typeof e && e.constructor.wordSize === a.wordSize && Array.isArray(e.words)
                }, a.max = function(e, t) {
                    return e.cmp(t) > 0 ? e : t
                }, a.min = function(e, t) {
                    return 0 > e.cmp(t) ? e : t
                }, a.prototype._init = function(e, t, r) {
                    if ("number" == typeof e) return this._initNumber(e, t, r);
                    if ("object" == typeof e) return this._initArray(e, t, r);
                    "hex" === t && (t = 16), n(t === (0 | t) && t >= 2 && t <= 36);
                    var s = 0;
                    "-" === (e = e.toString().replace(/\s+/g, ""))[0] && (s++, this.negative = 1), s < e.length && (16 === t ? this._parseHex(e, s, r) : (this._parseBase(e, t, s), "le" === r && this._initArray(this.toArray(), t, r)))
                }, a.prototype._initNumber = function(e, t, r) {
                    e < 0 && (this.negative = 1, e = -e), e < 0x4000000 ? (this.words = [0x3ffffff & e], this.length = 1) : e < 0x10000000000000 ? (this.words = [0x3ffffff & e, e / 0x4000000 & 0x3ffffff], this.length = 2) : (n(e < 0x20000000000000), this.words = [0x3ffffff & e, e / 0x4000000 & 0x3ffffff, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), t, r)
                }, a.prototype._initArray = function(e, t, r) {
                    if (n("number" == typeof e.length), e.length <= 0) return this.words = [0], this.length = 1, this;
                    this.length = Math.ceil(e.length / 3), this.words = Array(this.length);
                    for (var s, a, i = 0; i < this.length; i++) this.words[i] = 0;
                    var o = 0;
                    if ("be" === r)
                        for (i = e.length - 1, s = 0; i >= 0; i -= 3) a = e[i] | e[i - 1] << 8 | e[i - 2] << 16, this.words[s] |= a << o & 0x3ffffff, this.words[s + 1] = a >>> 26 - o & 0x3ffffff, (o += 24) >= 26 && (o -= 26, s++);
                    else if ("le" === r)
                        for (i = 0, s = 0; i < e.length; i += 3) a = e[i] | e[i + 1] << 8 | e[i + 2] << 16, this.words[s] |= a << o & 0x3ffffff, this.words[s + 1] = a >>> 26 - o & 0x3ffffff, (o += 24) >= 26 && (o -= 26, s++);
                    return this._strip()
                }, a.prototype._parseHex = function(e, t, r) {
                    this.length = Math.ceil((e.length - t) / 6), this.words = Array(this.length);
                    for (var n, s = 0; s < this.length; s++) this.words[s] = 0;
                    var a = 0,
                        i = 0;
                    if ("be" === r)
                        for (s = e.length - 1; s >= t; s -= 2) n = o(e, t, s) << a, this.words[i] |= 0x3ffffff & n, a >= 18 ? (a -= 18, i += 1, this.words[i] |= n >>> 26) : a += 8;
                    else
                        for (s = (e.length - t) % 2 == 0 ? t + 1 : t; s < e.length; s += 2) n = o(e, t, s) << a, this.words[i] |= 0x3ffffff & n, a >= 18 ? (a -= 18, i += 1, this.words[i] |= n >>> 26) : a += 8;
                    this._strip()
                }, a.prototype._parseBase = function(e, t, r) {
                    this.words = [0], this.length = 1;
                    for (var n = 0, s = 1; s <= 0x3ffffff; s *= t) n++;
                    n--, s = s / t | 0;
                    for (var a = e.length - r, i = a % n, o = Math.min(a, a - i) + r, c = 0, d = r; d < o; d += n) c = l(e, d, d + n, t), this.imuln(s), this.words[0] + c < 0x4000000 ? this.words[0] += c : this._iaddn(c);
                    if (0 !== i) {
                        var u = 1;
                        for (c = l(e, d, e.length, t), d = 0; d < i; d++) u *= t;
                        this.imuln(u), this.words[0] + c < 0x4000000 ? this.words[0] += c : this._iaddn(c)
                    }
                    this._strip()
                }, a.prototype.copy = function(e) {
                    e.words = Array(this.length);
                    for (var t = 0; t < this.length; t++) e.words[t] = this.words[t];
                    e.length = this.length, e.negative = this.negative, e.red = this.red
                }, a.prototype._move = function(e) {
                    c(e, this)
                }, a.prototype.clone = function() {
                    var e = new a(null);
                    return this.copy(e), e
                }, a.prototype._expand = function(e) {
                    for (; this.length < e;) this.words[this.length++] = 0;
                    return this
                }, a.prototype._strip = function() {
                    for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                    return this._normSign()
                }, a.prototype._normSign = function() {
                    return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                }, "undefined" != typeof Symbol && "function" == typeof Symbol.for) try {
                a.prototype[Symbol.for("nodejs.util.inspect.custom")] = d
            } catch (e) {
                a.prototype.inspect = d
            } else a.prototype.inspect = d;

            function d() {
                return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
            }
            var u, f = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                h = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                p = [0, 0, 0x2000000, 0x290d741, 0x1000000, 0x2e90edd, 0x39aa400, 0x267bf47, 0x1000000, 0x290d741, 1e7, 0x12959c3, 0x222c000, 0x3bd7765, 7529536, 0xadcea1, 0x1000000, 0x1704f61, 0x206fc40, 0x2cddcf9, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 0xb54ba0, 0xdaf26b, 0x1069c00, 0x138f9ad, 243e5, 0x1b4d89f, 0x2000000, 0x25528a1, 0x2b54a20, 0x3216b93, 0x39aa400];

            function g(e, t, r) {
                r.negative = t.negative ^ e.negative;
                var n = e.length + t.length | 0;
                r.length = n, n = n - 1 | 0;
                var s = 0 | e.words[0],
                    a = 0 | t.words[0],
                    i = s * a,
                    o = 0x3ffffff & i,
                    l = i / 0x4000000 | 0;
                r.words[0] = o;
                for (var c = 1; c < n; c++) {
                    for (var d = l >>> 26, u = 0x3ffffff & l, f = Math.min(c, t.length - 1), h = Math.max(0, c - e.length + 1); h <= f; h++) {
                        var p = c - h | 0;
                        d += (i = (s = 0 | e.words[p]) * (a = 0 | t.words[h]) + u) / 0x4000000 | 0, u = 0x3ffffff & i
                    }
                    r.words[c] = 0 | u, l = 0 | d
                }
                return 0 !== l ? r.words[c] = 0 | l : r.length--, r._strip()
            }
            a.prototype.toString = function(e, t) {
                if (t = 0 | t || 1, 16 === (e = e || 10) || "hex" === e) {
                    for (var r = "", s = 0, a = 0, i = 0; i < this.length; i++) {
                        var o = this.words[i],
                            l = ((o << s | a) & 0xffffff).toString(16);
                        a = o >>> 24 - s & 0xffffff, (s += 2) >= 26 && (s -= 26, i--), r = 0 !== a || i !== this.length - 1 ? f[6 - l.length] + l + r : l + r
                    }
                    for (0 !== a && (r = a.toString(16) + r); r.length % t != 0;) r = "0" + r;
                    return 0 !== this.negative && (r = "-" + r), r
                }
                if (e === (0 | e) && e >= 2 && e <= 36) {
                    var c = h[e],
                        d = p[e];
                    r = "";
                    var u = this.clone();
                    for (u.negative = 0; !u.isZero();) {
                        var g = u.modrn(d).toString(e);
                        r = (u = u.idivn(d)).isZero() ? g + r : f[c - g.length] + g + r
                    }
                    for (this.isZero() && (r = "0" + r); r.length % t != 0;) r = "0" + r;
                    return 0 !== this.negative && (r = "-" + r), r
                }
                n(!1, "Base should be between 2 and 36")
            }, a.prototype.toNumber = function() {
                var e = this.words[0];
                return 2 === this.length ? e += 0x4000000 * this.words[1] : 3 === this.length && 1 === this.words[2] ? e += 0x10000000000000 + 0x4000000 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -e : e
            }, a.prototype.toJSON = function() {
                return this.toString(16, 2)
            }, u && (a.prototype.toBuffer = function(e, t) {
                return this.toArrayLike(u, e, t)
            }), a.prototype.toArray = function(e, t) {
                return this.toArrayLike(Array, e, t)
            }, a.prototype.toArrayLike = function(e, t, r) {
                this._strip();
                var s = this.byteLength(),
                    a = r || Math.max(1, s);
                n(s <= a, "byte array longer than desired length"), n(a > 0, "Requested array length <= 0");
                var i = e.allocUnsafe ? e.allocUnsafe(a) : new e(a);
                return this["_toArrayLike" + ("le" === t ? "LE" : "BE")](i, s), i
            }, a.prototype._toArrayLikeLE = function(e, t) {
                for (var r = 0, n = 0, s = 0, a = 0; s < this.length; s++) {
                    var i = this.words[s] << a | n;
                    e[r++] = 255 & i, r < e.length && (e[r++] = i >> 8 & 255), r < e.length && (e[r++] = i >> 16 & 255), 6 === a ? (r < e.length && (e[r++] = i >> 24 & 255), n = 0, a = 0) : (n = i >>> 24, a += 2)
                }
                if (r < e.length)
                    for (e[r++] = n; r < e.length;) e[r++] = 0
            }, a.prototype._toArrayLikeBE = function(e, t) {
                for (var r = e.length - 1, n = 0, s = 0, a = 0; s < this.length; s++) {
                    var i = this.words[s] << a | n;
                    e[r--] = 255 & i, r >= 0 && (e[r--] = i >> 8 & 255), r >= 0 && (e[r--] = i >> 16 & 255), 6 === a ? (r >= 0 && (e[r--] = i >> 24 & 255), n = 0, a = 0) : (n = i >>> 24, a += 2)
                }
                if (r >= 0)
                    for (e[r--] = n; r >= 0;) e[r--] = 0
            }, Math.clz32 ? a.prototype._countBits = function(e) {
                return 32 - Math.clz32(e)
            } : a.prototype._countBits = function(e) {
                var t = e,
                    r = 0;
                return t >= 4096 && (r += 13, t >>>= 13), t >= 64 && (r += 7, t >>>= 7), t >= 8 && (r += 4, t >>>= 4), t >= 2 && (r += 2, t >>>= 2), r + t
            }, a.prototype._zeroBits = function(e) {
                if (0 === e) return 26;
                var t = e,
                    r = 0;
                return (8191 & t) == 0 && (r += 13, t >>>= 13), (127 & t) == 0 && (r += 7, t >>>= 7), (15 & t) == 0 && (r += 4, t >>>= 4), (3 & t) == 0 && (r += 2, t >>>= 2), (1 & t) == 0 && r++, r
            }, a.prototype.bitLength = function() {
                var e = this.words[this.length - 1],
                    t = this._countBits(e);
                return (this.length - 1) * 26 + t
            }, a.prototype.zeroBits = function() {
                if (this.isZero()) return 0;
                for (var e = 0, t = 0; t < this.length; t++) {
                    var r = this._zeroBits(this.words[t]);
                    if (e += r, 26 !== r) break
                }
                return e
            }, a.prototype.byteLength = function() {
                return Math.ceil(this.bitLength() / 8)
            }, a.prototype.toTwos = function(e) {
                return 0 !== this.negative ? this.abs().inotn(e).iaddn(1) : this.clone()
            }, a.prototype.fromTwos = function(e) {
                return this.testn(e - 1) ? this.notn(e).iaddn(1).ineg() : this.clone()
            }, a.prototype.isNeg = function() {
                return 0 !== this.negative
            }, a.prototype.neg = function() {
                return this.clone().ineg()
            }, a.prototype.ineg = function() {
                return this.isZero() || (this.negative ^= 1), this
            }, a.prototype.iuor = function(e) {
                for (; this.length < e.length;) this.words[this.length++] = 0;
                for (var t = 0; t < e.length; t++) this.words[t] = this.words[t] | e.words[t];
                return this._strip()
            }, a.prototype.ior = function(e) {
                return n((this.negative | e.negative) == 0), this.iuor(e)
            }, a.prototype.or = function(e) {
                return this.length > e.length ? this.clone().ior(e) : e.clone().ior(this)
            }, a.prototype.uor = function(e) {
                return this.length > e.length ? this.clone().iuor(e) : e.clone().iuor(this)
            }, a.prototype.iuand = function(e) {
                var t;
                t = this.length > e.length ? e : this;
                for (var r = 0; r < t.length; r++) this.words[r] = this.words[r] & e.words[r];
                return this.length = t.length, this._strip()
            }, a.prototype.iand = function(e) {
                return n((this.negative | e.negative) == 0), this.iuand(e)
            }, a.prototype.and = function(e) {
                return this.length > e.length ? this.clone().iand(e) : e.clone().iand(this)
            }, a.prototype.uand = function(e) {
                return this.length > e.length ? this.clone().iuand(e) : e.clone().iuand(this)
            }, a.prototype.iuxor = function(e) {
                this.length > e.length ? (t = this, r = e) : (t = e, r = this);
                for (var t, r, n = 0; n < r.length; n++) this.words[n] = t.words[n] ^ r.words[n];
                if (this !== t)
                    for (; n < t.length; n++) this.words[n] = t.words[n];
                return this.length = t.length, this._strip()
            }, a.prototype.ixor = function(e) {
                return n((this.negative | e.negative) == 0), this.iuxor(e)
            }, a.prototype.xor = function(e) {
                return this.length > e.length ? this.clone().ixor(e) : e.clone().ixor(this)
            }, a.prototype.uxor = function(e) {
                return this.length > e.length ? this.clone().iuxor(e) : e.clone().iuxor(this)
            }, a.prototype.inotn = function(e) {
                n("number" == typeof e && e >= 0);
                var t = 0 | Math.ceil(e / 26),
                    r = e % 26;
                this._expand(t), r > 0 && t--;
                for (var s = 0; s < t; s++) this.words[s] = 0x3ffffff & ~this.words[s];
                return r > 0 && (this.words[s] = ~this.words[s] & 0x3ffffff >> 26 - r), this._strip()
            }, a.prototype.notn = function(e) {
                return this.clone().inotn(e)
            }, a.prototype.setn = function(e, t) {
                n("number" == typeof e && e >= 0);
                var r = e / 26 | 0,
                    s = e % 26;
                return this._expand(r + 1), t ? this.words[r] = this.words[r] | 1 << s : this.words[r] = this.words[r] & ~(1 << s), this._strip()
            }, a.prototype.iadd = function(e) {
                if (0 !== this.negative && 0 === e.negative) return this.negative = 0, t = this.isub(e), this.negative ^= 1, this._normSign();
                if (0 === this.negative && 0 !== e.negative) return e.negative = 0, t = this.isub(e), e.negative = 1, t._normSign();
                this.length > e.length ? (r = this, n = e) : (r = e, n = this);
                for (var t, r, n, s = 0, a = 0; a < n.length; a++) t = (0 | r.words[a]) + (0 | n.words[a]) + s, this.words[a] = 0x3ffffff & t, s = t >>> 26;
                for (; 0 !== s && a < r.length; a++) t = (0 | r.words[a]) + s, this.words[a] = 0x3ffffff & t, s = t >>> 26;
                if (this.length = r.length, 0 !== s) this.words[this.length] = s, this.length++;
                else if (r !== this)
                    for (; a < r.length; a++) this.words[a] = r.words[a];
                return this
            }, a.prototype.add = function(e) {
                var t;
                return 0 !== e.negative && 0 === this.negative ? (e.negative = 0, t = this.sub(e), e.negative ^= 1, t) : 0 === e.negative && 0 !== this.negative ? (this.negative = 0, t = e.sub(this), this.negative = 1, t) : this.length > e.length ? this.clone().iadd(e) : e.clone().iadd(this)
            }, a.prototype.isub = function(e) {
                if (0 !== e.negative) {
                    e.negative = 0;
                    var t, r, n = this.iadd(e);
                    return e.negative = 1, n._normSign()
                }
                if (0 !== this.negative) return this.negative = 0, this.iadd(e), this.negative = 1, this._normSign();
                var s = this.cmp(e);
                if (0 === s) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                s > 0 ? (t = this, r = e) : (t = e, r = this);
                for (var a = 0, i = 0; i < r.length; i++) a = (n = (0 | t.words[i]) - (0 | r.words[i]) + a) >> 26, this.words[i] = 0x3ffffff & n;
                for (; 0 !== a && i < t.length; i++) a = (n = (0 | t.words[i]) + a) >> 26, this.words[i] = 0x3ffffff & n;
                if (0 === a && i < t.length && t !== this)
                    for (; i < t.length; i++) this.words[i] = t.words[i];
                return this.length = Math.max(this.length, i), t !== this && (this.negative = 1), this._strip()
            }, a.prototype.sub = function(e) {
                return this.clone().isub(e)
            };
            var m = function(e, t, r) {
                var n, s, a, i = e.words,
                    o = t.words,
                    l = r.words,
                    c = 0,
                    d = 0 | i[0],
                    u = 8191 & d,
                    f = d >>> 13,
                    h = 0 | i[1],
                    p = 8191 & h,
                    g = h >>> 13,
                    m = 0 | i[2],
                    y = 8191 & m,
                    b = m >>> 13,
                    x = 0 | i[3],
                    v = 8191 & x,
                    w = x >>> 13,
                    E = 0 | i[4],
                    A = 8191 & E,
                    j = E >>> 13,
                    I = 0 | i[5],
                    S = 8191 & I,
                    R = I >>> 13,
                    k = 0 | i[6],
                    _ = 8191 & k,
                    T = k >>> 13,
                    C = 0 | i[7],
                    P = 8191 & C,
                    O = C >>> 13,
                    N = 0 | i[8],
                    M = 8191 & N,
                    D = N >>> 13,
                    B = 0 | i[9],
                    U = 8191 & B,
                    L = B >>> 13,
                    F = 0 | o[0],
                    J = 8191 & F,
                    H = F >>> 13,
                    W = 0 | o[1],
                    K = 8191 & W,
                    G = W >>> 13,
                    z = 0 | o[2],
                    q = 8191 & z,
                    V = z >>> 13,
                    Q = 0 | o[3],
                    Y = 8191 & Q,
                    Z = Q >>> 13,
                    X = 0 | o[4],
                    $ = 8191 & X,
                    ee = X >>> 13,
                    et = 0 | o[5],
                    er = 8191 & et,
                    en = et >>> 13,
                    es = 0 | o[6],
                    ea = 8191 & es,
                    ei = es >>> 13,
                    eo = 0 | o[7],
                    el = 8191 & eo,
                    ec = eo >>> 13,
                    ed = 0 | o[8],
                    eu = 8191 & ed,
                    ef = ed >>> 13,
                    eh = 0 | o[9],
                    ep = 8191 & eh,
                    eg = eh >>> 13;
                r.negative = e.negative ^ t.negative, r.length = 19, n = Math.imul(u, J);
                var em = (c + n | 0) + ((8191 & (s = (s = Math.imul(u, H)) + Math.imul(f, J) | 0)) << 13) | 0;
                c = ((a = Math.imul(f, H)) + (s >>> 13) | 0) + (em >>> 26) | 0, em &= 0x3ffffff, n = Math.imul(p, J), s = (s = Math.imul(p, H)) + Math.imul(g, J) | 0, a = Math.imul(g, H), n = n + Math.imul(u, K) | 0;
                var ey = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(u, G) | 0) + Math.imul(f, K) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(f, G) | 0) + (s >>> 13) | 0) + (ey >>> 26) | 0, ey &= 0x3ffffff, n = Math.imul(y, J), s = (s = Math.imul(y, H)) + Math.imul(b, J) | 0, a = Math.imul(b, H), n = n + Math.imul(p, K) | 0, s = (s = s + Math.imul(p, G) | 0) + Math.imul(g, K) | 0, a = a + Math.imul(g, G) | 0, n = n + Math.imul(u, q) | 0;
                var eb = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(u, V) | 0) + Math.imul(f, q) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(f, V) | 0) + (s >>> 13) | 0) + (eb >>> 26) | 0, eb &= 0x3ffffff, n = Math.imul(v, J), s = (s = Math.imul(v, H)) + Math.imul(w, J) | 0, a = Math.imul(w, H), n = n + Math.imul(y, K) | 0, s = (s = s + Math.imul(y, G) | 0) + Math.imul(b, K) | 0, a = a + Math.imul(b, G) | 0, n = n + Math.imul(p, q) | 0, s = (s = s + Math.imul(p, V) | 0) + Math.imul(g, q) | 0, a = a + Math.imul(g, V) | 0, n = n + Math.imul(u, Y) | 0;
                var ex = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(u, Z) | 0) + Math.imul(f, Y) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(f, Z) | 0) + (s >>> 13) | 0) + (ex >>> 26) | 0, ex &= 0x3ffffff, n = Math.imul(A, J), s = (s = Math.imul(A, H)) + Math.imul(j, J) | 0, a = Math.imul(j, H), n = n + Math.imul(v, K) | 0, s = (s = s + Math.imul(v, G) | 0) + Math.imul(w, K) | 0, a = a + Math.imul(w, G) | 0, n = n + Math.imul(y, q) | 0, s = (s = s + Math.imul(y, V) | 0) + Math.imul(b, q) | 0, a = a + Math.imul(b, V) | 0, n = n + Math.imul(p, Y) | 0, s = (s = s + Math.imul(p, Z) | 0) + Math.imul(g, Y) | 0, a = a + Math.imul(g, Z) | 0, n = n + Math.imul(u, $) | 0;
                var ev = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(u, ee) | 0) + Math.imul(f, $) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(f, ee) | 0) + (s >>> 13) | 0) + (ev >>> 26) | 0, ev &= 0x3ffffff, n = Math.imul(S, J), s = (s = Math.imul(S, H)) + Math.imul(R, J) | 0, a = Math.imul(R, H), n = n + Math.imul(A, K) | 0, s = (s = s + Math.imul(A, G) | 0) + Math.imul(j, K) | 0, a = a + Math.imul(j, G) | 0, n = n + Math.imul(v, q) | 0, s = (s = s + Math.imul(v, V) | 0) + Math.imul(w, q) | 0, a = a + Math.imul(w, V) | 0, n = n + Math.imul(y, Y) | 0, s = (s = s + Math.imul(y, Z) | 0) + Math.imul(b, Y) | 0, a = a + Math.imul(b, Z) | 0, n = n + Math.imul(p, $) | 0, s = (s = s + Math.imul(p, ee) | 0) + Math.imul(g, $) | 0, a = a + Math.imul(g, ee) | 0, n = n + Math.imul(u, er) | 0;
                var ew = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(u, en) | 0) + Math.imul(f, er) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(f, en) | 0) + (s >>> 13) | 0) + (ew >>> 26) | 0, ew &= 0x3ffffff, n = Math.imul(_, J), s = (s = Math.imul(_, H)) + Math.imul(T, J) | 0, a = Math.imul(T, H), n = n + Math.imul(S, K) | 0, s = (s = s + Math.imul(S, G) | 0) + Math.imul(R, K) | 0, a = a + Math.imul(R, G) | 0, n = n + Math.imul(A, q) | 0, s = (s = s + Math.imul(A, V) | 0) + Math.imul(j, q) | 0, a = a + Math.imul(j, V) | 0, n = n + Math.imul(v, Y) | 0, s = (s = s + Math.imul(v, Z) | 0) + Math.imul(w, Y) | 0, a = a + Math.imul(w, Z) | 0, n = n + Math.imul(y, $) | 0, s = (s = s + Math.imul(y, ee) | 0) + Math.imul(b, $) | 0, a = a + Math.imul(b, ee) | 0, n = n + Math.imul(p, er) | 0, s = (s = s + Math.imul(p, en) | 0) + Math.imul(g, er) | 0, a = a + Math.imul(g, en) | 0, n = n + Math.imul(u, ea) | 0;
                var eE = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(u, ei) | 0) + Math.imul(f, ea) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(f, ei) | 0) + (s >>> 13) | 0) + (eE >>> 26) | 0, eE &= 0x3ffffff, n = Math.imul(P, J), s = (s = Math.imul(P, H)) + Math.imul(O, J) | 0, a = Math.imul(O, H), n = n + Math.imul(_, K) | 0, s = (s = s + Math.imul(_, G) | 0) + Math.imul(T, K) | 0, a = a + Math.imul(T, G) | 0, n = n + Math.imul(S, q) | 0, s = (s = s + Math.imul(S, V) | 0) + Math.imul(R, q) | 0, a = a + Math.imul(R, V) | 0, n = n + Math.imul(A, Y) | 0, s = (s = s + Math.imul(A, Z) | 0) + Math.imul(j, Y) | 0, a = a + Math.imul(j, Z) | 0, n = n + Math.imul(v, $) | 0, s = (s = s + Math.imul(v, ee) | 0) + Math.imul(w, $) | 0, a = a + Math.imul(w, ee) | 0, n = n + Math.imul(y, er) | 0, s = (s = s + Math.imul(y, en) | 0) + Math.imul(b, er) | 0, a = a + Math.imul(b, en) | 0, n = n + Math.imul(p, ea) | 0, s = (s = s + Math.imul(p, ei) | 0) + Math.imul(g, ea) | 0, a = a + Math.imul(g, ei) | 0, n = n + Math.imul(u, el) | 0;
                var eA = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(u, ec) | 0) + Math.imul(f, el) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(f, ec) | 0) + (s >>> 13) | 0) + (eA >>> 26) | 0, eA &= 0x3ffffff, n = Math.imul(M, J), s = (s = Math.imul(M, H)) + Math.imul(D, J) | 0, a = Math.imul(D, H), n = n + Math.imul(P, K) | 0, s = (s = s + Math.imul(P, G) | 0) + Math.imul(O, K) | 0, a = a + Math.imul(O, G) | 0, n = n + Math.imul(_, q) | 0, s = (s = s + Math.imul(_, V) | 0) + Math.imul(T, q) | 0, a = a + Math.imul(T, V) | 0, n = n + Math.imul(S, Y) | 0, s = (s = s + Math.imul(S, Z) | 0) + Math.imul(R, Y) | 0, a = a + Math.imul(R, Z) | 0, n = n + Math.imul(A, $) | 0, s = (s = s + Math.imul(A, ee) | 0) + Math.imul(j, $) | 0, a = a + Math.imul(j, ee) | 0, n = n + Math.imul(v, er) | 0, s = (s = s + Math.imul(v, en) | 0) + Math.imul(w, er) | 0, a = a + Math.imul(w, en) | 0, n = n + Math.imul(y, ea) | 0, s = (s = s + Math.imul(y, ei) | 0) + Math.imul(b, ea) | 0, a = a + Math.imul(b, ei) | 0, n = n + Math.imul(p, el) | 0, s = (s = s + Math.imul(p, ec) | 0) + Math.imul(g, el) | 0, a = a + Math.imul(g, ec) | 0, n = n + Math.imul(u, eu) | 0;
                var ej = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(u, ef) | 0) + Math.imul(f, eu) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(f, ef) | 0) + (s >>> 13) | 0) + (ej >>> 26) | 0, ej &= 0x3ffffff, n = Math.imul(U, J), s = (s = Math.imul(U, H)) + Math.imul(L, J) | 0, a = Math.imul(L, H), n = n + Math.imul(M, K) | 0, s = (s = s + Math.imul(M, G) | 0) + Math.imul(D, K) | 0, a = a + Math.imul(D, G) | 0, n = n + Math.imul(P, q) | 0, s = (s = s + Math.imul(P, V) | 0) + Math.imul(O, q) | 0, a = a + Math.imul(O, V) | 0, n = n + Math.imul(_, Y) | 0, s = (s = s + Math.imul(_, Z) | 0) + Math.imul(T, Y) | 0, a = a + Math.imul(T, Z) | 0, n = n + Math.imul(S, $) | 0, s = (s = s + Math.imul(S, ee) | 0) + Math.imul(R, $) | 0, a = a + Math.imul(R, ee) | 0, n = n + Math.imul(A, er) | 0, s = (s = s + Math.imul(A, en) | 0) + Math.imul(j, er) | 0, a = a + Math.imul(j, en) | 0, n = n + Math.imul(v, ea) | 0, s = (s = s + Math.imul(v, ei) | 0) + Math.imul(w, ea) | 0, a = a + Math.imul(w, ei) | 0, n = n + Math.imul(y, el) | 0, s = (s = s + Math.imul(y, ec) | 0) + Math.imul(b, el) | 0, a = a + Math.imul(b, ec) | 0, n = n + Math.imul(p, eu) | 0, s = (s = s + Math.imul(p, ef) | 0) + Math.imul(g, eu) | 0, a = a + Math.imul(g, ef) | 0, n = n + Math.imul(u, ep) | 0;
                var eI = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(u, eg) | 0) + Math.imul(f, ep) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(f, eg) | 0) + (s >>> 13) | 0) + (eI >>> 26) | 0, eI &= 0x3ffffff, n = Math.imul(U, K), s = (s = Math.imul(U, G)) + Math.imul(L, K) | 0, a = Math.imul(L, G), n = n + Math.imul(M, q) | 0, s = (s = s + Math.imul(M, V) | 0) + Math.imul(D, q) | 0, a = a + Math.imul(D, V) | 0, n = n + Math.imul(P, Y) | 0, s = (s = s + Math.imul(P, Z) | 0) + Math.imul(O, Y) | 0, a = a + Math.imul(O, Z) | 0, n = n + Math.imul(_, $) | 0, s = (s = s + Math.imul(_, ee) | 0) + Math.imul(T, $) | 0, a = a + Math.imul(T, ee) | 0, n = n + Math.imul(S, er) | 0, s = (s = s + Math.imul(S, en) | 0) + Math.imul(R, er) | 0, a = a + Math.imul(R, en) | 0, n = n + Math.imul(A, ea) | 0, s = (s = s + Math.imul(A, ei) | 0) + Math.imul(j, ea) | 0, a = a + Math.imul(j, ei) | 0, n = n + Math.imul(v, el) | 0, s = (s = s + Math.imul(v, ec) | 0) + Math.imul(w, el) | 0, a = a + Math.imul(w, ec) | 0, n = n + Math.imul(y, eu) | 0, s = (s = s + Math.imul(y, ef) | 0) + Math.imul(b, eu) | 0, a = a + Math.imul(b, ef) | 0, n = n + Math.imul(p, ep) | 0;
                var eS = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(p, eg) | 0) + Math.imul(g, ep) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(g, eg) | 0) + (s >>> 13) | 0) + (eS >>> 26) | 0, eS &= 0x3ffffff, n = Math.imul(U, q), s = (s = Math.imul(U, V)) + Math.imul(L, q) | 0, a = Math.imul(L, V), n = n + Math.imul(M, Y) | 0, s = (s = s + Math.imul(M, Z) | 0) + Math.imul(D, Y) | 0, a = a + Math.imul(D, Z) | 0, n = n + Math.imul(P, $) | 0, s = (s = s + Math.imul(P, ee) | 0) + Math.imul(O, $) | 0, a = a + Math.imul(O, ee) | 0, n = n + Math.imul(_, er) | 0, s = (s = s + Math.imul(_, en) | 0) + Math.imul(T, er) | 0, a = a + Math.imul(T, en) | 0, n = n + Math.imul(S, ea) | 0, s = (s = s + Math.imul(S, ei) | 0) + Math.imul(R, ea) | 0, a = a + Math.imul(R, ei) | 0, n = n + Math.imul(A, el) | 0, s = (s = s + Math.imul(A, ec) | 0) + Math.imul(j, el) | 0, a = a + Math.imul(j, ec) | 0, n = n + Math.imul(v, eu) | 0, s = (s = s + Math.imul(v, ef) | 0) + Math.imul(w, eu) | 0, a = a + Math.imul(w, ef) | 0, n = n + Math.imul(y, ep) | 0;
                var eR = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(y, eg) | 0) + Math.imul(b, ep) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(b, eg) | 0) + (s >>> 13) | 0) + (eR >>> 26) | 0, eR &= 0x3ffffff, n = Math.imul(U, Y), s = (s = Math.imul(U, Z)) + Math.imul(L, Y) | 0, a = Math.imul(L, Z), n = n + Math.imul(M, $) | 0, s = (s = s + Math.imul(M, ee) | 0) + Math.imul(D, $) | 0, a = a + Math.imul(D, ee) | 0, n = n + Math.imul(P, er) | 0, s = (s = s + Math.imul(P, en) | 0) + Math.imul(O, er) | 0, a = a + Math.imul(O, en) | 0, n = n + Math.imul(_, ea) | 0, s = (s = s + Math.imul(_, ei) | 0) + Math.imul(T, ea) | 0, a = a + Math.imul(T, ei) | 0, n = n + Math.imul(S, el) | 0, s = (s = s + Math.imul(S, ec) | 0) + Math.imul(R, el) | 0, a = a + Math.imul(R, ec) | 0, n = n + Math.imul(A, eu) | 0, s = (s = s + Math.imul(A, ef) | 0) + Math.imul(j, eu) | 0, a = a + Math.imul(j, ef) | 0, n = n + Math.imul(v, ep) | 0;
                var ek = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(v, eg) | 0) + Math.imul(w, ep) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(w, eg) | 0) + (s >>> 13) | 0) + (ek >>> 26) | 0, ek &= 0x3ffffff, n = Math.imul(U, $), s = (s = Math.imul(U, ee)) + Math.imul(L, $) | 0, a = Math.imul(L, ee), n = n + Math.imul(M, er) | 0, s = (s = s + Math.imul(M, en) | 0) + Math.imul(D, er) | 0, a = a + Math.imul(D, en) | 0, n = n + Math.imul(P, ea) | 0, s = (s = s + Math.imul(P, ei) | 0) + Math.imul(O, ea) | 0, a = a + Math.imul(O, ei) | 0, n = n + Math.imul(_, el) | 0, s = (s = s + Math.imul(_, ec) | 0) + Math.imul(T, el) | 0, a = a + Math.imul(T, ec) | 0, n = n + Math.imul(S, eu) | 0, s = (s = s + Math.imul(S, ef) | 0) + Math.imul(R, eu) | 0, a = a + Math.imul(R, ef) | 0, n = n + Math.imul(A, ep) | 0;
                var e_ = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(A, eg) | 0) + Math.imul(j, ep) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(j, eg) | 0) + (s >>> 13) | 0) + (e_ >>> 26) | 0, e_ &= 0x3ffffff, n = Math.imul(U, er), s = (s = Math.imul(U, en)) + Math.imul(L, er) | 0, a = Math.imul(L, en), n = n + Math.imul(M, ea) | 0, s = (s = s + Math.imul(M, ei) | 0) + Math.imul(D, ea) | 0, a = a + Math.imul(D, ei) | 0, n = n + Math.imul(P, el) | 0, s = (s = s + Math.imul(P, ec) | 0) + Math.imul(O, el) | 0, a = a + Math.imul(O, ec) | 0, n = n + Math.imul(_, eu) | 0, s = (s = s + Math.imul(_, ef) | 0) + Math.imul(T, eu) | 0, a = a + Math.imul(T, ef) | 0, n = n + Math.imul(S, ep) | 0;
                var eT = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(S, eg) | 0) + Math.imul(R, ep) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(R, eg) | 0) + (s >>> 13) | 0) + (eT >>> 26) | 0, eT &= 0x3ffffff, n = Math.imul(U, ea), s = (s = Math.imul(U, ei)) + Math.imul(L, ea) | 0, a = Math.imul(L, ei), n = n + Math.imul(M, el) | 0, s = (s = s + Math.imul(M, ec) | 0) + Math.imul(D, el) | 0, a = a + Math.imul(D, ec) | 0, n = n + Math.imul(P, eu) | 0, s = (s = s + Math.imul(P, ef) | 0) + Math.imul(O, eu) | 0, a = a + Math.imul(O, ef) | 0, n = n + Math.imul(_, ep) | 0;
                var eC = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(_, eg) | 0) + Math.imul(T, ep) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(T, eg) | 0) + (s >>> 13) | 0) + (eC >>> 26) | 0, eC &= 0x3ffffff, n = Math.imul(U, el), s = (s = Math.imul(U, ec)) + Math.imul(L, el) | 0, a = Math.imul(L, ec), n = n + Math.imul(M, eu) | 0, s = (s = s + Math.imul(M, ef) | 0) + Math.imul(D, eu) | 0, a = a + Math.imul(D, ef) | 0, n = n + Math.imul(P, ep) | 0;
                var eP = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(P, eg) | 0) + Math.imul(O, ep) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(O, eg) | 0) + (s >>> 13) | 0) + (eP >>> 26) | 0, eP &= 0x3ffffff, n = Math.imul(U, eu), s = (s = Math.imul(U, ef)) + Math.imul(L, eu) | 0, a = Math.imul(L, ef), n = n + Math.imul(M, ep) | 0;
                var eO = (c + n | 0) + ((8191 & (s = (s = s + Math.imul(M, eg) | 0) + Math.imul(D, ep) | 0)) << 13) | 0;
                c = ((a = a + Math.imul(D, eg) | 0) + (s >>> 13) | 0) + (eO >>> 26) | 0, eO &= 0x3ffffff, n = Math.imul(U, ep);
                var eN = (c + n | 0) + ((8191 & (s = (s = Math.imul(U, eg)) + Math.imul(L, ep) | 0)) << 13) | 0;
                return c = ((a = Math.imul(L, eg)) + (s >>> 13) | 0) + (eN >>> 26) | 0, eN &= 0x3ffffff, l[0] = em, l[1] = ey, l[2] = eb, l[3] = ex, l[4] = ev, l[5] = ew, l[6] = eE, l[7] = eA, l[8] = ej, l[9] = eI, l[10] = eS, l[11] = eR, l[12] = ek, l[13] = e_, l[14] = eT, l[15] = eC, l[16] = eP, l[17] = eO, l[18] = eN, 0 !== c && (l[19] = c, r.length++), r
            };

            function y(e, t, r) {
                r.negative = t.negative ^ e.negative, r.length = e.length + t.length;
                for (var n = 0, s = 0, a = 0; a < r.length - 1; a++) {
                    var i = s;
                    s = 0;
                    for (var o = 0x3ffffff & n, l = Math.min(a, t.length - 1), c = Math.max(0, a - e.length + 1); c <= l; c++) {
                        var d = a - c,
                            u = (0 | e.words[d]) * (0 | t.words[c]),
                            f = 0x3ffffff & u;
                        i = i + (u / 0x4000000 | 0) | 0, o = 0x3ffffff & (f = f + o | 0), s += (i = i + (f >>> 26) | 0) >>> 26, i &= 0x3ffffff
                    }
                    r.words[a] = o, n = i, i = s
                }
                return 0 !== n ? r.words[a] = n : r.length--, r._strip()
            }

            function b(e, t) {
                this.x = e, this.y = t
            }
            Math.imul || (m = g), a.prototype.mulTo = function(e, t) {
                var r, n = this.length + e.length;
                return 10 === this.length && 10 === e.length ? r = m(this, e, t) : n < 63 ? r = g(this, e, t) : r = y(this, e, t), r
            }, b.prototype.makeRBT = function(e) {
                for (var t = Array(e), r = a.prototype._countBits(e) - 1, n = 0; n < e; n++) t[n] = this.revBin(n, r, e);
                return t
            }, b.prototype.revBin = function(e, t, r) {
                if (0 === e || e === r - 1) return e;
                for (var n = 0, s = 0; s < t; s++) n |= (1 & e) << t - s - 1, e >>= 1;
                return n
            }, b.prototype.permute = function(e, t, r, n, s, a) {
                for (var i = 0; i < a; i++) n[i] = t[e[i]], s[i] = r[e[i]]
            }, b.prototype.transform = function(e, t, r, n, s, a) {
                this.permute(a, e, t, r, n, s);
                for (var i = 1; i < s; i <<= 1)
                    for (var o = i << 1, l = Math.cos(2 * Math.PI / o), c = Math.sin(2 * Math.PI / o), d = 0; d < s; d += o)
                        for (var u = l, f = c, h = 0; h < i; h++) {
                            var p = r[d + h],
                                g = n[d + h],
                                m = r[d + h + i],
                                y = n[d + h + i],
                                b = u * m - f * y;
                            y = u * y + f * m, m = b, r[d + h] = p + m, n[d + h] = g + y, r[d + h + i] = p - m, n[d + h + i] = g - y, h !== o && (b = l * u - c * f, f = l * f + c * u, u = b)
                        }
            }, b.prototype.guessLen13b = function(e, t) {
                var r = 1 | Math.max(t, e),
                    n = 1 & r,
                    s = 0;
                for (r = r / 2 | 0; r; r >>>= 1) s++;
                return 1 << s + 1 + n
            }, b.prototype.conjugate = function(e, t, r) {
                if (!(r <= 1))
                    for (var n = 0; n < r / 2; n++) {
                        var s = e[n];
                        e[n] = e[r - n - 1], e[r - n - 1] = s, s = t[n], t[n] = -t[r - n - 1], t[r - n - 1] = -s
                    }
            }, b.prototype.normalize13b = function(e, t) {
                for (var r = 0, n = 0; n < t / 2; n++) {
                    var s = 8192 * Math.round(e[2 * n + 1] / t) + Math.round(e[2 * n] / t) + r;
                    e[n] = 0x3ffffff & s, r = s < 0x4000000 ? 0 : s / 0x4000000 | 0
                }
                return e
            }, b.prototype.convert13b = function(e, t, r, s) {
                for (var a = 0, i = 0; i < t; i++) a += 0 | e[i], r[2 * i] = 8191 & a, a >>>= 13, r[2 * i + 1] = 8191 & a, a >>>= 13;
                for (i = 2 * t; i < s; ++i) r[i] = 0;
                n(0 === a), n((-8192 & a) == 0)
            }, b.prototype.stub = function(e) {
                for (var t = Array(e), r = 0; r < e; r++) t[r] = 0;
                return t
            }, b.prototype.mulp = function(e, t, r) {
                var n = 2 * this.guessLen13b(e.length, t.length),
                    s = this.makeRBT(n),
                    a = this.stub(n),
                    i = Array(n),
                    o = Array(n),
                    l = Array(n),
                    c = Array(n),
                    d = Array(n),
                    u = Array(n),
                    f = r.words;
                f.length = n, this.convert13b(e.words, e.length, i, n), this.convert13b(t.words, t.length, c, n), this.transform(i, a, o, l, n, s), this.transform(c, a, d, u, n, s);
                for (var h = 0; h < n; h++) {
                    var p = o[h] * d[h] - l[h] * u[h];
                    l[h] = o[h] * u[h] + l[h] * d[h], o[h] = p
                }
                return this.conjugate(o, l, n), this.transform(o, l, f, a, n, s), this.conjugate(f, a, n), this.normalize13b(f, n), r.negative = e.negative ^ t.negative, r.length = e.length + t.length, r._strip()
            }, a.prototype.mul = function(e) {
                var t = new a(null);
                return t.words = Array(this.length + e.length), this.mulTo(e, t)
            }, a.prototype.mulf = function(e) {
                var t = new a(null);
                return t.words = Array(this.length + e.length), y(this, e, t)
            }, a.prototype.imul = function(e) {
                return this.clone().mulTo(e, this)
            }, a.prototype.imuln = function(e) {
                var t = e < 0;
                t && (e = -e), n("number" == typeof e), n(e < 0x4000000);
                for (var r = 0, s = 0; s < this.length; s++) {
                    var a = (0 | this.words[s]) * e,
                        i = (0x3ffffff & a) + (0x3ffffff & r);
                    r >>= 26, r += (a / 0x4000000 | 0) + (i >>> 26), this.words[s] = 0x3ffffff & i
                }
                return 0 !== r && (this.words[s] = r, this.length++), this.length = 0 === e ? 1 : this.length, t ? this.ineg() : this
            }, a.prototype.muln = function(e) {
                return this.clone().imuln(e)
            }, a.prototype.sqr = function() {
                return this.mul(this)
            }, a.prototype.isqr = function() {
                return this.imul(this.clone())
            }, a.prototype.pow = function(e) {
                var t = function(e) {
                    for (var t = Array(e.bitLength()), r = 0; r < t.length; r++) {
                        var n = r / 26 | 0,
                            s = r % 26;
                        t[r] = e.words[n] >>> s & 1
                    }
                    return t
                }(e);
                if (0 === t.length) return new a(1);
                for (var r = this, n = 0; n < t.length && 0 === t[n]; n++, r = r.sqr());
                if (++n < t.length)
                    for (var s = r.sqr(); n < t.length; n++, s = s.sqr()) 0 !== t[n] && (r = r.mul(s));
                return r
            }, a.prototype.iushln = function(e) {
                n("number" == typeof e && e >= 0);
                var t, r = e % 26,
                    s = (e - r) / 26,
                    a = 0x3ffffff >>> 26 - r << 26 - r;
                if (0 !== r) {
                    var i = 0;
                    for (t = 0; t < this.length; t++) {
                        var o = this.words[t] & a,
                            l = (0 | this.words[t]) - o << r;
                        this.words[t] = l | i, i = o >>> 26 - r
                    }
                    i && (this.words[t] = i, this.length++)
                }
                if (0 !== s) {
                    for (t = this.length - 1; t >= 0; t--) this.words[t + s] = this.words[t];
                    for (t = 0; t < s; t++) this.words[t] = 0;
                    this.length += s
                }
                return this._strip()
            }, a.prototype.ishln = function(e) {
                return n(0 === this.negative), this.iushln(e)
            }, a.prototype.iushrn = function(e, t, r) {
                n("number" == typeof e && e >= 0);
                var s = t ? (t - t % 26) / 26 : 0,
                    a = e % 26,
                    i = Math.min((e - a) / 26, this.length),
                    o = 0x3ffffff ^ 0x3ffffff >>> a << a;
                if (s -= i, s = Math.max(0, s), r) {
                    for (var l = 0; l < i; l++) r.words[l] = this.words[l];
                    r.length = i
                }
                if (0 === i);
                else if (this.length > i)
                    for (this.length -= i, l = 0; l < this.length; l++) this.words[l] = this.words[l + i];
                else this.words[0] = 0, this.length = 1;
                var c = 0;
                for (l = this.length - 1; l >= 0 && (0 !== c || l >= s); l--) {
                    var d = 0 | this.words[l];
                    this.words[l] = c << 26 - a | d >>> a, c = d & o
                }
                return r && 0 !== c && (r.words[r.length++] = c), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip()
            }, a.prototype.ishrn = function(e, t, r) {
                return n(0 === this.negative), this.iushrn(e, t, r)
            }, a.prototype.shln = function(e) {
                return this.clone().ishln(e)
            }, a.prototype.ushln = function(e) {
                return this.clone().iushln(e)
            }, a.prototype.shrn = function(e) {
                return this.clone().ishrn(e)
            }, a.prototype.ushrn = function(e) {
                return this.clone().iushrn(e)
            }, a.prototype.testn = function(e) {
                n("number" == typeof e && e >= 0);
                var t = e % 26,
                    r = (e - t) / 26;
                return !(this.length <= r) && !!(this.words[r] & 1 << t)
            }, a.prototype.imaskn = function(e) {
                n("number" == typeof e && e >= 0);
                var t = e % 26,
                    r = (e - t) / 26;
                return (n(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) ? this : (0 !== t && r++, this.length = Math.min(r, this.length), 0 !== t && (this.words[this.length - 1] &= 0x3ffffff ^ 0x3ffffff >>> t << t), this._strip())
            }, a.prototype.maskn = function(e) {
                return this.clone().imaskn(e)
            }, a.prototype.iaddn = function(e) {
                return (n("number" == typeof e), n(e < 0x4000000), e < 0) ? this.isubn(-e) : 0 !== this.negative ? (1 === this.length && (0 | this.words[0]) <= e ? (this.words[0] = e - (0 | this.words[0]), this.negative = 0) : (this.negative = 0, this.isubn(e), this.negative = 1), this) : this._iaddn(e)
            }, a.prototype._iaddn = function(e) {
                this.words[0] += e;
                for (var t = 0; t < this.length && this.words[t] >= 0x4000000; t++) this.words[t] -= 0x4000000, t === this.length - 1 ? this.words[t + 1] = 1 : this.words[t + 1]++;
                return this.length = Math.max(this.length, t + 1), this
            }, a.prototype.isubn = function(e) {
                if (n("number" == typeof e), n(e < 0x4000000), e < 0) return this.iaddn(-e);
                if (0 !== this.negative) return this.negative = 0, this.iaddn(e), this.negative = 1, this;
                if (this.words[0] -= e, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                else
                    for (var t = 0; t < this.length && this.words[t] < 0; t++) this.words[t] += 0x4000000, this.words[t + 1] -= 1;
                return this._strip()
            }, a.prototype.addn = function(e) {
                return this.clone().iaddn(e)
            }, a.prototype.subn = function(e) {
                return this.clone().isubn(e)
            }, a.prototype.iabs = function() {
                return this.negative = 0, this
            }, a.prototype.abs = function() {
                return this.clone().iabs()
            }, a.prototype._ishlnsubmul = function(e, t, r) {
                var s, a, i = e.length + r;
                this._expand(i);
                var o = 0;
                for (s = 0; s < e.length; s++) {
                    a = (0 | this.words[s + r]) + o;
                    var l = (0 | e.words[s]) * t;
                    a -= 0x3ffffff & l, o = (a >> 26) - (l / 0x4000000 | 0), this.words[s + r] = 0x3ffffff & a
                }
                for (; s < this.length - r; s++) o = (a = (0 | this.words[s + r]) + o) >> 26, this.words[s + r] = 0x3ffffff & a;
                if (0 === o) return this._strip();
                for (n(-1 === o), o = 0, s = 0; s < this.length; s++) o = (a = -(0 | this.words[s]) + o) >> 26, this.words[s] = 0x3ffffff & a;
                return this.negative = 1, this._strip()
            }, a.prototype._wordDiv = function(e, t) {
                var r, n = this.length - e.length,
                    s = this.clone(),
                    i = e,
                    o = 0 | i.words[i.length - 1];
                0 != (n = 26 - this._countBits(o)) && (i = i.ushln(n), s.iushln(n), o = 0 | i.words[i.length - 1]);
                var l = s.length - i.length;
                if ("mod" !== t) {
                    (r = new a(null)).length = l + 1, r.words = Array(r.length);
                    for (var c = 0; c < r.length; c++) r.words[c] = 0
                }
                var d = s.clone()._ishlnsubmul(i, 1, l);
                0 === d.negative && (s = d, r && (r.words[l] = 1));
                for (var u = l - 1; u >= 0; u--) {
                    var f = (0 | s.words[i.length + u]) * 0x4000000 + (0 | s.words[i.length + u - 1]);
                    for (f = Math.min(f / o | 0, 0x3ffffff), s._ishlnsubmul(i, f, u); 0 !== s.negative;) f--, s.negative = 0, s._ishlnsubmul(i, 1, u), s.isZero() || (s.negative ^= 1);
                    r && (r.words[u] = f)
                }
                return r && r._strip(), s._strip(), "div" !== t && 0 !== n && s.iushrn(n), {
                    div: r || null,
                    mod: s
                }
            }, a.prototype.divmod = function(e, t, r) {
                var s, i, o;
                return (n(!e.isZero()), this.isZero()) ? {
                    div: new a(0),
                    mod: new a(0)
                } : 0 !== this.negative && 0 === e.negative ? (o = this.neg().divmod(e, t), "mod" !== t && (s = o.div.neg()), "div" !== t && (i = o.mod.neg(), r && 0 !== i.negative && i.iadd(e)), {
                    div: s,
                    mod: i
                }) : 0 === this.negative && 0 !== e.negative ? (o = this.divmod(e.neg(), t), "mod" !== t && (s = o.div.neg()), {
                    div: s,
                    mod: o.mod
                }) : (this.negative & e.negative) != 0 ? (o = this.neg().divmod(e.neg(), t), "div" !== t && (i = o.mod.neg(), r && 0 !== i.negative && i.isub(e)), {
                    div: o.div,
                    mod: i
                }) : e.length > this.length || 0 > this.cmp(e) ? {
                    div: new a(0),
                    mod: this
                } : 1 === e.length ? "div" === t ? {
                    div: this.divn(e.words[0]),
                    mod: null
                } : "mod" === t ? {
                    div: null,
                    mod: new a(this.modrn(e.words[0]))
                } : {
                    div: this.divn(e.words[0]),
                    mod: new a(this.modrn(e.words[0]))
                } : this._wordDiv(e, t)
            }, a.prototype.div = function(e) {
                return this.divmod(e, "div", !1).div
            }, a.prototype.mod = function(e) {
                return this.divmod(e, "mod", !1).mod
            }, a.prototype.umod = function(e) {
                return this.divmod(e, "mod", !0).mod
            }, a.prototype.divRound = function(e) {
                var t = this.divmod(e);
                if (t.mod.isZero()) return t.div;
                var r = 0 !== t.div.negative ? t.mod.isub(e) : t.mod,
                    n = e.ushrn(1),
                    s = e.andln(1),
                    a = r.cmp(n);
                return a < 0 || 1 === s && 0 === a ? t.div : 0 !== t.div.negative ? t.div.isubn(1) : t.div.iaddn(1)
            }, a.prototype.modrn = function(e) {
                var t = e < 0;
                t && (e = -e), n(e <= 0x3ffffff);
                for (var r = 0x4000000 % e, s = 0, a = this.length - 1; a >= 0; a--) s = (r * s + (0 | this.words[a])) % e;
                return t ? -s : s
            }, a.prototype.modn = function(e) {
                return this.modrn(e)
            }, a.prototype.idivn = function(e) {
                var t = e < 0;
                t && (e = -e), n(e <= 0x3ffffff);
                for (var r = 0, s = this.length - 1; s >= 0; s--) {
                    var a = (0 | this.words[s]) + 0x4000000 * r;
                    this.words[s] = a / e | 0, r = a % e
                }
                return this._strip(), t ? this.ineg() : this
            }, a.prototype.divn = function(e) {
                return this.clone().idivn(e)
            }, a.prototype.egcd = function(e) {
                n(0 === e.negative), n(!e.isZero());
                var t = this,
                    r = e.clone();
                t = 0 !== t.negative ? t.umod(e) : t.clone();
                for (var s = new a(1), i = new a(0), o = new a(0), l = new a(1), c = 0; t.isEven() && r.isEven();) t.iushrn(1), r.iushrn(1), ++c;
                for (var d = r.clone(), u = t.clone(); !t.isZero();) {
                    for (var f = 0, h = 1;
                        (t.words[0] & h) == 0 && f < 26; ++f, h <<= 1);
                    if (f > 0)
                        for (t.iushrn(f); f-- > 0;)(s.isOdd() || i.isOdd()) && (s.iadd(d), i.isub(u)), s.iushrn(1), i.iushrn(1);
                    for (var p = 0, g = 1;
                        (r.words[0] & g) == 0 && p < 26; ++p, g <<= 1);
                    if (p > 0)
                        for (r.iushrn(p); p-- > 0;)(o.isOdd() || l.isOdd()) && (o.iadd(d), l.isub(u)), o.iushrn(1), l.iushrn(1);
                    t.cmp(r) >= 0 ? (t.isub(r), s.isub(o), i.isub(l)) : (r.isub(t), o.isub(s), l.isub(i))
                }
                return {
                    a: o,
                    b: l,
                    gcd: r.iushln(c)
                }
            }, a.prototype._invmp = function(e) {
                n(0 === e.negative), n(!e.isZero());
                var t, r = this,
                    s = e.clone();
                r = 0 !== r.negative ? r.umod(e) : r.clone();
                for (var i = new a(1), o = new a(0), l = s.clone(); r.cmpn(1) > 0 && s.cmpn(1) > 0;) {
                    for (var c = 0, d = 1;
                        (r.words[0] & d) == 0 && c < 26; ++c, d <<= 1);
                    if (c > 0)
                        for (r.iushrn(c); c-- > 0;) i.isOdd() && i.iadd(l), i.iushrn(1);
                    for (var u = 0, f = 1;
                        (s.words[0] & f) == 0 && u < 26; ++u, f <<= 1);
                    if (u > 0)
                        for (s.iushrn(u); u-- > 0;) o.isOdd() && o.iadd(l), o.iushrn(1);
                    r.cmp(s) >= 0 ? (r.isub(s), i.isub(o)) : (s.isub(r), o.isub(i))
                }
                return 0 > (t = 0 === r.cmpn(1) ? i : o).cmpn(0) && t.iadd(e), t
            }, a.prototype.gcd = function(e) {
                if (this.isZero()) return e.abs();
                if (e.isZero()) return this.abs();
                var t = this.clone(),
                    r = e.clone();
                t.negative = 0, r.negative = 0;
                for (var n = 0; t.isEven() && r.isEven(); n++) t.iushrn(1), r.iushrn(1);
                for (;;) {
                    for (; t.isEven();) t.iushrn(1);
                    for (; r.isEven();) r.iushrn(1);
                    var s = t.cmp(r);
                    if (s < 0) {
                        var a = t;
                        t = r, r = a
                    } else if (0 === s || 0 === r.cmpn(1)) break;
                    t.isub(r)
                }
                return r.iushln(n)
            }, a.prototype.invm = function(e) {
                return this.egcd(e).a.umod(e)
            }, a.prototype.isEven = function() {
                return (1 & this.words[0]) == 0
            }, a.prototype.isOdd = function() {
                return (1 & this.words[0]) == 1
            }, a.prototype.andln = function(e) {
                return this.words[0] & e
            }, a.prototype.bincn = function(e) {
                n("number" == typeof e);
                var t = e % 26,
                    r = (e - t) / 26,
                    s = 1 << t;
                if (this.length <= r) return this._expand(r + 1), this.words[r] |= s, this;
                for (var a = s, i = r; 0 !== a && i < this.length; i++) {
                    var o = 0 | this.words[i];
                    o += a, a = o >>> 26, o &= 0x3ffffff, this.words[i] = o
                }
                return 0 !== a && (this.words[i] = a, this.length++), this
            }, a.prototype.isZero = function() {
                return 1 === this.length && 0 === this.words[0]
            }, a.prototype.cmpn = function(e) {
                var t, r = e < 0;
                if (0 !== this.negative && !r) return -1;
                if (0 === this.negative && r) return 1;
                if (this._strip(), this.length > 1) t = 1;
                else {
                    r && (e = -e), n(e <= 0x3ffffff, "Number is too big");
                    var s = 0 | this.words[0];
                    t = s === e ? 0 : s < e ? -1 : 1
                }
                return 0 !== this.negative ? 0 | -t : t
            }, a.prototype.cmp = function(e) {
                if (0 !== this.negative && 0 === e.negative) return -1;
                if (0 === this.negative && 0 !== e.negative) return 1;
                var t = this.ucmp(e);
                return 0 !== this.negative ? 0 | -t : t
            }, a.prototype.ucmp = function(e) {
                if (this.length > e.length) return 1;
                if (this.length < e.length) return -1;
                for (var t = 0, r = this.length - 1; r >= 0; r--) {
                    var n = 0 | this.words[r],
                        s = 0 | e.words[r];
                    if (n !== s) {
                        n < s ? t = -1 : n > s && (t = 1);
                        break
                    }
                }
                return t
            }, a.prototype.gtn = function(e) {
                return 1 === this.cmpn(e)
            }, a.prototype.gt = function(e) {
                return 1 === this.cmp(e)
            }, a.prototype.gten = function(e) {
                return this.cmpn(e) >= 0
            }, a.prototype.gte = function(e) {
                return this.cmp(e) >= 0
            }, a.prototype.ltn = function(e) {
                return -1 === this.cmpn(e)
            }, a.prototype.lt = function(e) {
                return -1 === this.cmp(e)
            }, a.prototype.lten = function(e) {
                return 0 >= this.cmpn(e)
            }, a.prototype.lte = function(e) {
                return 0 >= this.cmp(e)
            }, a.prototype.eqn = function(e) {
                return 0 === this.cmpn(e)
            }, a.prototype.eq = function(e) {
                return 0 === this.cmp(e)
            }, a.red = function(e) {
                return new I(e)
            }, a.prototype.toRed = function(e) {
                return n(!this.red, "Already a number in reduction context"), n(0 === this.negative, "red works only with positives"), e.convertTo(this)._forceRed(e)
            }, a.prototype.fromRed = function() {
                return n(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
            }, a.prototype._forceRed = function(e) {
                return this.red = e, this
            }, a.prototype.forceRed = function(e) {
                return n(!this.red, "Already a number in reduction context"), this._forceRed(e)
            }, a.prototype.redAdd = function(e) {
                return n(this.red, "redAdd works only with red numbers"), this.red.add(this, e)
            }, a.prototype.redIAdd = function(e) {
                return n(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, e)
            }, a.prototype.redSub = function(e) {
                return n(this.red, "redSub works only with red numbers"), this.red.sub(this, e)
            }, a.prototype.redISub = function(e) {
                return n(this.red, "redISub works only with red numbers"), this.red.isub(this, e)
            }, a.prototype.redShl = function(e) {
                return n(this.red, "redShl works only with red numbers"), this.red.shl(this, e)
            }, a.prototype.redMul = function(e) {
                return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, e), this.red.mul(this, e)
            }, a.prototype.redIMul = function(e) {
                return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, e), this.red.imul(this, e)
            }, a.prototype.redSqr = function() {
                return n(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
            }, a.prototype.redISqr = function() {
                return n(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
            }, a.prototype.redSqrt = function() {
                return n(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
            }, a.prototype.redInvm = function() {
                return n(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
            }, a.prototype.redNeg = function() {
                return n(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
            }, a.prototype.redPow = function(e) {
                return n(this.red && !e.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, e)
            };
            var x = {
                k256: null,
                p224: null,
                p192: null,
                p25519: null
            };

            function v(e, t) {
                this.name = e, this.p = new a(t, 16), this.n = this.p.bitLength(), this.k = new a(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
            }

            function w() {
                v.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
            }

            function E() {
                v.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
            }

            function A() {
                v.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
            }

            function j() {
                v.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
            }

            function I(e) {
                if ("string" == typeof e) {
                    var t = a._prime(e);
                    this.m = t.p, this.prime = t
                } else n(e.gtn(1), "modulus must be greater than 1"), this.m = e, this.prime = null
            }

            function S(e) {
                I.call(this, e), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new a(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
            }
            v.prototype._tmp = function() {
                var e = new a(null);
                return e.words = Array(Math.ceil(this.n / 13)), e
            }, v.prototype.ireduce = function(e) {
                var t, r = e;
                do this.split(r, this.tmp), t = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength(); while (t > this.n) var n = t < this.n ? -1 : r.ucmp(this.p);
                return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
            }, v.prototype.split = function(e, t) {
                e.iushrn(this.n, 0, t)
            }, v.prototype.imulK = function(e) {
                return e.imul(this.k)
            }, s(w, v), w.prototype.split = function(e, t) {
                for (var r = Math.min(e.length, 9), n = 0; n < r; n++) t.words[n] = e.words[n];
                if (t.length = r, e.length <= 9) {
                    e.words[0] = 0, e.length = 1;
                    return
                }
                var s = e.words[9];
                for (n = 10, t.words[t.length++] = 4194303 & s; n < e.length; n++) {
                    var a = 0 | e.words[n];
                    e.words[n - 10] = (4194303 & a) << 4 | s >>> 22, s = a
                }
                s >>>= 22, e.words[n - 10] = s, 0 === s && e.length > 10 ? e.length -= 10 : e.length -= 9
            }, w.prototype.imulK = function(e) {
                e.words[e.length] = 0, e.words[e.length + 1] = 0, e.length += 2;
                for (var t = 0, r = 0; r < e.length; r++) {
                    var n = 0 | e.words[r];
                    t += 977 * n, e.words[r] = 0x3ffffff & t, t = 64 * n + (t / 0x4000000 | 0)
                }
                return 0 === e.words[e.length - 1] && (e.length--, 0 === e.words[e.length - 1] && e.length--), e
            }, s(E, v), s(A, v), s(j, v), j.prototype.imulK = function(e) {
                for (var t = 0, r = 0; r < e.length; r++) {
                    var n = (0 | e.words[r]) * 19 + t,
                        s = 0x3ffffff & n;
                    n >>>= 26, e.words[r] = s, t = n
                }
                return 0 !== t && (e.words[e.length++] = t), e
            }, a._prime = function(e) {
                var t;
                if (x[e]) return x[e];
                if ("k256" === e) t = new w;
                else if ("p224" === e) t = new E;
                else if ("p192" === e) t = new A;
                else if ("p25519" === e) t = new j;
                else throw Error("Unknown prime " + e);
                return x[e] = t, t
            }, I.prototype._verify1 = function(e) {
                n(0 === e.negative, "red works only with positives"), n(e.red, "red works only with red numbers")
            }, I.prototype._verify2 = function(e, t) {
                n((e.negative | t.negative) == 0, "red works only with positives"), n(e.red && e.red === t.red, "red works only with red numbers")
            }, I.prototype.imod = function(e) {
                return this.prime ? this.prime.ireduce(e)._forceRed(this) : (c(e, e.umod(this.m)._forceRed(this)), e)
            }, I.prototype.neg = function(e) {
                return e.isZero() ? e.clone() : this.m.sub(e)._forceRed(this)
            }, I.prototype.add = function(e, t) {
                this._verify2(e, t);
                var r = e.add(t);
                return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
            }, I.prototype.iadd = function(e, t) {
                this._verify2(e, t);
                var r = e.iadd(t);
                return r.cmp(this.m) >= 0 && r.isub(this.m), r
            }, I.prototype.sub = function(e, t) {
                this._verify2(e, t);
                var r = e.sub(t);
                return 0 > r.cmpn(0) && r.iadd(this.m), r._forceRed(this)
            }, I.prototype.isub = function(e, t) {
                this._verify2(e, t);
                var r = e.isub(t);
                return 0 > r.cmpn(0) && r.iadd(this.m), r
            }, I.prototype.shl = function(e, t) {
                return this._verify1(e), this.imod(e.ushln(t))
            }, I.prototype.imul = function(e, t) {
                return this._verify2(e, t), this.imod(e.imul(t))
            }, I.prototype.mul = function(e, t) {
                return this._verify2(e, t), this.imod(e.mul(t))
            }, I.prototype.isqr = function(e) {
                return this.imul(e, e.clone())
            }, I.prototype.sqr = function(e) {
                return this.mul(e, e)
            }, I.prototype.sqrt = function(e) {
                if (e.isZero()) return e.clone();
                var t = this.m.andln(3);
                if (n(t % 2 == 1), 3 === t) {
                    var r = this.m.add(new a(1)).iushrn(2);
                    return this.pow(e, r)
                }
                for (var s = this.m.subn(1), i = 0; !s.isZero() && 0 === s.andln(1);) i++, s.iushrn(1);
                n(!s.isZero());
                var o = new a(1).toRed(this),
                    l = o.redNeg(),
                    c = this.m.subn(1).iushrn(1),
                    d = this.m.bitLength();
                for (d = new a(2 * d * d).toRed(this); 0 !== this.pow(d, c).cmp(l);) d.redIAdd(l);
                for (var u = this.pow(d, s), f = this.pow(e, s.addn(1).iushrn(1)), h = this.pow(e, s), p = i; 0 !== h.cmp(o);) {
                    for (var g = h, m = 0; 0 !== g.cmp(o); m++) g = g.redSqr();
                    n(m < p);
                    var y = this.pow(u, new a(1).iushln(p - m - 1));
                    f = f.redMul(y), u = y.redSqr(), h = h.redMul(u), p = m
                }
                return f
            }, I.prototype.invm = function(e) {
                var t = e._invmp(this.m);
                return 0 !== t.negative ? (t.negative = 0, this.imod(t).redNeg()) : this.imod(t)
            }, I.prototype.pow = function(e, t) {
                if (t.isZero()) return new a(1).toRed(this);
                if (0 === t.cmpn(1)) return e.clone();
                var r = Array(16);
                r[0] = new a(1).toRed(this), r[1] = e;
                for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], e);
                var s = r[0],
                    i = 0,
                    o = 0,
                    l = t.bitLength() % 26;
                for (0 === l && (l = 26), n = t.length - 1; n >= 0; n--) {
                    for (var c = t.words[n], d = l - 1; d >= 0; d--) {
                        var u = c >> d & 1;
                        if (s !== r[0] && (s = this.sqr(s)), 0 === u && 0 === i) {
                            o = 0;
                            continue
                        }
                        i <<= 1, i |= u, (4 == ++o || 0 === n && 0 === d) && (s = this.mul(s, r[i]), o = 0, i = 0)
                    }
                    l = 26
                }
                return s
            }, I.prototype.convertTo = function(e) {
                var t = e.umod(this.m);
                return t === e ? t.clone() : t
            }, I.prototype.convertFrom = function(e) {
                var t = e.clone();
                return t.red = null, t
            }, a.mont = function(e) {
                return new S(e)
            }, s(S, I), S.prototype.convertTo = function(e) {
                return this.imod(e.ushln(this.shift))
            }, S.prototype.convertFrom = function(e) {
                var t = this.imod(e.mul(this.rinv));
                return t.red = null, t
            }, S.prototype.imul = function(e, t) {
                if (e.isZero() || t.isZero()) return e.words[0] = 0, e.length = 1, e;
                var r = e.imul(t),
                    n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                    s = r.isub(n).iushrn(this.shift),
                    a = s;
                return s.cmp(this.m) >= 0 ? a = s.isub(this.m) : 0 > s.cmpn(0) && (a = s.iadd(this.m)), a._forceRed(this)
            }, S.prototype.mul = function(e, t) {
                if (e.isZero() || t.isZero()) return new a(0)._forceRed(this);
                var r = e.mul(t),
                    n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                    s = r.isub(n).iushrn(this.shift),
                    i = s;
                return s.cmp(this.m) >= 0 ? i = s.isub(this.m) : 0 > s.cmpn(0) && (i = s.iadd(this.m)), i._forceRed(this)
            }, S.prototype.invm = function(e) {
                return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)
            }
        }(t, this)
    }, {
        bd440367abe2ded7: "3eno3"
    }],
    "3eno3": [function(e, t, r, n) {}, {}],
    FsnUp: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "bignumber/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "7GQTq": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "formatFixed", () => m), s.export(r, "parseFixed", () => y), s.export(r, "FixedFormat", () => b), s.export(r, "FixedNumber", () => x);
        "use strict";
        var a = e("@ethersproject/bytes"),
            i = e("@ethersproject/logger"),
            o = e("./_version"),
            l = e("./bignumber");
        let c = new(0, i.Logger)(o.version),
            d = {},
            u = l.BigNumber.from(0),
            f = l.BigNumber.from(-1);

        function h(e, t, r, n) {
            let s = {
                fault: t,
                operation: r
            };
            return void 0 !== n && (s.value = n), c.throwError(e, i.Logger.errors.NUMERIC_FAULT, s)
        }
        let p = "0";
        for (; p.length < 256;) p += p;

        function g(e) {
            if ("number" != typeof e) try {
                e = l.BigNumber.from(e).toNumber()
            } catch (e) {}
            return "number" == typeof e && e >= 0 && e <= 256 && !(e % 1) ? "1" + p.substring(0, e) : c.throwArgumentError("invalid decimal size", "decimals", e)
        }

        function m(e, t) {
            null == t && (t = 0);
            let r = g(t),
                n = (e = l.BigNumber.from(e)).lt(u);
            n && (e = e.mul(f));
            let s = e.mod(r).toString();
            for (; s.length < r.length - 1;) s = "0" + s;
            s = s.match(/^([0-9]*[1-9]|0)(0*)/)[1];
            let a = e.div(r).toString();
            return e = 1 === r.length ? a : a + "." + s, n && (e = "-" + e), e
        }

        function y(e, t) {
            null == t && (t = 0);
            let r = g(t);
            "string" == typeof e && e.match(/^-?[0-9.]+$/) || c.throwArgumentError("invalid decimal value", "value", e);
            let n = "-" === e.substring(0, 1);
            n && (e = e.substring(1)), "." === e && c.throwArgumentError("missing value", "value", e);
            let s = e.split(".");
            s.length > 2 && c.throwArgumentError("too many decimal points", "value", e);
            let a = s[0],
                i = s[1];
            for (a || (a = "0"), i || (i = "0");
                "0" === i[i.length - 1];) i = i.substring(0, i.length - 1);
            for (i.length > r.length - 1 && h("fractional component exceeds decimals", "underflow", "parseFixed"), "" === i && (i = "0"); i.length < r.length - 1;) i += "0";
            let o = l.BigNumber.from(a),
                d = l.BigNumber.from(i),
                u = o.mul(r).add(d);
            return n && (u = u.mul(f)), u
        }
        class b {
            constructor(e, t, r, n) {
                e !== d && c.throwError("cannot use FixedFormat constructor; use FixedFormat.from", i.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "new FixedFormat"
                }), this.signed = t, this.width = r, this.decimals = n, this.name = (t ? "" : "u") + "fixed" + String(r) + "x" + String(n), this._multiplier = g(n), Object.freeze(this)
            }
            static from(e) {
                if (e instanceof b) return e;
                "number" == typeof e && (e = `fixed128x${e}`);
                let t = !0,
                    r = 128,
                    n = 18;
                if ("string" == typeof e)
                    if ("fixed" === e);
                    else if ("ufixed" === e) t = !1;
                else {
                    let s = e.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
                    s || c.throwArgumentError("invalid fixed format", "format", e), t = "u" !== s[1], r = parseInt(s[2]), n = parseInt(s[3])
                } else if (e) {
                    let s = (t, r, n) => null == e[t] ? n : (typeof e[t] !== r && c.throwArgumentError("invalid fixed format (" + t + " not " + r + ")", "format." + t, e[t]), e[t]);
                    t = s("signed", "boolean", t), r = s("width", "number", r), n = s("decimals", "number", n)
                }
                return r % 8 && c.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", r), n > 80 && c.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", n), new b(d, t, r, n)
            }
        }
        class x {
            constructor(e, t, r, n) {
                e !== d && c.throwError("cannot use FixedNumber constructor; use FixedNumber.from", i.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "new FixedFormat"
                }), this.format = n, this._hex = t, this._value = r, this._isFixedNumber = !0, Object.freeze(this)
            }
            _checkFormat(e) {
                this.format.name !== e.format.name && c.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", e)
            }
            addUnsafe(e) {
                this._checkFormat(e);
                let t = y(this._value, this.format.decimals),
                    r = y(e._value, e.format.decimals);
                return x.fromValue(t.add(r), this.format.decimals, this.format)
            }
            subUnsafe(e) {
                this._checkFormat(e);
                let t = y(this._value, this.format.decimals),
                    r = y(e._value, e.format.decimals);
                return x.fromValue(t.sub(r), this.format.decimals, this.format)
            }
            mulUnsafe(e) {
                this._checkFormat(e);
                let t = y(this._value, this.format.decimals),
                    r = y(e._value, e.format.decimals);
                return x.fromValue(t.mul(r).div(this.format._multiplier), this.format.decimals, this.format)
            }
            divUnsafe(e) {
                this._checkFormat(e);
                let t = y(this._value, this.format.decimals),
                    r = y(e._value, e.format.decimals);
                return x.fromValue(t.mul(this.format._multiplier).div(r), this.format.decimals, this.format)
            }
            floor() {
                let e = this.toString().split(".");
                1 === e.length && e.push("0");
                let t = x.from(e[0], this.format),
                    r = !e[1].match(/^(0*)$/);
                return this.isNegative() && r && (t = t.subUnsafe(v.toFormat(t.format))), t
            }
            ceiling() {
                let e = this.toString().split(".");
                1 === e.length && e.push("0");
                let t = x.from(e[0], this.format),
                    r = !e[1].match(/^(0*)$/);
                return !this.isNegative() && r && (t = t.addUnsafe(v.toFormat(t.format))), t
            }
            round(e) {
                null == e && (e = 0);
                let t = this.toString().split(".");
                if (1 === t.length && t.push("0"), (e < 0 || e > 80 || e % 1) && c.throwArgumentError("invalid decimal count", "decimals", e), t[1].length <= e) return this;
                let r = x.from("1" + p.substring(0, e), this.format),
                    n = w.toFormat(this.format);
                return this.mulUnsafe(r).addUnsafe(n).floor().divUnsafe(r)
            }
            isZero() {
                return "0.0" === this._value || "0" === this._value
            }
            isNegative() {
                return "-" === this._value[0]
            }
            toString() {
                return this._value
            }
            toHexString(e) {
                if (null == e) return this._hex;
                e % 8 && c.throwArgumentError("invalid byte width", "width", e);
                let t = l.BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(e).toHexString();
                return (0, a.hexZeroPad)(t, e / 8)
            }
            toUnsafeFloat() {
                return parseFloat(this.toString())
            }
            toFormat(e) {
                return x.fromString(this._value, e)
            }
            static fromValue(e, t, r) {
                return null != r || null == t || (0, l.isBigNumberish)(t) || (r = t, t = null), null == t && (t = 0), null == r && (r = "fixed"), x.fromString(m(e, t), b.from(r))
            }
            static fromString(e, t) {
                null == t && (t = "fixed");
                let r = b.from(t),
                    n = y(e, r.decimals);
                !r.signed && n.lt(u) && h("unsigned value cannot be negative", "overflow", "value", e);
                let s = null;
                return r.signed ? s = n.toTwos(r.width).toHexString() : (s = n.toHexString(), s = (0, a.hexZeroPad)(s, r.width / 8)), new x(d, s, m(n, r.decimals), r)
            }
            static fromBytes(e, t) {
                null == t && (t = "fixed");
                let r = b.from(t);
                if ((0, a.arrayify)(e).length > r.width / 8) throw Error("overflow");
                let n = l.BigNumber.from(e);
                return r.signed && (n = n.fromTwos(r.width)), new x(d, n.toTwos(+!r.signed + r.width).toHexString(), m(n, r.decimals), r)
            }
            static from(e, t) {
                if ("string" == typeof e) return x.fromString(e, t);
                if ((0, a.isBytes)(e)) return x.fromBytes(e, t);
                try {
                    return x.fromValue(e, 0, t)
                } catch (e) {
                    if (e.code !== i.Logger.errors.INVALID_ARGUMENT) throw e
                }
                return c.throwArgumentError("invalid FixedNumber value", "value", e)
            }
            static isFixedNumber(e) {
                return !!(e && e._isFixedNumber)
            }
        }
        let v = x.from(1),
            w = x.from("0.5")
    }, {
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/logger": "6NWvR",
        "./_version": "FsnUp",
        "./bignumber": "ha6R2",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    iRbHe: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "HashZero", () => a);
        let a = "0x0000000000000000000000000000000000000000000000000000000000000000"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    ex5EG: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "EtherSymbol", () => a);
        let a = "Ξ"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "4E82p": [function(e, t, r, n) {
        var s, a, i, o, l = e("@parcel/transformer-js/src/esmodule-helpers.js");
        "use strict";
        l.defineInteropFlag(r), l.export(r, "UnicodeNormalizationForm", () => i), l.export(r, "Utf8ErrorReason", () => o), l.export(r, "Utf8ErrorFuncs", () => p), l.export(r, "toUtf8Bytes", () => m), l.export(r, "_toEscapedUtf8String", () => b), l.export(r, "_toUtf8String", () => x), l.export(r, "toUtf8String", () => v), l.export(r, "toUtf8CodePoints", () => w);
        var c = e("@ethersproject/bytes"),
            d = e("@ethersproject/logger"),
            u = e("./_version");
        let f = new(0, d.Logger)(u.version);

        function h(e, t, r, n, s) {
            if (e === o.BAD_PREFIX || e === o.UNEXPECTED_CONTINUE) {
                let e = 0;
                for (let n = t + 1; n < r.length && r[n] >> 6 == 2; n++) e++;
                return e
            }
            return e === o.OVERRUN ? r.length - t - 1 : 0
        }(s = i || (i = {})).current = "", s.NFC = "NFC", s.NFD = "NFD", s.NFKC = "NFKC", s.NFKD = "NFKD", (a = o || (o = {})).UNEXPECTED_CONTINUE = "unexpected continuation byte", a.BAD_PREFIX = "bad codepoint prefix", a.OVERRUN = "string overrun", a.MISSING_CONTINUE = "missing continuation byte", a.OUT_OF_RANGE = "out of UTF-8 range", a.UTF16_SURROGATE = "UTF-16 surrogate", a.OVERLONG = "overlong representation";
        let p = Object.freeze({
            error: function(e, t, r, n, s) {
                return f.throwArgumentError(`invalid codepoint at offset ${t}; ${e}`, "bytes", r)
            },
            ignore: h,
            replace: function(e, t, r, n, s) {
                return e === o.OVERLONG ? (n.push(s), 0) : (n.push(65533), h(e, t, r, n, s))
            }
        });

        function g(e, t) {
            null == t && (t = p.error), e = (0, c.arrayify)(e);
            let r = [],
                n = 0;
            for (; n < e.length;) {
                let s = e[n++];
                if (s >> 7 == 0) {
                    r.push(s);
                    continue
                }
                let a = null,
                    i = null;
                if ((224 & s) == 192) a = 1, i = 127;
                else if ((240 & s) == 224) a = 2, i = 2047;
                else if ((248 & s) == 240) a = 3, i = 65535;
                else {
                    (192 & s) == 128 ? n += t(o.UNEXPECTED_CONTINUE, n - 1, e, r) : n += t(o.BAD_PREFIX, n - 1, e, r);
                    continue
                }
                if (n - 1 + a >= e.length) {
                    n += t(o.OVERRUN, n - 1, e, r);
                    continue
                }
                let l = s & (1 << 8 - a - 1) - 1;
                for (let s = 0; s < a; s++) {
                    let s = e[n];
                    if ((192 & s) != 128) {
                        n += t(o.MISSING_CONTINUE, n, e, r), l = null;
                        break
                    }
                    l = l << 6 | 63 & s, n++
                }
                if (null !== l) {
                    if (l > 1114111) {
                        n += t(o.OUT_OF_RANGE, n - 1 - a, e, r, l);
                        continue
                    }
                    if (l >= 55296 && l <= 57343) {
                        n += t(o.UTF16_SURROGATE, n - 1 - a, e, r, l);
                        continue
                    }
                    if (l <= i) {
                        n += t(o.OVERLONG, n - 1 - a, e, r, l);
                        continue
                    }
                    r.push(l)
                }
            }
            return r
        }

        function m(e, t = i.current) {
            t != i.current && (f.checkNormalize(), e = e.normalize(t));
            let r = [];
            for (let t = 0; t < e.length; t++) {
                let n = e.charCodeAt(t);
                if (n < 128) r.push(n);
                else if (n < 2048) r.push(n >> 6 | 192), r.push(63 & n | 128);
                else if ((64512 & n) == 55296) {
                    t++;
                    let s = e.charCodeAt(t);
                    if (t >= e.length || (64512 & s) != 56320) throw Error("invalid utf-8 string");
                    let a = 65536 + ((1023 & n) << 10) + (1023 & s);
                    r.push(a >> 18 | 240), r.push(a >> 12 & 63 | 128), r.push(a >> 6 & 63 | 128), r.push(63 & a | 128)
                } else r.push(n >> 12 | 224), r.push(n >> 6 & 63 | 128), r.push(63 & n | 128)
            }
            return (0, c.arrayify)(r)
        }

        function y(e) {
            let t = "0000" + e.toString(16);
            return "\\u" + t.substring(t.length - 4)
        }

        function b(e, t) {
            return '"' + g(e, t).map(e => {
                if (e < 256) {
                    switch (e) {
                        case 8:
                            return "\\b";
                        case 9:
                            return "\\t";
                        case 10:
                            return "\\n";
                        case 13:
                            return "\\r";
                        case 34:
                            return '\\"';
                        case 92:
                            return "\\\\"
                    }
                    if (e >= 32 && e < 127) return String.fromCharCode(e)
                }
                return e <= 65535 ? y(e) : y(((e -= 65536) >> 10 & 1023) + 55296) + y((1023 & e) + 56320)
            }).join("") + '"'
        }

        function x(e) {
            return e.map(e => e <= 65535 ? String.fromCharCode(e) : String.fromCharCode(((e -= 65536) >> 10 & 1023) + 55296, (1023 & e) + 56320)).join("")
        }

        function v(e, t) {
            return x(g(e, t))
        }

        function w(e, t = i.current) {
            return g(m(e, t))
        }
    }, {
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/logger": "6NWvR",
        "./_version": "mEQno",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    mEQno: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "strings/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    kkxaO: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "_nameprepTableA1", () => m), s.export(r, "_nameprepTableB2", () => y), s.export(r, "_nameprepTableC", () => b), s.export(r, "nameprep", () => x);
        "use strict";
        var a = e("./utf8");

        function i(e, t) {
            t || (t = function(e) {
                return [parseInt(e, 16)]
            });
            let r = 0,
                n = {};
            return e.split(",").forEach(e => {
                let s = e.split(":");
                n[r += parseInt(s[0], 16)] = t(s[1])
            }), n
        }

        function o(e) {
            let t = 0;
            return e.split(",").map(e => {
                let r = e.split("-");
                return 1 === r.length ? r[1] = "0" : "" === r[1] && (r[1] = "1"), {
                    l: t + parseInt(r[0], 16),
                    h: t = parseInt(r[1], 16)
                }
            })
        }

        function l(e, t) {
            let r = 0;
            for (let n = 0; n < t.length; n++) {
                let s = t[n];
                if (e >= (r += s.l) && e <= r + s.h && (e - r) % (s.d || 1) == 0) {
                    if (s.e && -1 !== s.e.indexOf(e - r)) continue;
                    return s
                }
            }
            return null
        }
        let c = o("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"),
            d = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map(e => parseInt(e, 16)),
            u = [{
                h: 25,
                s: 32,
                l: 65
            }, {
                h: 30,
                s: 32,
                e: [23],
                l: 127
            }, {
                h: 54,
                s: 1,
                e: [48],
                l: 64,
                d: 2
            }, {
                h: 14,
                s: 1,
                l: 57,
                d: 2
            }, {
                h: 44,
                s: 1,
                l: 17,
                d: 2
            }, {
                h: 10,
                s: 1,
                e: [2, 6, 8],
                l: 61,
                d: 2
            }, {
                h: 16,
                s: 1,
                l: 68,
                d: 2
            }, {
                h: 84,
                s: 1,
                e: [18, 24, 66],
                l: 19,
                d: 2
            }, {
                h: 26,
                s: 32,
                e: [17],
                l: 435
            }, {
                h: 22,
                s: 1,
                l: 71,
                d: 2
            }, {
                h: 15,
                s: 80,
                l: 40
            }, {
                h: 31,
                s: 32,
                l: 16
            }, {
                h: 32,
                s: 1,
                l: 80,
                d: 2
            }, {
                h: 52,
                s: 1,
                l: 42,
                d: 2
            }, {
                h: 12,
                s: 1,
                l: 55,
                d: 2
            }, {
                h: 40,
                s: 1,
                e: [38],
                l: 15,
                d: 2
            }, {
                h: 14,
                s: 1,
                l: 48,
                d: 2
            }, {
                h: 37,
                s: 48,
                l: 49
            }, {
                h: 148,
                s: 1,
                l: 6351,
                d: 2
            }, {
                h: 88,
                s: 1,
                l: 160,
                d: 2
            }, {
                h: 15,
                s: 16,
                l: 704
            }, {
                h: 25,
                s: 26,
                l: 854
            }, {
                h: 25,
                s: 32,
                l: 55915
            }, {
                h: 37,
                s: 40,
                l: 1247
            }, {
                h: 25,
                s: -119711,
                l: 53248
            }, {
                h: 25,
                s: -119763,
                l: 52
            }, {
                h: 25,
                s: -119815,
                l: 52
            }, {
                h: 25,
                s: -119867,
                e: [1, 4, 5, 7, 8, 11, 12, 17],
                l: 52
            }, {
                h: 25,
                s: -119919,
                l: 52
            }, {
                h: 24,
                s: -119971,
                e: [2, 7, 8, 17],
                l: 52
            }, {
                h: 24,
                s: -120023,
                e: [2, 7, 13, 15, 16, 17],
                l: 52
            }, {
                h: 25,
                s: -120075,
                l: 52
            }, {
                h: 25,
                s: -120127,
                l: 52
            }, {
                h: 25,
                s: -120179,
                l: 52
            }, {
                h: 25,
                s: -120231,
                l: 52
            }, {
                h: 25,
                s: -120283,
                l: 52
            }, {
                h: 25,
                s: -120335,
                l: 52
            }, {
                h: 24,
                s: -119543,
                e: [17],
                l: 56
            }, {
                h: 24,
                s: -119601,
                e: [17],
                l: 58
            }, {
                h: 24,
                s: -119659,
                e: [17],
                l: 58
            }, {
                h: 24,
                s: -119717,
                e: [17],
                l: 58
            }, {
                h: 24,
                s: -119775,
                e: [17],
                l: 58
            }],
            f = i("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"),
            h = i("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"),
            p = i("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", function(e) {
                if (e.length % 4 != 0) throw Error("bad data");
                let t = [];
                for (let r = 0; r < e.length; r += 4) t.push(parseInt(e.substring(r, r + 4), 16));
                return t
            }),
            g = o("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");

        function m(e) {
            return !!l(e, c)
        }

        function y(e) {
            let t = l(e, u);
            if (t) return [e + t.s];
            let r = f[e];
            if (r) return r;
            let n = h[e];
            if (n) return [e + n[0]];
            let s = p[e];
            return s || null
        }

        function b(e) {
            return !!l(e, g)
        }

        function x(e) {
            if (e.match(/^[a-z0-9-]*$/i) && e.length <= 59) return e.toLowerCase();
            let t = (0, a.toUtf8CodePoints)(e);
            t = t.map(e => {
                if (d.indexOf(e) >= 0 || e >= 65024 && e <= 65039) return [];
                let t = y(e);
                return t || [e]
            }).reduce((e, t) => (t.forEach(t => {
                e.push(t)
            }), e), []), (t = (0, a.toUtf8CodePoints)((0, a._toUtf8String)(t), a.UnicodeNormalizationForm.NFKC)).forEach(e => {
                if (b(e)) throw Error("STRINGPREP_CONTAINS_PROHIBITED")
            }), t.forEach(e => {
                if (m(e)) throw Error("STRINGPREP_CONTAINS_UNASSIGNED")
            });
            let r = (0, a._toUtf8String)(t);
            if ("-" === r.substring(0, 1) || "--" === r.substring(2, 4) || "-" === r.substring(r.length - 1)) throw Error("invalid hyphen");
            return r
        }
    }, {
        "./utf8": "4E82p",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "85tDg": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "ensNormalize", () => g), s.export(r, "isValidName", () => m), s.export(r, "namehash", () => y), s.export(r, "dnsEncode", () => b);
        var a = e("@ethersproject/bytes"),
            i = e("@ethersproject/strings"),
            o = e("@ethersproject/keccak256"),
            l = e("@ethersproject/logger"),
            c = e("./_version"),
            d = e("./ens-normalize/lib");
        let u = new(0, l.Logger)(c.version),
            f = new Uint8Array(32);

        function h(e) {
            if (0 === e.length) throw Error("invalid ENS name; empty component");
            return e
        }

        function p(e) {
            let t = (0, i.toUtf8Bytes)((0, d.ens_normalize)(e)),
                r = [];
            if (0 === e.length) return r;
            let n = 0;
            for (let e = 0; e < t.length; e++) 46 === t[e] && (r.push(h(t.slice(n, e))), n = e + 1);
            if (n >= t.length) throw Error("invalid ENS name; empty component");
            return r.push(h(t.slice(n))), r
        }

        function g(e) {
            return p(e).map(e => (0, i.toUtf8String)(e)).join(".")
        }

        function m(e) {
            try {
                return 0 !== p(e).length
            } catch (e) {}
            return !1
        }

        function y(e) {
            "string" != typeof e && u.throwArgumentError("invalid ENS name; not a string", "name", e);
            let t = f,
                r = p(e);
            for (; r.length;) t = (0, o.keccak256)((0, a.concat)([t, (0, o.keccak256)(r.pop())]));
            return (0, a.hexlify)(t)
        }

        function b(e) {
            return (0, a.hexlify)((0, a.concat)(p(e).map(e => {
                if (e.length > 63) throw Error("invalid DNS encoded entry; length exceeds 63 bytes");
                let t = new Uint8Array(e.length + 1);
                return t.set(e, 1), t[0] = t.length - 1, t
            }))) + "00"
        }
        f.fill(0)
    }, {
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/strings": "edSy2",
        "@ethersproject/keccak256": "eWtzg",
        "@ethersproject/logger": "6NWvR",
        "./_version": "kPmfv",
        "./ens-normalize/lib": "gBi5u",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    kPmfv: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "hash/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    gBi5u: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "ens_normalize_post_check", () => g), s.export(r, "ens_normalize", () => m);
        var a = e("@ethersproject/strings"),
            i = e("./include.js"),
            o = e("./decoder.js");
        let l = (0, i.getData)(),
            c = new Set((0, o.read_member_array)(l)),
            d = new Set((0, o.read_member_array)(l)),
            u = (0, o.read_mapped_map)(l),
            f = (0, o.read_emoji_trie)(l);

        function h(e) {
            return (0, a.toUtf8CodePoints)(e)
        }

        function p(e) {
            return e.filter(e => 65039 != e)
        }

        function g(e) {
            for (let t of e.split(".")) {
                let e = h(t);
                try {
                    for (let t = e.lastIndexOf(95) - 1; t >= 0; t--)
                        if (95 !== e[t]) throw Error("underscore only allowed at start");
                    if (e.length >= 4 && e.every(e => e < 128) && 45 === e[2] && 45 === e[3]) throw Error("invalid label extension")
                } catch (e) {
                    throw Error(`Invalid label "${t}": ${e.message}`)
                }
            }
            return e
        }

        function m(e) {
            return g(function(e, t) {
                let r = h(e).reverse(),
                    n = [];
                for (; r.length;) {
                    let e = function(e, t) {
                        var r;
                        let n, s, a = f,
                            i = [],
                            o = e.length;
                        for (; o;) {
                            let l = e[--o];
                            if (!(a = null == (r = a.branches.find(e => e.set.has(l))) ? void 0 : r.node)) break;
                            if (a.save) s = l;
                            else if (a.check && l === s) break;
                            i.push(l), a.fe0f && (i.push(65039), o > 0 && 65039 == e[o - 1] && o--), a.valid && (n = i.slice(), 2 == a.valid && n.splice(1, 1), t && t.push(...e.slice(o).reverse()), e.length = o)
                        }
                        return n
                    }(r);
                    if (e) {
                        n.push(...t(e));
                        continue
                    }
                    let s = r.pop();
                    if (c.has(s)) {
                        n.push(s);
                        continue
                    }
                    if (d.has(s)) continue;
                    let a = u[s];
                    if (a) {
                        n.push(...a);
                        continue
                    }
                    throw Error(`Disallowed codepoint: 0x${s.toString(16).toUpperCase()}`)
                }
                return g(String.fromCodePoint(...n).normalize("NFC"))
            }(e, p))
        }
    }, {
        "@ethersproject/strings": "edSy2",
        "./include.js": "1Wgfv",
        "./decoder.js": "akoWw",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "1Wgfv": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "getData", () => o);
        var a = e("@ethersproject/base64"),
            i = e("./decoder.js");

        function o() {
            return (0, i.read_compressed_payload)((0, a.decode)(""))
        }
    }, {
        "@ethersproject/base64": "dIiCi",
        "./decoder.js": "akoWw",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    dIiCi: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "decode", () => a.decode), s.export(r, "encode", () => a.encode);
        var a = e("./base64");
        "use strict"
    }, {
        "./base64": "14I0X",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "14I0X": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "decode", () => i), s.export(r, "encode", () => o);
        var a = e("@ethersproject/bytes");
        "use strict";

        function i(e) {
            e = atob(e);
            let t = [];
            for (let r = 0; r < e.length; r++) t.push(e.charCodeAt(r));
            return (0, a.arrayify)(t)
        }

        function o(e) {
            e = (0, a.arrayify)(e);
            let t = "";
            for (let r = 0; r < e.length; r++) t += String.fromCharCode(e[r]);
            return btoa(t)
        }
    }, {
        "@ethersproject/bytes": "19SwW",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    akoWw: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");

        function a(e, t) {
            null == t && (t = 1);
            let r = [],
                n = r.forEach,
                s = function(e, t) {
                    n.call(e, function(e) {
                        t > 0 && Array.isArray(e) ? s(e, t - 1) : r.push(e)
                    })
                };
            return s(e, t), r
        }

        function i(e) {
            let t = 0;

            function r() {
                return e[t++] << 8 | e[t++]
            }
            let n = r(),
                s = 1,
                a = [0, 1];
            for (let e = 1; e < n; e++) a.push(s += r());
            let i = r(),
                o = t;
            t += i;
            let l = 0,
                c = 0;

            function d() {
                return 0 == l && (c = c << 8 | e[t++], l = 8), c >> --l & 1
            }
            let u = 0;
            for (let e = 0; e < 31; e++) u = u << 1 | d();
            let f = [],
                h = 0,
                p = 0x80000000;
            for (;;) {
                let e = Math.floor(((u - h + 1) * s - 1) / p),
                    t = 0,
                    r = n;
                for (; r - t > 1;) {
                    let n = t + r >>> 1;
                    e < a[n] ? r = n : t = n
                }
                if (0 == t) break;
                f.push(t);
                let i = h + Math.floor(p * a[t] / s),
                    o = h + Math.floor(p * a[t + 1] / s) - 1;
                for (;
                    ((i ^ o) & 0x40000000) == 0;) u = u << 1 & 0x7fffffff | d(), i = i << 1 & 0x7fffffff, o = o << 1 & 0x7fffffff | 1;
                for (; i & ~o & 0x20000000;) u = 0x40000000 & u | u << 1 & 0x3fffffff | d(), i = i << 1 ^ 0x40000000, o = (0x40000000 ^ o) << 1 | 0x40000001;
                h = i, p = 1 + o - i
            }
            let g = n - 4;
            return f.map(t => {
                switch (t - g) {
                    case 3:
                        return g + 65792 + (e[o++] << 16 | e[o++] << 8 | e[o++]);
                    case 2:
                        return g + 256 + (e[o++] << 8 | e[o++]);
                    case 1:
                        return g + e[o++];
                    default:
                        return t - 1
                }
            })
        }

        function o(e) {
            let t = 0;
            return () => e[t++]
        }

        function l(e) {
            return o(i(e))
        }

        function c(e) {
            return 1 & e ? ~e >> 1 : e >> 1
        }

        function d(e, t) {
            let r = Array(e);
            for (let n = 0, s = -1; n < e; n++) r[n] = s += 1 + t();
            return r
        }

        function u(e, t) {
            let r = d(e(), e),
                n = e(),
                s = d(n, e),
                a = function(e, t) {
                    let r = Array(e);
                    for (let n = 0; n < e; n++) r[n] = 1 + t();
                    return r
                }(n, e);
            for (let e = 0; e < n; e++)
                for (let t = 0; t < a[e]; t++) r.push(s[e] + t);
            return t ? r.map(e => t[e]) : r
        }

        function f(e) {
            let t = [];
            for (;;) {
                let r = e();
                if (0 == r) break;
                t.push(function(e, t) {
                    let r = 1 + t(),
                        n = t(),
                        s = h(t);
                    return a(p(s.length, 1 + e, t).map((e, t) => {
                        let a = e[0],
                            i = e.slice(1);
                        return Array(s[t]).fill(void 0).map((e, t) => {
                            let s = t * n;
                            return [a + t * r, i.map(e => e + s)]
                        })
                    }))
                }(r, e))
            }
            for (;;) {
                var r, n;
                let s = e() - 1;
                if (s < 0) break;
                t.push((r = s, p(1 + (n = e)(), 1 + r, n).map(e => [e[0], e.slice(1)])))
            }
            return function(e) {
                let t = {};
                for (let r = 0; r < e.length; r++) {
                    let n = e[r];
                    t[n[0]] = n[1]
                }
                return t
            }(a(t))
        }

        function h(e) {
            let t = [];
            for (;;) {
                let r = e();
                if (0 == r) break;
                t.push(r)
            }
            return t
        }

        function p(e, t, r) {
            let n = Array(e).fill(void 0).map(() => []);
            for (let s = 0; s < t; s++)(function(e, t) {
                let r = Array(e);
                for (let n = 0, s = 0; n < e; n++) r[n] = s += c(t());
                return r
            })(e, r).forEach((e, t) => n[t].push(e));
            return n
        }

        function g(e) {
            let t = u(e).sort((e, t) => e - t);
            return function r() {
                let n = [];
                for (;;) {
                    let s = u(e, t);
                    if (0 == s.length) break;
                    n.push({
                        set: new Set(s),
                        node: r()
                    })
                }
                n.sort((e, t) => t.set.size - e.set.size);
                let s = e(),
                    a = s % 3;
                return {
                    branches: n,
                    valid: a,
                    fe0f: !!(1 & (s = s / 3 | 0)),
                    save: 1 == (s >>= 1),
                    check: 2 == s
                }
            }()
        }
        s.defineInteropFlag(r), s.export(r, "decode_arithmetic", () => i), s.export(r, "read_payload", () => o), s.export(r, "read_compressed_payload", () => l), s.export(r, "signed", () => c), s.export(r, "read_member_array", () => u), s.export(r, "read_mapped_map", () => f), s.export(r, "read_zero_terminated_array", () => h), s.export(r, "read_emoji_trie", () => g)
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    dncJF: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "messagePrefix", () => l), s.export(r, "hashMessage", () => c);
        var a = e("@ethersproject/bytes"),
            i = e("@ethersproject/keccak256"),
            o = e("@ethersproject/strings");
        let l = "\x19Ethereum Signed Message:\n";

        function c(e) {
            return "string" == typeof e && (e = (0, o.toUtf8Bytes)(e)), (0, i.keccak256)((0, a.concat)([(0, o.toUtf8Bytes)(l), (0, o.toUtf8Bytes)(String(e.length)), e]))
        }
    }, {
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/keccak256": "eWtzg",
        "@ethersproject/strings": "edSy2",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    keHK9: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "TypedDataEncoder", () => R);
        var a = e("@ethersproject/address"),
            i = e("@ethersproject/bignumber"),
            o = e("@ethersproject/bytes"),
            l = e("@ethersproject/keccak256"),
            c = e("@ethersproject/properties"),
            d = e("@ethersproject/logger"),
            u = e("./_version"),
            f = e("./id");
        let h = new(0, d.Logger)(u.version),
            p = new Uint8Array(32);
        p.fill(0);
        let g = i.BigNumber.from(-1),
            m = i.BigNumber.from(0),
            y = i.BigNumber.from(1),
            b = i.BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),
            x = (0, o.hexZeroPad)(y.toHexString(), 32),
            v = (0, o.hexZeroPad)(m.toHexString(), 32),
            w = {
                name: "string",
                version: "string",
                chainId: "uint256",
                verifyingContract: "address",
                salt: "bytes32"
            },
            E = ["name", "version", "chainId", "verifyingContract", "salt"];

        function A(e) {
            return function(t) {
                return "string" != typeof t && h.throwArgumentError(`invalid domain value for ${JSON.stringify(e)}`, `domain.${e}`, t), t
            }
        }
        let j = {
            name: A("name"),
            version: A("version"),
            chainId: function(e) {
                try {
                    return i.BigNumber.from(e).toString()
                } catch (e) {}
                return h.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", e)
            },
            verifyingContract: function(e) {
                try {
                    return (0, a.getAddress)(e).toLowerCase()
                } catch (e) {}
                return h.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", e)
            },
            salt: function(e) {
                try {
                    let t = (0, o.arrayify)(e);
                    if (32 !== t.length) throw Error("bad length");
                    return (0, o.hexlify)(t)
                } catch (e) {}
                return h.throwArgumentError('invalid domain value "salt"', "domain.salt", e)
            }
        };

        function I(e) {
            {
                let t = e.match(/^(u?)int(\d*)$/);
                if (t) {
                    let r = "" === t[1],
                        n = parseInt(t[2] || "256");
                    (n % 8 != 0 || n > 256 || t[2] && t[2] !== String(n)) && h.throwArgumentError("invalid numeric width", "type", e);
                    let s = b.mask(r ? n - 1 : n),
                        a = r ? s.add(y).mul(g) : m;
                    return function(t) {
                        let r = i.BigNumber.from(t);
                        return (r.lt(a) || r.gt(s)) && h.throwArgumentError(`value out-of-bounds for ${e}`, "value", t), (0, o.hexZeroPad)(r.toTwos(256).toHexString(), 32)
                    }
                }
            } {
                let t = e.match(/^bytes(\d+)$/);
                if (t) {
                    let r = parseInt(t[1]);
                    return (0 === r || r > 32 || t[1] !== String(r)) && h.throwArgumentError("invalid bytes width", "type", e),
                        function(t) {
                            (0, o.arrayify)(t).length !== r && h.throwArgumentError(`invalid length for ${e}`, "value", t);
                            let n = (0, o.arrayify)(t),
                                s = n.length % 32;
                            return s ? (0, o.hexConcat)([n, p.slice(s)]) : (0, o.hexlify)(n)
                        }
                }
            }
            switch (e) {
                case "address":
                    return function(e) {
                        return (0, o.hexZeroPad)((0, a.getAddress)(e), 32)
                    };
                case "bool":
                    return function(e) {
                        return e ? x : v
                    };
                case "bytes":
                    return function(e) {
                        return (0, l.keccak256)(e)
                    };
                case "string":
                    return function(e) {
                        return (0, f.id)(e)
                    }
            }
            return null
        }

        function S(e, t) {
            return `${e}(${t.map(({name:e,type:t})=>t+" "+e).join(",")})`
        }
        class R {
            constructor(e) {
                (0, c.defineReadOnly)(this, "types", Object.freeze((0, c.deepCopy)(e))), (0, c.defineReadOnly)(this, "_encoderCache", {}), (0, c.defineReadOnly)(this, "_types", {});
                let t = {},
                    r = {},
                    n = {};
                for (let s in Object.keys(e).forEach(e => {
                        t[e] = {}, r[e] = [], n[e] = {}
                    }), e) {
                    let n = {};
                    e[s].forEach(a => {
                        n[a.name] && h.throwArgumentError(`duplicate variable name ${JSON.stringify(a.name)} in ${JSON.stringify(s)}`, "types", e), n[a.name] = !0;
                        let i = a.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
                        i === s && h.throwArgumentError(`circular type reference to ${JSON.stringify(i)}`, "types", e), I(i) || (r[i] || h.throwArgumentError(`unknown type ${JSON.stringify(i)}`, "types", e), r[i].push(s), t[s][i] = !0)
                    })
                }
                let s = Object.keys(r).filter(e => 0 === r[e].length);
                for (let a in 0 === s.length ? h.throwArgumentError("missing primary type", "types", e) : s.length > 1 && h.throwArgumentError(`ambiguous primary types or unused types: ${s.map(e=>JSON.stringify(e)).join(", ")}`, "types", e), (0, c.defineReadOnly)(this, "primaryType", s[0]), ! function s(a, i) {
                        i[a] && h.throwArgumentError(`circular type reference to ${JSON.stringify(a)}`, "types", e), i[a] = !0, Object.keys(t[a]).forEach(e => {
                            r[e] && (s(e, i), Object.keys(i).forEach(t => {
                                n[t][e] = !0
                            }))
                        }), delete i[a]
                    }(this.primaryType, {}), n) {
                    let t = Object.keys(n[a]);
                    t.sort(), this._types[a] = S(a, e[a]) + t.map(t => S(t, e[t])).join("")
                }
            }
            getEncoder(e) {
                let t = this._encoderCache[e];
                return t || (t = this._encoderCache[e] = this._getEncoder(e)), t
            }
            _getEncoder(e) {
                {
                    let t = I(e);
                    if (t) return t
                }
                let t = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
                if (t) {
                    let e = t[1],
                        r = this.getEncoder(e),
                        n = parseInt(t[3]);
                    return t => {
                        n >= 0 && t.length !== n && h.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", t);
                        let s = t.map(r);
                        return this._types[e] && (s = s.map(l.keccak256)), (0, l.keccak256)((0, o.hexConcat)(s))
                    }
                }
                let r = this.types[e];
                if (r) {
                    let t = (0, f.id)(this._types[e]);
                    return e => {
                        let n = r.map(({
                            name: t,
                            type: r
                        }) => {
                            let n = this.getEncoder(r)(e[t]);
                            return this._types[r] ? (0, l.keccak256)(n) : n
                        });
                        return n.unshift(t), (0, o.hexConcat)(n)
                    }
                }
                return h.throwArgumentError(`unknown type: ${e}`, "type", e)
            }
            encodeType(e) {
                let t = this._types[e];
                return t || h.throwArgumentError(`unknown type: ${JSON.stringify(e)}`, "name", e), t
            }
            encodeData(e, t) {
                return this.getEncoder(e)(t)
            }
            hashStruct(e, t) {
                return (0, l.keccak256)(this.encodeData(e, t))
            }
            encode(e) {
                return this.encodeData(this.primaryType, e)
            }
            hash(e) {
                return this.hashStruct(this.primaryType, e)
            }
            _visit(e, t, r) {
                if (I(e)) return r(e, t);
                let n = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
                if (n) {
                    let e = n[1],
                        s = parseInt(n[3]);
                    return s >= 0 && t.length !== s && h.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", t), t.map(t => this._visit(e, t, r))
                }
                let s = this.types[e];
                return s ? s.reduce((e, {
                    name: n,
                    type: s
                }) => (e[n] = this._visit(s, t[n], r), e), {}) : h.throwArgumentError(`unknown type: ${e}`, "type", e)
            }
            visit(e, t) {
                return this._visit(this.primaryType, e, t)
            }
            static from(e) {
                return new R(e)
            }
            static getPrimaryType(e) {
                return R.from(e).primaryType
            }
            static hashStruct(e, t, r) {
                return R.from(t).hashStruct(e, r)
            }
            static hashDomain(e) {
                let t = [];
                for (let r in e) {
                    let n = w[r];
                    n || h.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(r)}`, "domain", e), t.push({
                        name: r,
                        type: n
                    })
                }
                return t.sort((e, t) => E.indexOf(e.name) - E.indexOf(t.name)), R.hashStruct("EIP712Domain", {
                    EIP712Domain: t
                }, e)
            }
            static encode(e, t, r) {
                return (0, o.hexConcat)(["0x1901", R.hashDomain(e), R.from(t).hash(r)])
            }
            static hash(e, t, r) {
                return (0, l.keccak256)(R.encode(e, t, r))
            }
            static resolveNames(e, t, r, n) {
                var s, a, i, l;
                return s = this, a = void 0, i = void 0, l = function*() {
                    e = (0, c.shallowCopy)(e);
                    let s = {};
                    e.verifyingContract && !(0, o.isHexString)(e.verifyingContract, 20) && (s[e.verifyingContract] = "0x");
                    let a = R.from(t);
                    for (let e in a.visit(r, (e, t) => ("address" !== e || (0, o.isHexString)(t, 20) || (s[t] = "0x"), t)), s) s[e] = yield n(e);
                    return e.verifyingContract && s[e.verifyingContract] && (e.verifyingContract = s[e.verifyingContract]), r = a.visit(r, (e, t) => "address" === e && s[t] ? s[t] : t), {
                        domain: e,
                        value: r
                    }
                }, new(i || (i = Promise))(function(e, t) {
                    function r(e) {
                        try {
                            o(l.next(e))
                        } catch (e) {
                            t(e)
                        }
                    }

                    function n(e) {
                        try {
                            o(l.throw(e))
                        } catch (e) {
                            t(e)
                        }
                    }

                    function o(t) {
                        var s;
                        t.done ? e(t.value) : ((s = t.value) instanceof i ? s : new i(function(e) {
                            e(s)
                        })).then(r, n)
                    }
                    o((l = l.apply(s, a || [])).next())
                })
            }
            static getPayload(e, t, r) {
                R.hashDomain(e);
                let n = {},
                    s = [];
                E.forEach(t => {
                    let r = e[t];
                    null != r && (n[t] = j[t](r), s.push({
                        name: t,
                        type: w[t]
                    }))
                });
                let a = R.from(t),
                    l = (0, c.shallowCopy)(t);
                return l.EIP712Domain ? h.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", t) : l.EIP712Domain = s, a.encode(r), {
                    types: l,
                    domain: n,
                    primaryType: a.primaryType,
                    message: a.visit(r, (e, t) => {
                        if (e.match(/^bytes(\d*)/)) return (0, o.hexlify)((0, o.arrayify)(t));
                        if (e.match(/^u?int/)) return i.BigNumber.from(t).toString();
                        switch (e) {
                            case "address":
                                return t.toLowerCase();
                            case "bool":
                                return !!t;
                            case "string":
                                return "string" != typeof t && h.throwArgumentError("invalid string", "value", t), t
                        }
                        return h.throwArgumentError("unsupported type", "type", e)
                    })
                }
            }
        }
    }, {
        "@ethersproject/address": "7BZuS",
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/keccak256": "eWtzg",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/logger": "6NWvR",
        "./_version": "kPmfv",
        "./id": "h8d98",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "7BZuS": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "getAddress", () => m), s.export(r, "isAddress", () => y), s.export(r, "getIcapAddress", () => b), s.export(r, "getContractAddress", () => x), s.export(r, "getCreate2Address", () => v);
        "use strict";
        var a = e("@ethersproject/bytes"),
            i = e("@ethersproject/bignumber"),
            o = e("@ethersproject/keccak256"),
            l = e("@ethersproject/rlp"),
            c = e("@ethersproject/logger"),
            d = e("./_version");
        let u = new(0, c.Logger)(d.version);

        function f(e) {
            (0, a.isHexString)(e, 20) || u.throwArgumentError("invalid address", "address", e);
            let t = (e = e.toLowerCase()).substring(2).split(""),
                r = new Uint8Array(40);
            for (let e = 0; e < 40; e++) r[e] = t[e].charCodeAt(0);
            let n = (0, a.arrayify)((0, o.keccak256)(r));
            for (let e = 0; e < 40; e += 2) n[e >> 1] >> 4 >= 8 && (t[e] = t[e].toUpperCase()), (15 & n[e >> 1]) >= 8 && (t[e + 1] = t[e + 1].toUpperCase());
            return "0x" + t.join("")
        }
        let h = {};
        for (let e = 0; e < 10; e++) h[String(e)] = String(e);
        for (let e = 0; e < 26; e++) h[String.fromCharCode(65 + e)] = String(10 + e);
        let p = Math.floor(Math.log10 ? Math.log10(0x1fffffffffffff) : Math.log(0x1fffffffffffff) / Math.LN10);

        function g(e) {
            let t = (e = (e = e.toUpperCase()).substring(4) + e.substring(0, 2) + "00").split("").map(e => h[e]).join("");
            for (; t.length >= p;) {
                let e = t.substring(0, p);
                t = parseInt(e, 10) % 97 + t.substring(e.length)
            }
            let r = String(98 - parseInt(t, 10) % 97);
            for (; r.length < 2;) r = "0" + r;
            return r
        }

        function m(e) {
            let t = null;
            if ("string" != typeof e && u.throwArgumentError("invalid address", "address", e), e.match(/^(0x)?[0-9a-fA-F]{40}$/)) "0x" !== e.substring(0, 2) && (e = "0x" + e), t = f(e), e.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && t !== e && u.throwArgumentError("bad address checksum", "address", e);
            else if (e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                for (e.substring(2, 4) !== g(e) && u.throwArgumentError("bad icap checksum", "address", e), t = (0, i._base36To16)(e.substring(4)); t.length < 40;) t = "0" + t;
                t = f("0x" + t)
            } else u.throwArgumentError("invalid address", "address", e);
            return t
        }

        function y(e) {
            try {
                return m(e), !0
            } catch (e) {}
            return !1
        }

        function b(e) {
            let t = (0, i._base16To36)(m(e).substring(2)).toUpperCase();
            for (; t.length < 30;) t = "0" + t;
            return "XE" + g("XE00" + t) + t
        }

        function x(e) {
            let t = null;
            try {
                t = m(e.from)
            } catch (t) {
                u.throwArgumentError("missing from address", "transaction", e)
            }
            let r = (0, a.stripZeros)((0, a.arrayify)(i.BigNumber.from(e.nonce).toHexString()));
            return m((0, a.hexDataSlice)((0, o.keccak256)((0, l.encode)([t, r])), 12))
        }

        function v(e, t, r) {
            return 32 !== (0, a.hexDataLength)(t) && u.throwArgumentError("salt must be 32 bytes", "salt", t), 32 !== (0, a.hexDataLength)(r) && u.throwArgumentError("initCodeHash must be 32 bytes", "initCodeHash", r), m((0, a.hexDataSlice)((0, o.keccak256)((0, a.concat)(["0xff", m(e), t, r])), 12))
        }
    }, {
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/keccak256": "eWtzg",
        "@ethersproject/rlp": "1wlks",
        "@ethersproject/logger": "6NWvR",
        "./_version": "cclNm",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "1wlks": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "encode", () => u), s.export(r, "decode", () => p);
        "use strict";
        var a = e("@ethersproject/bytes"),
            i = e("@ethersproject/logger"),
            o = e("./_version");
        let l = new(0, i.Logger)(o.version);

        function c(e) {
            let t = [];
            for (; e;) t.unshift(255 & e), e >>= 8;
            return t
        }

        function d(e, t, r) {
            let n = 0;
            for (let s = 0; s < r; s++) n = 256 * n + e[t + s];
            return n
        }

        function u(e) {
            return (0, a.hexlify)(function e(t) {
                if (Array.isArray(t)) {
                    let r = [];
                    if (t.forEach(function(t) {
                            r = r.concat(e(t))
                        }), r.length <= 55) return r.unshift(192 + r.length), r;
                    let n = c(r.length);
                    return n.unshift(247 + n.length), n.concat(r)
                }(0, a.isBytesLike)(t) || l.throwArgumentError("RLP object must be BytesLike", "object", t);
                let r = Array.prototype.slice.call((0, a.arrayify)(t));
                if (1 === r.length && r[0] <= 127) return r;
                if (r.length <= 55) return r.unshift(128 + r.length), r;
                let n = c(r.length);
                return n.unshift(183 + n.length), n.concat(r)
            }(e))
        }

        function f(e, t, r, n) {
            let s = [];
            for (; r < t + 1 + n;) {
                let a = h(e, r);
                s.push(a.result), (r += a.consumed) > t + 1 + n && l.throwError("child data too short", i.Logger.errors.BUFFER_OVERRUN, {})
            }
            return {
                consumed: 1 + n,
                result: s
            }
        }

        function h(e, t) {
            if (0 === e.length && l.throwError("data too short", i.Logger.errors.BUFFER_OVERRUN, {}), e[t] >= 248) {
                let r = e[t] - 247;
                t + 1 + r > e.length && l.throwError("data short segment too short", i.Logger.errors.BUFFER_OVERRUN, {});
                let n = d(e, t + 1, r);
                return t + 1 + r + n > e.length && l.throwError("data long segment too short", i.Logger.errors.BUFFER_OVERRUN, {}), f(e, t, t + 1 + r, r + n)
            }
            if (e[t] >= 192) {
                let r = e[t] - 192;
                return t + 1 + r > e.length && l.throwError("data array too short", i.Logger.errors.BUFFER_OVERRUN, {}), f(e, t, t + 1, r)
            }
            if (e[t] >= 184) {
                let r = e[t] - 183;
                t + 1 + r > e.length && l.throwError("data array too short", i.Logger.errors.BUFFER_OVERRUN, {});
                let n = d(e, t + 1, r);
                t + 1 + r + n > e.length && l.throwError("data array too short", i.Logger.errors.BUFFER_OVERRUN, {});
                let s = (0, a.hexlify)(e.slice(t + 1 + r, t + 1 + r + n));
                return {
                    consumed: 1 + r + n,
                    result: s
                }
            }
            if (e[t] >= 128) {
                let r = e[t] - 128;
                t + 1 + r > e.length && l.throwError("data too short", i.Logger.errors.BUFFER_OVERRUN, {});
                let n = (0, a.hexlify)(e.slice(t + 1, t + 1 + r));
                return {
                    consumed: 1 + r,
                    result: n
                }
            }
            return {
                consumed: 1,
                result: (0, a.hexlify)(e[t])
            }
        }

        function p(e) {
            let t = (0, a.arrayify)(e),
                r = h(t, 0);
            return r.consumed !== t.length && l.throwArgumentError("invalid rlp data", "data", e), r.result
        }
    }, {
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/logger": "6NWvR",
        "./_version": "AiPnh",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    AiPnh: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "rlp/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    cclNm: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "address/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    dmdV5: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "defineReadOnly", () => l), s.export(r, "getStatic", () => c), s.export(r, "resolveProperties", () => d), s.export(r, "checkProperties", () => u), s.export(r, "shallowCopy", () => f), s.export(r, "deepCopy", () => p), s.export(r, "Description", () => g);
        "use strict";
        var a = e("@ethersproject/logger"),
            i = e("./_version");
        let o = new(0, a.Logger)(i.version);

        function l(e, t, r) {
            Object.defineProperty(e, t, {
                enumerable: !0,
                value: r,
                writable: !1
            })
        }

        function c(e, t) {
            for (let r = 0; r < 32; r++) {
                if (e[t]) return e[t];
                if (!e.prototype || "object" != typeof e.prototype) break;
                e = Object.getPrototypeOf(e.prototype).constructor
            }
            return null
        }

        function d(e) {
            var t, r, n, s;
            return t = this, r = void 0, n = void 0, s = function*() {
                let t = Object.keys(e).map(t => Promise.resolve(e[t]).then(e => ({
                    key: t,
                    value: e
                })));
                return (yield Promise.all(t)).reduce((e, t) => (e[t.key] = t.value, e), {})
            }, new(n || (n = Promise))(function(e, a) {
                function i(e) {
                    try {
                        l(s.next(e))
                    } catch (e) {
                        a(e)
                    }
                }

                function o(e) {
                    try {
                        l(s.throw(e))
                    } catch (e) {
                        a(e)
                    }
                }

                function l(t) {
                    var r;
                    t.done ? e(t.value) : ((r = t.value) instanceof n ? r : new n(function(e) {
                        e(r)
                    })).then(i, o)
                }
                l((s = s.apply(t, r || [])).next())
            })
        }

        function u(e, t) {
            e && "object" == typeof e || o.throwArgumentError("invalid object", "object", e), Object.keys(e).forEach(r => {
                t[r] || o.throwArgumentError("invalid object key - " + r, "transaction:" + r, e)
            })
        }

        function f(e) {
            let t = {};
            for (let r in e) t[r] = e[r];
            return t
        }
        let h = {
            bigint: !0,
            boolean: !0,
            function: !0,
            number: !0,
            string: !0
        };

        function p(e) {
            if (function e(t) {
                    if (null == t || h[typeof t]) return !0;
                    if (Array.isArray(t) || "object" == typeof t) {
                        if (!Object.isFrozen(t)) return !1;
                        let r = Object.keys(t);
                        for (let n = 0; n < r.length; n++) {
                            let s = null;
                            try {
                                s = t[r[n]]
                            } catch (e) {
                                continue
                            }
                            if (!e(s)) return !1
                        }
                        return !0
                    }
                    return o.throwArgumentError(`Cannot deepCopy ${typeof t}`, "object", t)
                }(e)) return e;
            if (Array.isArray(e)) return Object.freeze(e.map(e => p(e)));
            if ("object" == typeof e) {
                let t = {};
                for (let r in e) {
                    let n = e[r];
                    void 0 !== n && l(t, r, p(n))
                }
                return t
            }
            return o.throwArgumentError(`Cannot deepCopy ${typeof e}`, "object", e)
        }
        class g {
            constructor(e) {
                for (let t in e) this[t] = p(e[t])
            }
        }
    }, {
        "@ethersproject/logger": "6NWvR",
        "./_version": "bVRqv",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    bVRqv: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "properties/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    lpm2Y: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "Provider", () => a.Provider), s.export(r, "BaseProvider", () => o.BaseProvider), s.export(r, "Resolver", () => o.Resolver), s.export(r, "UrlJsonRpcProvider", () => v.UrlJsonRpcProvider), s.export(r, "FallbackProvider", () => f.FallbackProvider), s.export(r, "AlchemyProvider", () => l.AlchemyProvider), s.export(r, "AlchemyWebSocketProvider", () => l.AlchemyWebSocketProvider), s.export(r, "AnkrProvider", () => c.AnkrProvider), s.export(r, "CloudflareProvider", () => d.CloudflareProvider), s.export(r, "EtherscanProvider", () => u.EtherscanProvider), s.export(r, "InfuraProvider", () => p.InfuraProvider), s.export(r, "InfuraWebSocketProvider", () => p.InfuraWebSocketProvider), s.export(r, "JsonRpcProvider", () => g.JsonRpcProvider), s.export(r, "JsonRpcBatchProvider", () => m.JsonRpcBatchProvider), s.export(r, "NodesmithProvider", () => y.NodesmithProvider), s.export(r, "PocketProvider", () => b.PocketProvider), s.export(r, "QuickNodeProvider", () => x.QuickNodeProvider), s.export(r, "StaticJsonRpcProvider", () => v.StaticJsonRpcProvider), s.export(r, "Web3Provider", () => w.Web3Provider), s.export(r, "WebSocketProvider", () => E.WebSocketProvider), s.export(r, "IpcProvider", () => h.IpcProvider), s.export(r, "JsonRpcSigner", () => g.JsonRpcSigner), s.export(r, "getDefaultProvider", () => R), s.export(r, "getNetwork", () => i.getNetwork), s.export(r, "isCommunityResource", () => A.isCommunityResource), s.export(r, "isCommunityResourcable", () => A.isCommunityResourcable), s.export(r, "showThrottleMessage", () => A.showThrottleMessage), s.export(r, "Formatter", () => A.Formatter);
        "use strict";
        var a = e("@ethersproject/abstract-provider"),
            i = e("@ethersproject/networks"),
            o = e("./base-provider"),
            l = e("./alchemy-provider"),
            c = e("./ankr-provider"),
            d = e("./cloudflare-provider"),
            u = e("./etherscan-provider"),
            f = e("./fallback-provider"),
            h = e("./ipc-provider"),
            p = e("./infura-provider"),
            g = e("./json-rpc-provider"),
            m = e("./json-rpc-batch-provider"),
            y = e("./nodesmith-provider"),
            b = e("./pocket-provider"),
            x = e("./quicknode-provider"),
            v = e("./url-json-rpc-provider"),
            w = e("./web3-provider"),
            E = e("./websocket-provider"),
            A = e("./formatter"),
            j = e("@ethersproject/logger"),
            I = e("./_version");
        let S = new(0, j.Logger)(I.version);

        function R(e, t) {
            if (null == e && (e = "homestead"), "string" == typeof e) {
                let t = e.match(/^(ws|http)s?:/i);
                if (t) switch (t[1].toLowerCase()) {
                    case "http":
                    case "https":
                        return new(0, g.JsonRpcProvider)(e);
                    case "ws":
                    case "wss":
                        return new(0, E.WebSocketProvider)(e);
                    default:
                        S.throwArgumentError("unsupported URL scheme", "network", e)
                }
            }
            let r = (0, i.getNetwork)(e);
            return r && r._defaultProvider || S.throwError("unsupported getDefaultProvider network", j.Logger.errors.NETWORK_ERROR, {
                operation: "getDefaultProvider",
                network: e
            }), r._defaultProvider({
                FallbackProvider: f.FallbackProvider,
                AlchemyProvider: l.AlchemyProvider,
                AnkrProvider: c.AnkrProvider,
                CloudflareProvider: d.CloudflareProvider,
                EtherscanProvider: u.EtherscanProvider,
                InfuraProvider: p.InfuraProvider,
                JsonRpcProvider: g.JsonRpcProvider,
                NodesmithProvider: y.NodesmithProvider,
                PocketProvider: b.PocketProvider,
                QuickNodeProvider: x.QuickNodeProvider,
                Web3Provider: w.Web3Provider,
                IpcProvider: h.IpcProvider
            }, t)
        }
    }, {
        "@ethersproject/abstract-provider": "imf57",
        "@ethersproject/networks": "acQbn",
        "./base-provider": "lEHz5",
        "./alchemy-provider": "dBSgv",
        "./ankr-provider": "afy2f",
        "./cloudflare-provider": "1qhut",
        "./etherscan-provider": "fduCf",
        "./fallback-provider": "LdkdG",
        "./ipc-provider": "8DeRN",
        "./infura-provider": "8Bo5e",
        "./json-rpc-provider": "7x7oZ",
        "./json-rpc-batch-provider": "aCNcD",
        "./nodesmith-provider": "19g4w",
        "./pocket-provider": "dwl0t",
        "./quicknode-provider": "idefM",
        "./url-json-rpc-provider": "bwHu3",
        "./web3-provider": "2aAfb",
        "./websocket-provider": "83spj",
        "./formatter": "7RPp2",
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    imf57: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "ForkEvent", () => u), s.export(r, "BlockForkEvent", () => f), s.export(r, "TransactionForkEvent", () => h), s.export(r, "TransactionOrderForkEvent", () => p), s.export(r, "Provider", () => g);
        "use strict";
        var a = e("@ethersproject/bignumber"),
            i = e("@ethersproject/bytes"),
            o = e("@ethersproject/properties"),
            l = e("@ethersproject/logger"),
            c = e("./_version");
        let d = new(0, l.Logger)(c.version);
        class u extends o.Description {
            static isForkEvent(e) {
                return !!(e && e._isForkEvent)
            }
        }
        class f extends u {
            constructor(e, t) {
                (0, i.isHexString)(e, 32) || d.throwArgumentError("invalid blockHash", "blockHash", e), super({
                    _isForkEvent: !0,
                    _isBlockForkEvent: !0,
                    expiry: t || 0,
                    blockHash: e
                })
            }
        }
        class h extends u {
            constructor(e, t) {
                (0, i.isHexString)(e, 32) || d.throwArgumentError("invalid transaction hash", "hash", e), super({
                    _isForkEvent: !0,
                    _isTransactionForkEvent: !0,
                    expiry: t || 0,
                    hash: e
                })
            }
        }
        class p extends u {
            constructor(e, t, r) {
                (0, i.isHexString)(e, 32) || d.throwArgumentError("invalid transaction hash", "beforeHash", e), (0, i.isHexString)(t, 32) || d.throwArgumentError("invalid transaction hash", "afterHash", t), super({
                    _isForkEvent: !0,
                    _isTransactionOrderForkEvent: !0,
                    expiry: r || 0,
                    beforeHash: e,
                    afterHash: t
                })
            }
        }
        class g {
            constructor() {
                d.checkAbstract(new.target, g), (0, o.defineReadOnly)(this, "_isProvider", !0)
            }
            getFeeData() {
                var e, t, r, n;
                return e = this, t = void 0, r = void 0, n = function*() {
                    let {
                        block: e,
                        gasPrice: t
                    } = yield(0, o.resolveProperties)({
                        block: this.getBlock("latest"),
                        gasPrice: this.getGasPrice().catch(e => null)
                    }), r = null, n = null, s = null;
                    return e && e.baseFeePerGas && (r = e.baseFeePerGas, s = a.BigNumber.from("1500000000"), n = e.baseFeePerGas.mul(2).add(s)), {
                        lastBaseFeePerGas: r,
                        maxFeePerGas: n,
                        maxPriorityFeePerGas: s,
                        gasPrice: t
                    }
                }, new(r || (r = Promise))(function(s, a) {
                    function i(e) {
                        try {
                            l(n.next(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function o(e) {
                        try {
                            l(n.throw(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? s(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(i, o)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            }
            addListener(e, t) {
                return this.on(e, t)
            }
            removeListener(e, t) {
                return this.off(e, t)
            }
            static isProvider(e) {
                return !!(e && e._isProvider)
            }
        }
    }, {
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/logger": "6NWvR",
        "./_version": "4ztCP",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "4ztCP": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "abstract-provider/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    acQbn: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "getNetwork", () => p);
        "use strict";
        var a = e("@ethersproject/logger"),
            i = e("./_version");
        let o = new(0, a.Logger)(i.version);

        function l(e) {
            let t = function(t, r) {
                null == r && (r = {});
                let n = [];
                if (t.InfuraProvider && "-" !== r.infura) try {
                    n.push(new t.InfuraProvider(e, r.infura))
                } catch (e) {}
                if (t.EtherscanProvider && "-" !== r.etherscan) try {
                    n.push(new t.EtherscanProvider(e, r.etherscan))
                } catch (e) {}
                if (t.AlchemyProvider && "-" !== r.alchemy) try {
                    n.push(new t.AlchemyProvider(e, r.alchemy))
                } catch (e) {}
                if (t.PocketProvider && "-" !== r.pocket) try {
                    let s = new t.PocketProvider(e, r.pocket);
                    s.network && -1 === ["goerli", "ropsten", "rinkeby", "sepolia"].indexOf(s.network.name) && n.push(s)
                } catch (e) {}
                if (t.CloudflareProvider && "-" !== r.cloudflare) try {
                    n.push(new t.CloudflareProvider(e))
                } catch (e) {}
                if (t.AnkrProvider && "-" !== r.ankr) try {
                    let s = new t.AnkrProvider(e, r.ankr);
                    s.network && -1 === ["ropsten"].indexOf(s.network.name) && n.push(s)
                } catch (e) {}
                if (t.QuickNodeProvider && "-" !== r.quicknode) try {
                    n.push(new t.QuickNodeProvider(e, r.quicknode))
                } catch (e) {}
                if (0 === n.length) return null;
                if (t.FallbackProvider) {
                    let s = 1;
                    return null != r.quorum ? s = r.quorum : "homestead" === e && (s = 2), new t.FallbackProvider(n, s)
                }
                return n[0]
            };
            return t.renetwork = function(e) {
                return l(e)
            }, t
        }

        function c(e, t) {
            let r = function(r, n) {
                return r.JsonRpcProvider ? new r.JsonRpcProvider(e, t) : null
            };
            return r.renetwork = function(t) {
                return c(e, t)
            }, r
        }
        let d = {
                chainId: 1,
                ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                name: "homestead",
                _defaultProvider: l("homestead")
            },
            u = {
                chainId: 3,
                ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                name: "ropsten",
                _defaultProvider: l("ropsten")
            },
            f = {
                chainId: 63,
                name: "classicMordor",
                _defaultProvider: c("https://www.ethercluster.com/mordor", "classicMordor")
            },
            h = {
                unspecified: {
                    chainId: 0,
                    name: "unspecified"
                },
                homestead: d,
                mainnet: d,
                morden: {
                    chainId: 2,
                    name: "morden"
                },
                ropsten: u,
                testnet: u,
                rinkeby: {
                    chainId: 4,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "rinkeby",
                    _defaultProvider: l("rinkeby")
                },
                kovan: {
                    chainId: 42,
                    name: "kovan",
                    _defaultProvider: l("kovan")
                },
                goerli: {
                    chainId: 5,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "goerli",
                    _defaultProvider: l("goerli")
                },
                kintsugi: {
                    chainId: 1337702,
                    name: "kintsugi"
                },
                sepolia: {
                    chainId: 0xaa36a7,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "sepolia",
                    _defaultProvider: l("sepolia")
                },
                holesky: {
                    chainId: 17e3,
                    name: "holesky",
                    _defaultProvider: l("holesky")
                },
                classic: {
                    chainId: 61,
                    name: "classic",
                    _defaultProvider: c("https://www.ethercluster.com/etc", "classic")
                },
                classicMorden: {
                    chainId: 62,
                    name: "classicMorden"
                },
                classicMordor: f,
                classicTestnet: f,
                classicKotti: {
                    chainId: 6,
                    name: "classicKotti",
                    _defaultProvider: c("https://www.ethercluster.com/kotti", "classicKotti")
                },
                xdai: {
                    chainId: 100,
                    name: "xdai"
                },
                matic: {
                    chainId: 137,
                    name: "matic",
                    _defaultProvider: l("matic")
                },
                maticmum: {
                    chainId: 80001,
                    name: "maticmum",
                    _defaultProvider: l("maticmum")
                },
                optimism: {
                    chainId: 10,
                    name: "optimism",
                    _defaultProvider: l("optimism")
                },
                "optimism-kovan": {
                    chainId: 69,
                    name: "optimism-kovan"
                },
                "optimism-goerli": {
                    chainId: 420,
                    name: "optimism-goerli"
                },
                "optimism-sepolia": {
                    chainId: 0xaa37dc,
                    name: "optimism-sepolia"
                },
                arbitrum: {
                    chainId: 42161,
                    name: "arbitrum"
                },
                "arbitrum-rinkeby": {
                    chainId: 421611,
                    name: "arbitrum-rinkeby"
                },
                "arbitrum-goerli": {
                    chainId: 421613,
                    name: "arbitrum-goerli"
                },
                "arbitrum-sepolia": {
                    chainId: 421614,
                    name: "arbitrum-sepolia"
                },
                bnb: {
                    chainId: 56,
                    name: "bnb"
                },
                bnbt: {
                    chainId: 97,
                    name: "bnbt"
                }
            };

        function p(e) {
            if (null == e) return null;
            if ("number" == typeof e) {
                for (let t in h) {
                    let r = h[t];
                    if (r.chainId === e) return {
                        name: r.name,
                        chainId: r.chainId,
                        ensAddress: r.ensAddress || null,
                        _defaultProvider: r._defaultProvider || null
                    }
                }
                return {
                    chainId: e,
                    name: "unknown"
                }
            }
            if ("string" == typeof e) {
                let t = h[e];
                return null == t ? null : {
                    name: t.name,
                    chainId: t.chainId,
                    ensAddress: t.ensAddress,
                    _defaultProvider: t._defaultProvider || null
                }
            }
            let t = h[e.name];
            if (!t) return "number" != typeof e.chainId && o.throwArgumentError("invalid network chainId", "network", e), e;
            0 !== e.chainId && e.chainId !== t.chainId && o.throwArgumentError("network chainId mismatch", "network", e);
            let r = e._defaultProvider || null;
            if (null == r && t._defaultProvider) {
                var n;
                r = (n = t._defaultProvider) && "function" == typeof n.renetwork ? t._defaultProvider.renetwork(e) : t._defaultProvider
            }
            return {
                name: e.name,
                chainId: t.chainId,
                ensAddress: e.ensAddress || t.ensAddress || null,
                _defaultProvider: r
            }
        }
    }, {
        "@ethersproject/logger": "6NWvR",
        "./_version": "jSIn2",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    jSIn2: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "networks/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    lEHz5: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "Event", () => T), s.export(r, "Resolver", () => J), s.export(r, "BaseProvider", () => K);
        "use strict";
        var a = e("@ethersproject/abstract-provider"),
            i = e("@ethersproject/base64"),
            o = e("@ethersproject/basex"),
            l = e("@ethersproject/bignumber"),
            c = e("@ethersproject/bytes"),
            d = e("@ethersproject/constants"),
            u = e("@ethersproject/hash"),
            f = e("@ethersproject/networks"),
            h = e("@ethersproject/properties"),
            p = e("@ethersproject/sha2"),
            g = e("@ethersproject/strings"),
            m = e("@ethersproject/web"),
            y = e("bech32"),
            b = s.interopDefault(y),
            x = e("@ethersproject/logger"),
            v = e("./_version"),
            w = e("./formatter"),
            E = function(e, t, r, n) {
                return new(r || (r = Promise))(function(s, a) {
                    function i(e) {
                        try {
                            l(n.next(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function o(e) {
                        try {
                            l(n.throw(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? s(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(i, o)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        let A = new(0, x.Logger)(v.version);

        function j(e) {
            return null == e ? "null" : (32 !== (0, c.hexDataLength)(e) && A.throwArgumentError("invalid topic", "topic", e), e.toLowerCase())
        }

        function I(e) {
            for (e = e.slice(); e.length > 0 && null == e[e.length - 1];) e.pop();
            return e.map(e => {
                if (!Array.isArray(e)) return j(e);
                {
                    let t = {};
                    e.forEach(e => {
                        t[j(e)] = !0
                    });
                    let r = Object.keys(t);
                    return r.sort(), r.join("|")
                }
            }).join("&")
        }

        function S(e) {
            if ("string" == typeof e) {
                if (e = e.toLowerCase(), 32 === (0, c.hexDataLength)(e)) return "tx:" + e;
                if (-1 === e.indexOf(":")) return e
            } else if (Array.isArray(e)) return "filter:*:" + I(e);
            else if (a.ForkEvent.isForkEvent(e)) throw A.warn("not implemented"), Error("not implemented");
            else if (e && "object" == typeof e) return "filter:" + (e.address || "*") + ":" + I(e.topics || []);
            throw Error("invalid event - " + e)
        }

        function R() {
            return new Date().getTime()
        }

        function k(e) {
            return new Promise(t => {
                setTimeout(t, e)
            })
        }
        let _ = ["block", "network", "pending", "poll"];
        class T {
            constructor(e, t, r) {
                (0, h.defineReadOnly)(this, "tag", e), (0, h.defineReadOnly)(this, "listener", t), (0, h.defineReadOnly)(this, "once", r), this._lastBlockNumber = -2, this._inflight = !1
            }
            get event() {
                switch (this.type) {
                    case "tx":
                        return this.hash;
                    case "filter":
                        return this.filter
                }
                return this.tag
            }
            get type() {
                return this.tag.split(":")[0]
            }
            get hash() {
                let e = this.tag.split(":");
                return "tx" !== e[0] ? null : e[1]
            }
            get filter() {
                var e;
                let t = this.tag.split(":");
                if ("filter" !== t[0]) return null;
                let r = t[1],
                    n = "" === (e = t[2]) ? [] : e.split(/&/g).map(e => {
                        if ("" === e) return [];
                        let t = e.split("|").map(e => "null" === e ? null : e);
                        return 1 === t.length ? t[0] : t
                    }),
                    s = {};
                return n.length > 0 && (s.topics = n), r && "*" !== r && (s.address = r), s
            }
            pollable() {
                return this.tag.indexOf(":") >= 0 || _.indexOf(this.tag) >= 0
            }
        }
        let C = {
            0: {
                symbol: "btc",
                p2pkh: 0,
                p2sh: 5,
                prefix: "bc"
            },
            2: {
                symbol: "ltc",
                p2pkh: 48,
                p2sh: 50,
                prefix: "ltc"
            },
            3: {
                symbol: "doge",
                p2pkh: 30,
                p2sh: 22
            },
            60: {
                symbol: "eth",
                ilk: "eth"
            },
            61: {
                symbol: "etc",
                ilk: "eth"
            },
            700: {
                symbol: "xdai",
                ilk: "eth"
            }
        };

        function P(e) {
            return (0, c.hexZeroPad)(l.BigNumber.from(e).toHexString(), 32)
        }

        function O(e) {
            return o.Base58.encode((0, c.concat)([e, (0, c.hexDataSlice)((0, p.sha256)((0, p.sha256)(e)), 0, 4)]))
        }
        let N = RegExp("^(ipfs)://(.*)$", "i"),
            M = [RegExp("^(https)://(.*)$", "i"), RegExp("^(data):(.*)$", "i"), N, RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")];

        function D(e, t) {
            try {
                return (0, g.toUtf8String)(B(e, t))
            } catch (e) {}
            return null
        }

        function B(e, t) {
            if ("0x" === e) return null;
            let r = l.BigNumber.from((0, c.hexDataSlice)(e, t, t + 32)).toNumber(),
                n = l.BigNumber.from((0, c.hexDataSlice)(e, r, r + 32)).toNumber();
            return (0, c.hexDataSlice)(e, r + 32, r + 32 + n)
        }

        function U(e) {
            return e.match(/^ipfs:\/\/ipfs\//i) ? e = e.substring(12) : e.match(/^ipfs:\/\//i) ? e = e.substring(7) : A.throwArgumentError("unsupported IPFS format", "link", e), `https://gateway.ipfs.io/ipfs/${e}`
        }

        function L(e) {
            let t = (0, c.arrayify)(e);
            if (t.length > 32) throw Error("internal; should not happen");
            let r = new Uint8Array(32);
            return r.set(t, 32 - t.length), r
        }

        function F(e) {
            let t = [],
                r = 0;
            for (let n = 0; n < e.length; n++) t.push(null), r += 32;
            for (let n = 0; n < e.length; n++) {
                let s = (0, c.arrayify)(e[n]);
                t[n] = L(r), t.push(L(s.length)), t.push(function(e) {
                    if (e.length % 32 == 0) return e;
                    let t = new Uint8Array(32 * Math.ceil(e.length / 32));
                    return t.set(e), t
                }(s)), r += 32 + 32 * Math.ceil(s.length / 32)
            }
            return (0, c.hexConcat)(t)
        }
        class J {
            constructor(e, t, r, n) {
                (0, h.defineReadOnly)(this, "provider", e), (0, h.defineReadOnly)(this, "name", r), (0, h.defineReadOnly)(this, "address", e.formatter.address(t)), (0, h.defineReadOnly)(this, "_resolvedAddress", n)
            }
            supportsWildcard() {
                return this._supportsEip2544 || (this._supportsEip2544 = this.provider.call({
                    to: this.address,
                    data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"
                }).then(e => l.BigNumber.from(e).eq(1)).catch(e => {
                    if (e.code === x.Logger.errors.CALL_EXCEPTION) return !1;
                    throw this._supportsEip2544 = null, e
                })), this._supportsEip2544
            }
            _fetch(e, t) {
                return E(this, void 0, void 0, function*() {
                    let r = {
                            to: this.address,
                            ccipReadEnabled: !0,
                            data: (0, c.hexConcat)([e, (0, u.namehash)(this.name), t || "0x"])
                        },
                        n = !1;
                    (yield this.supportsWildcard()) && (n = !0, r.data = (0, c.hexConcat)(["0x9061b923", F([(0, u.dnsEncode)(this.name), r.data])]));
                    try {
                        let e = yield this.provider.call(r);
                        return (0, c.arrayify)(e).length % 32 == 4 && A.throwError("resolver threw error", x.Logger.errors.CALL_EXCEPTION, {
                            transaction: r,
                            data: e
                        }), n && (e = B(e, 0)), e
                    } catch (e) {
                        if (e.code === x.Logger.errors.CALL_EXCEPTION) return null;
                        throw e
                    }
                })
            }
            _fetchBytes(e, t) {
                return E(this, void 0, void 0, function*() {
                    let r = yield this._fetch(e, t);
                    return null != r ? B(r, 0) : null
                })
            }
            _getAddress(e, t) {
                let r = C[String(e)];
                if (null == r && A.throwError(`unsupported coin type: ${e}`, x.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: `getAddress(${e})`
                    }), "eth" === r.ilk) return this.provider.formatter.address(t);
                let n = (0, c.arrayify)(t);
                if (null != r.p2pkh) {
                    let e = t.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
                    if (e) {
                        let t = parseInt(e[1], 16);
                        if (e[2].length === 2 * t && t >= 1 && t <= 75) return O((0, c.concat)([
                            [r.p2pkh], "0x" + e[2]
                        ]))
                    }
                }
                if (null != r.p2sh) {
                    let e = t.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
                    if (e) {
                        let t = parseInt(e[1], 16);
                        if (e[2].length === 2 * t && t >= 1 && t <= 75) return O((0, c.concat)([
                            [r.p2sh], "0x" + e[2]
                        ]))
                    }
                }
                if (null != r.prefix) {
                    let e = n[1],
                        t = n[0];
                    if (0 === t ? 20 !== e && 32 !== e && (t = -1) : t = -1, t >= 0 && n.length === 2 + e && e >= 1 && e <= 75) {
                        let e = b.default.toWords(n.slice(2));
                        return e.unshift(t), b.default.encode(r.prefix, e)
                    }
                }
                return null
            }
            getAddress(e) {
                return E(this, void 0, void 0, function*() {
                    if (null == e && (e = 60), 60 === e) try {
                        let e = yield this._fetch("0x3b3b57de");
                        if ("0x" === e || e === d.HashZero) return null;
                        return this.provider.formatter.callAddress(e)
                    } catch (e) {
                        if (e.code === x.Logger.errors.CALL_EXCEPTION) return null;
                        throw e
                    }
                    let t = yield this._fetchBytes("0xf1cb7e06", P(e));
                    if (null == t || "0x" === t) return null;
                    let r = this._getAddress(e, t);
                    return null == r && A.throwError("invalid or unsupported coin data", x.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: `getAddress(${e})`,
                        coinType: e,
                        data: t
                    }), r
                })
            }
            getAvatar() {
                return E(this, void 0, void 0, function*() {
                    let e = [{
                        type: "name",
                        content: this.name
                    }];
                    try {
                        let t = yield this.getText("avatar");
                        if (null == t) return null;
                        for (let r = 0; r < M.length; r++) {
                            let n = t.match(M[r]);
                            if (null == n) continue;
                            let s = n[1].toLowerCase();
                            switch (s) {
                                case "https":
                                    return e.push({
                                        type: "url",
                                        content: t
                                    }), {
                                        linkage: e,
                                        url: t
                                    };
                                case "data":
                                    return e.push({
                                        type: "data",
                                        content: t
                                    }), {
                                        linkage: e,
                                        url: t
                                    };
                                case "ipfs":
                                    return e.push({
                                        type: "ipfs",
                                        content: t
                                    }), {
                                        linkage: e,
                                        url: U(t)
                                    };
                                case "erc721":
                                case "erc1155": {
                                    let r = "erc721" === s ? "0xc87b56dd" : "0x0e89341c";
                                    e.push({
                                        type: s,
                                        content: t
                                    });
                                    let a = this._resolvedAddress || (yield this.getAddress()),
                                        i = (n[2] || "").split("/");
                                    if (2 !== i.length) return null;
                                    let o = yield this.provider.formatter.address(i[0]), d = (0, c.hexZeroPad)(l.BigNumber.from(i[1]).toHexString(), 32);
                                    if ("erc721" === s) {
                                        let t = this.provider.formatter.callAddress((yield this.provider.call({
                                            to: o,
                                            data: (0, c.hexConcat)(["0x6352211e", d])
                                        })));
                                        if (a !== t) return null;
                                        e.push({
                                            type: "owner",
                                            content: t
                                        })
                                    } else if ("erc1155" === s) {
                                        let t = l.BigNumber.from((yield this.provider.call({
                                            to: o,
                                            data: (0, c.hexConcat)(["0x00fdd58e", (0, c.hexZeroPad)(a, 32), d])
                                        })));
                                        if (t.isZero()) return null;
                                        e.push({
                                            type: "balance",
                                            content: t.toString()
                                        })
                                    }
                                    let u = {
                                            to: this.provider.formatter.address(i[0]),
                                            data: (0, c.hexConcat)([r, d])
                                        },
                                        f = D((yield this.provider.call(u)), 0);
                                    if (null == f) return null;
                                    e.push({
                                        type: "metadata-url-base",
                                        content: f
                                    }), "erc1155" === s && (f = f.replace("{id}", d.substring(2)), e.push({
                                        type: "metadata-url-expanded",
                                        content: f
                                    })), f.match(/^ipfs:/i) && (f = U(f)), e.push({
                                        type: "metadata-url",
                                        content: f
                                    });
                                    let h = yield(0, m.fetchJson)(f);
                                    if (!h) return null;
                                    e.push({
                                        type: "metadata",
                                        content: JSON.stringify(h)
                                    });
                                    let p = h.image;
                                    if ("string" != typeof p) return null;
                                    if (p.match(/^(https:\/\/|data:)/i));
                                    else {
                                        let t = p.match(N);
                                        if (null == t) return null;
                                        e.push({
                                            type: "url-ipfs",
                                            content: p
                                        }), p = U(p)
                                    }
                                    return e.push({
                                        type: "url",
                                        content: p
                                    }), {
                                        linkage: e,
                                        url: p
                                    }
                                }
                            }
                        }
                    } catch (e) {}
                    return null
                })
            }
            getContentHash() {
                return E(this, void 0, void 0, function*() {
                    let e = yield this._fetchBytes("0xbc1c58d1");
                    if (null == e || "0x" === e) return null;
                    let t = e.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
                    if (t) {
                        let e = parseInt(t[3], 16);
                        if (t[4].length === 2 * e) return "ipfs://" + o.Base58.encode("0x" + t[1])
                    }
                    let r = e.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
                    if (r) {
                        let e = parseInt(r[3], 16);
                        if (r[4].length === 2 * e) return "ipns://" + o.Base58.encode("0x" + r[1])
                    }
                    let n = e.match(/^0xe40101fa011b20([0-9a-f]*)$/);
                    if (n && 64 === n[1].length) return "bzz://" + n[1];
                    let s = e.match(/^0x90b2c605([0-9a-f]*)$/);
                    if (s && 68 === s[1].length) {
                        let e = {
                            "=": "",
                            "+": "-",
                            "/": "_"
                        };
                        return "sia://" + (0, i.encode)("0x" + s[1]).replace(/[=+\/]/g, t => e[t])
                    }
                    return A.throwError("invalid or unsupported content hash data", x.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "getContentHash()",
                        data: e
                    })
                })
            }
            getText(e) {
                return E(this, void 0, void 0, function*() {
                    let t = (0, g.toUtf8Bytes)(e);
                    (t = (0, c.concat)([P(64), P(t.length), t])).length % 32 != 0 && (t = (0, c.concat)([t, (0, c.hexZeroPad)("0x", 32 - e.length % 32)]));
                    let r = yield this._fetchBytes("0x59d1d43c", (0, c.hexlify)(t));
                    return null == r || "0x" === r ? null : (0, g.toUtf8String)(r)
                })
            }
        }
        let H = null,
            W = 1;
        class K extends a.Provider {
            constructor(e) {
                if (super(), this._events = [], this._emitted = {
                        block: -2
                    }, this.disableCcipRead = !1, this.formatter = new.target.getFormatter(), (0, h.defineReadOnly)(this, "anyNetwork", "any" === e), this.anyNetwork && (e = this.detectNetwork()), e instanceof Promise) this._networkPromise = e, e.catch(e => {}), this._ready().catch(e => {});
                else {
                    let t = (0, h.getStatic)(new.target, "getNetwork")(e);
                    t ? ((0, h.defineReadOnly)(this, "_network", t), this.emit("network", t, null)) : A.throwArgumentError("invalid network", "network", e)
                }
                this._maxInternalBlockNumber = -1024, this._lastBlockNumber = -2, this._maxFilterBlockRange = 10, this._pollingInterval = 4e3, this._fastQueryDate = 0
            }
            _ready() {
                return E(this, void 0, void 0, function*() {
                    if (null == this._network) {
                        let e = null;
                        if (this._networkPromise) try {
                            e = yield this._networkPromise
                        } catch (e) {}
                        null == e && (e = yield this.detectNetwork()), e || A.throwError("no network detected", x.Logger.errors.UNKNOWN_ERROR, {}), null == this._network && (this.anyNetwork ? this._network = e : (0, h.defineReadOnly)(this, "_network", e), this.emit("network", e, null))
                    }
                    return this._network
                })
            }
            get ready() {
                return (0, m.poll)(() => this._ready().then(e => e, e => {
                    if (e.code !== x.Logger.errors.NETWORK_ERROR || "noNetwork" !== e.event) throw e
                }))
            }
            static getFormatter() {
                return null == H && (H = new(0, w.Formatter)), H
            }
            static getNetwork(e) {
                return (0, f.getNetwork)(null == e ? "homestead" : e)
            }
            ccipReadFetch(e, t, r) {
                return E(this, void 0, void 0, function*() {
                    if (this.disableCcipRead || 0 === r.length) return null;
                    let n = e.to.toLowerCase(),
                        s = t.toLowerCase(),
                        a = [];
                    for (let e = 0; e < r.length; e++) {
                        let t = r[e],
                            i = t.replace("{sender}", n).replace("{data}", s),
                            o = t.indexOf("{data}") >= 0 ? null : JSON.stringify({
                                data: s,
                                sender: n
                            }),
                            l = yield(0, m.fetchJson)({
                                url: i,
                                errorPassThrough: !0
                            }, o, (e, t) => (e.status = t.statusCode, e));
                        if (l.data) return l.data;
                        let c = l.message || "unknown error";
                        if (l.status >= 400 && l.status < 500) return A.throwError(`response not found during CCIP fetch: ${c}`, x.Logger.errors.SERVER_ERROR, {
                            url: t,
                            errorMessage: c
                        });
                        a.push(c)
                    }
                    return A.throwError(`error encountered during CCIP fetch: ${a.map(e=>JSON.stringify(e)).join(", ")}`, x.Logger.errors.SERVER_ERROR, {
                        urls: r,
                        errorMessages: a
                    })
                })
            }
            _getInternalBlockNumber(e) {
                return E(this, void 0, void 0, function*() {
                    if (yield this._ready(), e > 0)
                        for (; this._internalBlockNumber;) {
                            let t = this._internalBlockNumber;
                            try {
                                let r = yield t;
                                if (R() - r.respTime <= e) return r.blockNumber;
                                break
                            } catch (e) {
                                if (this._internalBlockNumber === t) break
                            }
                        }
                    let t = R(),
                        r = (0, h.resolveProperties)({
                            blockNumber: this.perform("getBlockNumber", {}),
                            networkError: this.getNetwork().then(e => null, e => e)
                        }).then(({
                            blockNumber: e,
                            networkError: n
                        }) => {
                            if (n) throw this._internalBlockNumber === r && (this._internalBlockNumber = null), n;
                            let s = R();
                            return (e = l.BigNumber.from(e).toNumber()) < this._maxInternalBlockNumber && (e = this._maxInternalBlockNumber), this._maxInternalBlockNumber = e, this._setFastBlockNumber(e), {
                                blockNumber: e,
                                reqTime: t,
                                respTime: s
                            }
                        });
                    return this._internalBlockNumber = r, r.catch(e => {
                        this._internalBlockNumber === r && (this._internalBlockNumber = null)
                    }), (yield r).blockNumber
                })
            }
            poll() {
                return E(this, void 0, void 0, function*() {
                    let e = W++,
                        t = [],
                        r = null;
                    try {
                        r = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2)
                    } catch (e) {
                        this.emit("error", e);
                        return
                    }
                    if (this._setFastBlockNumber(r), this.emit("poll", e, r), r === this._lastBlockNumber) return void this.emit("didPoll", e);
                    if (-2 === this._emitted.block && (this._emitted.block = r - 1), Math.abs(this._emitted.block - r) > 1e3) A.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${r})`), this.emit("error", A.makeError("network block skew detected", x.Logger.errors.NETWORK_ERROR, {
                        blockNumber: r,
                        event: "blockSkew",
                        previousBlockNumber: this._emitted.block
                    })), this.emit("block", r);
                    else
                        for (let e = this._emitted.block + 1; e <= r; e++) this.emit("block", e);
                    this._emitted.block !== r && (this._emitted.block = r, Object.keys(this._emitted).forEach(e => {
                        if ("block" === e) return;
                        let t = this._emitted[e];
                        "pending" !== t && r - t > 12 && delete this._emitted[e]
                    })), -2 === this._lastBlockNumber && (this._lastBlockNumber = r - 1), this._events.forEach(e => {
                        switch (e.type) {
                            case "tx": {
                                let r = e.hash,
                                    n = this.getTransactionReceipt(r).then(e => (e && null != e.blockNumber && (this._emitted["t:" + r] = e.blockNumber, this.emit(r, e)), null)).catch(e => {
                                        this.emit("error", e)
                                    });
                                t.push(n);
                                break
                            }
                            case "filter":
                                if (!e._inflight) {
                                    e._inflight = !0, -2 === e._lastBlockNumber && (e._lastBlockNumber = r - 1);
                                    let n = e.filter;
                                    n.fromBlock = e._lastBlockNumber + 1, n.toBlock = r;
                                    let s = n.toBlock - this._maxFilterBlockRange;
                                    s > n.fromBlock && (n.fromBlock = s), n.fromBlock < 0 && (n.fromBlock = 0);
                                    let a = this.getLogs(n).then(t => {
                                        e._inflight = !1, 0 !== t.length && t.forEach(t => {
                                            t.blockNumber > e._lastBlockNumber && (e._lastBlockNumber = t.blockNumber), this._emitted["b:" + t.blockHash] = t.blockNumber, this._emitted["t:" + t.transactionHash] = t.blockNumber, this.emit(n, t)
                                        })
                                    }).catch(t => {
                                        this.emit("error", t), e._inflight = !1
                                    });
                                    t.push(a)
                                }
                        }
                    }), this._lastBlockNumber = r, Promise.all(t).then(() => {
                        this.emit("didPoll", e)
                    }).catch(e => {
                        this.emit("error", e)
                    })
                })
            }
            resetEventsBlock(e) {
                this._lastBlockNumber = e - 1, this.polling && this.poll()
            }
            get network() {
                return this._network
            }
            detectNetwork() {
                return E(this, void 0, void 0, function*() {
                    return A.throwError("provider does not support network detection", x.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "provider.detectNetwork"
                    })
                })
            }
            getNetwork() {
                return E(this, void 0, void 0, function*() {
                    let e = yield this._ready(), t = yield this.detectNetwork();
                    if (e.chainId !== t.chainId) {
                        if (this.anyNetwork) return this._network = t, this._lastBlockNumber = -2, this._fastBlockNumber = null, this._fastBlockNumberPromise = null, this._fastQueryDate = 0, this._emitted.block = -2, this._maxInternalBlockNumber = -1024, this._internalBlockNumber = null, this.emit("network", t, e), yield k(0), this._network;
                        let r = A.makeError("underlying network changed", x.Logger.errors.NETWORK_ERROR, {
                            event: "changed",
                            network: e,
                            detectedNetwork: t
                        });
                        throw this.emit("error", r), r
                    }
                    return e
                })
            }
            get blockNumber() {
                return this._getInternalBlockNumber(100 + this.pollingInterval / 2).then(e => {
                    this._setFastBlockNumber(e)
                }, e => {}), null != this._fastBlockNumber ? this._fastBlockNumber : -1
            }
            get polling() {
                return null != this._poller
            }
            set polling(e) {
                e && !this._poller ? (this._poller = setInterval(() => {
                    this.poll()
                }, this.pollingInterval), this._bootstrapPoll || (this._bootstrapPoll = setTimeout(() => {
                    this.poll(), this._bootstrapPoll = setTimeout(() => {
                        this._poller || this.poll(), this._bootstrapPoll = null
                    }, this.pollingInterval)
                }, 0))) : !e && this._poller && (clearInterval(this._poller), this._poller = null)
            }
            get pollingInterval() {
                return this._pollingInterval
            }
            set pollingInterval(e) {
                if ("number" != typeof e || e <= 0 || parseInt(String(e)) != e) throw Error("invalid polling interval");
                this._pollingInterval = e, this._poller && (clearInterval(this._poller), this._poller = setInterval(() => {
                    this.poll()
                }, this._pollingInterval))
            }
            _getFastBlockNumber() {
                let e = R();
                return e - this._fastQueryDate > 2 * this._pollingInterval && (this._fastQueryDate = e, this._fastBlockNumberPromise = this.getBlockNumber().then(e => ((null == this._fastBlockNumber || e > this._fastBlockNumber) && (this._fastBlockNumber = e), this._fastBlockNumber))), this._fastBlockNumberPromise
            }
            _setFastBlockNumber(e) {
                (null == this._fastBlockNumber || !(e < this._fastBlockNumber)) && (this._fastQueryDate = R(), (null == this._fastBlockNumber || e > this._fastBlockNumber) && (this._fastBlockNumber = e, this._fastBlockNumberPromise = Promise.resolve(e)))
            }
            waitForTransaction(e, t, r) {
                return E(this, void 0, void 0, function*() {
                    return this._waitForTransaction(e, null == t ? 1 : t, r || 0, null)
                })
            }
            _waitForTransaction(e, t, r, n) {
                return E(this, void 0, void 0, function*() {
                    let s = yield this.getTransactionReceipt(e);
                    return (s ? s.confirmations : 0) >= t ? s : new Promise((s, a) => {
                        let i = [],
                            o = !1,
                            l = function() {
                                return !!o || (o = !0, i.forEach(e => {
                                    e()
                                }), !1)
                            },
                            c = e => {
                                !(e.confirmations < t) && (l() || s(e))
                            };
                        if (this.on(e, c), i.push(() => {
                                this.removeListener(e, c)
                            }), n) {
                            let r = n.startBlock,
                                s = null,
                                c = i => E(this, void 0, void 0, function*() {
                                    o || (yield k(1e3), this.getTransactionCount(n.from).then(d => E(this, void 0, void 0, function*() {
                                        if (!o) {
                                            if (d <= n.nonce) r = i;
                                            else {
                                                {
                                                    let t = yield this.getTransaction(e);
                                                    if (t && null != t.blockNumber) return
                                                }
                                                for (null == s && (s = r - 3) < n.startBlock && (s = n.startBlock); s <= i;) {
                                                    if (o) return;
                                                    let r = yield this.getBlockWithTransactions(s);
                                                    for (let s = 0; s < r.transactions.length; s++) {
                                                        let i = r.transactions[s];
                                                        if (i.hash === e) return;
                                                        if (i.from === n.from && i.nonce === n.nonce) {
                                                            if (o) return;
                                                            let r = yield this.waitForTransaction(i.hash, t);
                                                            if (l()) return;
                                                            let s = "replaced";
                                                            i.data === n.data && i.to === n.to && i.value.eq(n.value) ? s = "repriced" : "0x" === i.data && i.from === i.to && i.value.isZero() && (s = "cancelled"), a(A.makeError("transaction was replaced", x.Logger.errors.TRANSACTION_REPLACED, {
                                                                cancelled: "replaced" === s || "cancelled" === s,
                                                                reason: s,
                                                                replacement: this._wrapTransaction(i),
                                                                hash: e,
                                                                receipt: r
                                                            }));
                                                            return
                                                        }
                                                    }
                                                    s++
                                                }
                                            }
                                            o || this.once("block", c)
                                        }
                                    }), e => {
                                        o || this.once("block", c)
                                    }))
                                });
                            if (o) return;
                            this.once("block", c), i.push(() => {
                                this.removeListener("block", c)
                            })
                        }
                        if ("number" == typeof r && r > 0) {
                            let e = setTimeout(() => {
                                l() || a(A.makeError("timeout exceeded", x.Logger.errors.TIMEOUT, {
                                    timeout: r
                                }))
                            }, r);
                            e.unref && e.unref(), i.push(() => {
                                clearTimeout(e)
                            })
                        }
                    })
                })
            }
            getBlockNumber() {
                return E(this, void 0, void 0, function*() {
                    return this._getInternalBlockNumber(0)
                })
            }
            getGasPrice() {
                return E(this, void 0, void 0, function*() {
                    yield this.getNetwork();
                    let e = yield this.perform("getGasPrice", {});
                    try {
                        return l.BigNumber.from(e)
                    } catch (t) {
                        return A.throwError("bad result from backend", x.Logger.errors.SERVER_ERROR, {
                            method: "getGasPrice",
                            result: e,
                            error: t
                        })
                    }
                })
            }
            getBalance(e, t) {
                return E(this, void 0, void 0, function*() {
                    yield this.getNetwork();
                    let r = yield(0, h.resolveProperties)({
                        address: this._getAddress(e),
                        blockTag: this._getBlockTag(t)
                    }), n = yield this.perform("getBalance", r);
                    try {
                        return l.BigNumber.from(n)
                    } catch (e) {
                        return A.throwError("bad result from backend", x.Logger.errors.SERVER_ERROR, {
                            method: "getBalance",
                            params: r,
                            result: n,
                            error: e
                        })
                    }
                })
            }
            getTransactionCount(e, t) {
                return E(this, void 0, void 0, function*() {
                    yield this.getNetwork();
                    let r = yield(0, h.resolveProperties)({
                        address: this._getAddress(e),
                        blockTag: this._getBlockTag(t)
                    }), n = yield this.perform("getTransactionCount", r);
                    try {
                        return l.BigNumber.from(n).toNumber()
                    } catch (e) {
                        return A.throwError("bad result from backend", x.Logger.errors.SERVER_ERROR, {
                            method: "getTransactionCount",
                            params: r,
                            result: n,
                            error: e
                        })
                    }
                })
            }
            getCode(e, t) {
                return E(this, void 0, void 0, function*() {
                    yield this.getNetwork();
                    let r = yield(0, h.resolveProperties)({
                        address: this._getAddress(e),
                        blockTag: this._getBlockTag(t)
                    }), n = yield this.perform("getCode", r);
                    try {
                        return (0, c.hexlify)(n)
                    } catch (e) {
                        return A.throwError("bad result from backend", x.Logger.errors.SERVER_ERROR, {
                            method: "getCode",
                            params: r,
                            result: n,
                            error: e
                        })
                    }
                })
            }
            getStorageAt(e, t, r) {
                return E(this, void 0, void 0, function*() {
                    yield this.getNetwork();
                    let n = yield(0, h.resolveProperties)({
                        address: this._getAddress(e),
                        blockTag: this._getBlockTag(r),
                        position: Promise.resolve(t).then(e => (0, c.hexValue)(e))
                    }), s = yield this.perform("getStorageAt", n);
                    try {
                        return (0, c.hexlify)(s)
                    } catch (e) {
                        return A.throwError("bad result from backend", x.Logger.errors.SERVER_ERROR, {
                            method: "getStorageAt",
                            params: n,
                            result: s,
                            error: e
                        })
                    }
                })
            }
            _wrapTransaction(e, t, r) {
                if (null != t && 32 !== (0, c.hexDataLength)(t)) throw Error("invalid response - sendTransaction");
                return null != t && e.hash !== t && A.throwError("Transaction hash mismatch from Provider.sendTransaction.", x.Logger.errors.UNKNOWN_ERROR, {
                    expectedHash: e.hash,
                    returnedHash: t
                }), e.wait = (t, n) => E(this, void 0, void 0, function*() {
                    let s;
                    null == t && (t = 1), null == n && (n = 0), 0 !== t && null != r && (s = {
                        data: e.data,
                        from: e.from,
                        nonce: e.nonce,
                        to: e.to,
                        value: e.value,
                        startBlock: r
                    });
                    let a = yield this._waitForTransaction(e.hash, t, n, s);
                    return null == a && 0 === t ? null : (this._emitted["t:" + e.hash] = a.blockNumber, 0 === a.status && A.throwError("transaction failed", x.Logger.errors.CALL_EXCEPTION, {
                        transactionHash: e.hash,
                        transaction: e,
                        receipt: a
                    }), a)
                }), e
            }
            sendTransaction(e) {
                return E(this, void 0, void 0, function*() {
                    yield this.getNetwork();
                    let t = yield Promise.resolve(e).then(e => (0, c.hexlify)(e)), r = this.formatter.transaction(e);
                    null == r.confirmations && (r.confirmations = 0);
                    let n = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                    try {
                        let e = yield this.perform("sendTransaction", {
                            signedTransaction: t
                        });
                        return this._wrapTransaction(r, e, n)
                    } catch (e) {
                        throw e.transaction = r, e.transactionHash = r.hash, e
                    }
                })
            }
            _getTransactionRequest(e) {
                return E(this, void 0, void 0, function*() {
                    let t = yield e, r = {};
                    return ["from", "to"].forEach(e => {
                        null != t[e] && (r[e] = Promise.resolve(t[e]).then(e => e ? this._getAddress(e) : null))
                    }), ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach(e => {
                        null != t[e] && (r[e] = Promise.resolve(t[e]).then(e => e ? l.BigNumber.from(e) : null))
                    }), ["type"].forEach(e => {
                        null != t[e] && (r[e] = Promise.resolve(t[e]).then(e => null != e ? e : null))
                    }), t.accessList && (r.accessList = this.formatter.accessList(t.accessList)), ["data"].forEach(e => {
                        null != t[e] && (r[e] = Promise.resolve(t[e]).then(e => e ? (0, c.hexlify)(e) : null))
                    }), this.formatter.transactionRequest((yield(0, h.resolveProperties)(r)))
                })
            }
            _getFilter(e) {
                return E(this, void 0, void 0, function*() {
                    e = yield e;
                    let t = {};
                    return null != e.address && (t.address = this._getAddress(e.address)), ["blockHash", "topics"].forEach(r => {
                        null != e[r] && (t[r] = e[r])
                    }), ["fromBlock", "toBlock"].forEach(r => {
                        null != e[r] && (t[r] = this._getBlockTag(e[r]))
                    }), this.formatter.filter((yield(0, h.resolveProperties)(t)))
                })
            }
            _call(e, t, r) {
                return E(this, void 0, void 0, function*() {
                    r >= 10 && A.throwError("CCIP read exceeded maximum redirections", x.Logger.errors.SERVER_ERROR, {
                        redirects: r,
                        transaction: e
                    });
                    let n = e.to,
                        s = yield this.perform("call", {
                            transaction: e,
                            blockTag: t
                        });
                    if (r >= 0 && "latest" === t && null != n && "0x556f1830" === s.substring(0, 10) && (0, c.hexDataLength)(s) % 32 == 4) try {
                        let a = (0, c.hexDataSlice)(s, 4),
                            i = (0, c.hexDataSlice)(a, 0, 32);
                        l.BigNumber.from(i).eq(n) || A.throwError("CCIP Read sender did not match", x.Logger.errors.CALL_EXCEPTION, {
                            name: "OffchainLookup",
                            signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                            transaction: e,
                            data: s
                        });
                        let o = [],
                            d = l.BigNumber.from((0, c.hexDataSlice)(a, 32, 64)).toNumber(),
                            u = l.BigNumber.from((0, c.hexDataSlice)(a, d, d + 32)).toNumber(),
                            f = (0, c.hexDataSlice)(a, d + 32);
                        for (let t = 0; t < u; t++) {
                            let r = D(f, 32 * t);
                            null == r && A.throwError("CCIP Read contained corrupt URL string", x.Logger.errors.CALL_EXCEPTION, {
                                name: "OffchainLookup",
                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                transaction: e,
                                data: s
                            }), o.push(r)
                        }
                        let h = B(a, 64);
                        l.BigNumber.from((0, c.hexDataSlice)(a, 100, 128)).isZero() || A.throwError("CCIP Read callback selector included junk", x.Logger.errors.CALL_EXCEPTION, {
                            name: "OffchainLookup",
                            signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                            transaction: e,
                            data: s
                        });
                        let p = (0, c.hexDataSlice)(a, 96, 100),
                            g = B(a, 128),
                            m = yield this.ccipReadFetch(e, h, o);
                        null == m && A.throwError("CCIP Read disabled or provided no URLs", x.Logger.errors.CALL_EXCEPTION, {
                            name: "OffchainLookup",
                            signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                            transaction: e,
                            data: s
                        });
                        let y = {
                            to: n,
                            data: (0, c.hexConcat)([p, F([m, g])])
                        };
                        return this._call(y, t, r + 1)
                    } catch (e) {
                        if (e.code === x.Logger.errors.SERVER_ERROR) throw e
                    }
                    try {
                        return (0, c.hexlify)(s)
                    } catch (r) {
                        return A.throwError("bad result from backend", x.Logger.errors.SERVER_ERROR, {
                            method: "call",
                            params: {
                                transaction: e,
                                blockTag: t
                            },
                            result: s,
                            error: r
                        })
                    }
                })
            }
            call(e, t) {
                return E(this, void 0, void 0, function*() {
                    yield this.getNetwork();
                    let r = yield(0, h.resolveProperties)({
                        transaction: this._getTransactionRequest(e),
                        blockTag: this._getBlockTag(t),
                        ccipReadEnabled: Promise.resolve(e.ccipReadEnabled)
                    });
                    return this._call(r.transaction, r.blockTag, r.ccipReadEnabled ? 0 : -1)
                })
            }
            estimateGas(e) {
                return E(this, void 0, void 0, function*() {
                    yield this.getNetwork();
                    let t = yield(0, h.resolveProperties)({
                        transaction: this._getTransactionRequest(e)
                    }), r = yield this.perform("estimateGas", t);
                    try {
                        return l.BigNumber.from(r)
                    } catch (e) {
                        return A.throwError("bad result from backend", x.Logger.errors.SERVER_ERROR, {
                            method: "estimateGas",
                            params: t,
                            result: r,
                            error: e
                        })
                    }
                })
            }
            _getAddress(e) {
                return E(this, void 0, void 0, function*() {
                    "string" != typeof(e = yield e) && A.throwArgumentError("invalid address or ENS name", "name", e);
                    let t = yield this.resolveName(e);
                    return null == t && A.throwError("ENS name not configured", x.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: `resolveName(${JSON.stringify(e)})`
                    }), t
                })
            }
            _getBlock(e, t) {
                return E(this, void 0, void 0, function*() {
                    yield this.getNetwork(), e = yield e;
                    let r = -128,
                        n = {
                            includeTransactions: !!t
                        };
                    if ((0, c.isHexString)(e, 32)) n.blockHash = e;
                    else try {
                        n.blockTag = yield this._getBlockTag(e), (0, c.isHexString)(n.blockTag) && (r = parseInt(n.blockTag.substring(2), 16))
                    } catch (t) {
                        A.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", e)
                    }
                    return (0, m.poll)(() => E(this, void 0, void 0, function*() {
                        let e = yield this.perform("getBlock", n);
                        if (null == e) return null != n.blockHash && null == this._emitted["b:" + n.blockHash] || null != n.blockTag && r > this._emitted.block ? null : void 0;
                        if (t) {
                            let t = null;
                            for (let r = 0; r < e.transactions.length; r++) {
                                let n = e.transactions[r];
                                if (null == n.blockNumber) n.confirmations = 0;
                                else if (null == n.confirmations) {
                                    null == t && (t = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval));
                                    let e = t - n.blockNumber + 1;
                                    e <= 0 && (e = 1), n.confirmations = e
                                }
                            }
                            let r = this.formatter.blockWithTransactions(e);
                            return r.transactions = r.transactions.map(e => this._wrapTransaction(e)), r
                        }
                        return this.formatter.block(e)
                    }), {
                        oncePoll: this
                    })
                })
            }
            getBlock(e) {
                return this._getBlock(e, !1)
            }
            getBlockWithTransactions(e) {
                return this._getBlock(e, !0)
            }
            getTransaction(e) {
                return E(this, void 0, void 0, function*() {
                    yield this.getNetwork(), e = yield e;
                    let t = {
                        transactionHash: this.formatter.hash(e, !0)
                    };
                    return (0, m.poll)(() => E(this, void 0, void 0, function*() {
                        let r = yield this.perform("getTransaction", t);
                        if (null == r) return null == this._emitted["t:" + e] ? null : void 0;
                        let n = this.formatter.transactionResponse(r);
                        if (null == n.blockNumber) n.confirmations = 0;
                        else if (null == n.confirmations) {
                            let e = (yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval)) - n.blockNumber + 1;
                            e <= 0 && (e = 1), n.confirmations = e
                        }
                        return this._wrapTransaction(n)
                    }), {
                        oncePoll: this
                    })
                })
            }
            getTransactionReceipt(e) {
                return E(this, void 0, void 0, function*() {
                    yield this.getNetwork(), e = yield e;
                    let t = {
                        transactionHash: this.formatter.hash(e, !0)
                    };
                    return (0, m.poll)(() => E(this, void 0, void 0, function*() {
                        let r = yield this.perform("getTransactionReceipt", t);
                        if (null == r) return null == this._emitted["t:" + e] ? null : void 0;
                        if (null == r.blockHash) return;
                        let n = this.formatter.receipt(r);
                        if (null == n.blockNumber) n.confirmations = 0;
                        else if (null == n.confirmations) {
                            let e = (yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval)) - n.blockNumber + 1;
                            e <= 0 && (e = 1), n.confirmations = e
                        }
                        return n
                    }), {
                        oncePoll: this
                    })
                })
            }
            getLogs(e) {
                return E(this, void 0, void 0, function*() {
                    yield this.getNetwork();
                    let t = yield(0, h.resolveProperties)({
                        filter: this._getFilter(e)
                    }), r = yield this.perform("getLogs", t);
                    return r.forEach(e => {
                        null == e.removed && (e.removed = !1)
                    }), w.Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(r)
                })
            }
            getEtherPrice() {
                return E(this, void 0, void 0, function*() {
                    return yield this.getNetwork(), this.perform("getEtherPrice", {})
                })
            }
            _getBlockTag(e) {
                return E(this, void 0, void 0, function*() {
                    if ("number" == typeof(e = yield e) && e < 0) {
                        e % 1 && A.throwArgumentError("invalid BlockTag", "blockTag", e);
                        let t = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                        return (t += e) < 0 && (t = 0), this.formatter.blockTag(t)
                    }
                    return this.formatter.blockTag(e)
                })
            }
            getResolver(e) {
                return E(this, void 0, void 0, function*() {
                    let t = e;
                    for (;;) {
                        if ("" === t || "." === t || "eth" !== e && "eth" === t) return null;
                        let r = yield this._getResolver(t, "getResolver");
                        if (null != r) {
                            let n = new J(this, r, e);
                            if (t !== e && !(yield n.supportsWildcard())) return null;
                            return n
                        }
                        t = t.split(".").slice(1).join(".")
                    }
                })
            }
            _getResolver(e, t) {
                return E(this, void 0, void 0, function*() {
                    null == t && (t = "ENS");
                    let r = yield this.getNetwork();
                    r.ensAddress || A.throwError("network does not support ENS", x.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: t,
                        network: r.name
                    });
                    try {
                        let t = yield this.call({
                            to: r.ensAddress,
                            data: "0x0178b8bf" + (0, u.namehash)(e).substring(2)
                        });
                        return this.formatter.callAddress(t)
                    } catch (e) {}
                    return null
                })
            }
            resolveName(e) {
                return E(this, void 0, void 0, function*() {
                    e = yield e;
                    try {
                        return Promise.resolve(this.formatter.address(e))
                    } catch (t) {
                        if ((0, c.isHexString)(e)) throw t
                    }
                    "string" != typeof e && A.throwArgumentError("invalid ENS name", "name", e);
                    let t = yield this.getResolver(e);
                    return t ? yield t.getAddress(): null
                })
            }
            lookupAddress(e) {
                return E(this, void 0, void 0, function*() {
                    e = yield e;
                    let t = (e = this.formatter.address(e)).substring(2).toLowerCase() + ".addr.reverse",
                        r = yield this._getResolver(t, "lookupAddress");
                    if (null == r) return null;
                    let n = D((yield this.call({
                        to: r,
                        data: "0x691f3431" + (0, u.namehash)(t).substring(2)
                    })), 0);
                    return (yield this.resolveName(n)) != e ? null : n
                })
            }
            getAvatar(e) {
                return E(this, void 0, void 0, function*() {
                    let t = null;
                    if ((0, c.isHexString)(e)) {
                        let r = this.formatter.address(e).substring(2).toLowerCase() + ".addr.reverse",
                            n = yield this._getResolver(r, "getAvatar");
                        if (!n) return null;
                        t = new J(this, n, r);
                        try {
                            let e = yield t.getAvatar();
                            if (e) return e.url
                        } catch (e) {
                            if (e.code !== x.Logger.errors.CALL_EXCEPTION) throw e
                        }
                        try {
                            let e = D((yield this.call({
                                to: n,
                                data: "0x691f3431" + (0, u.namehash)(r).substring(2)
                            })), 0);
                            t = yield this.getResolver(e)
                        } catch (e) {
                            if (e.code !== x.Logger.errors.CALL_EXCEPTION) throw e;
                            return null
                        }
                    } else if (!(t = yield this.getResolver(e))) return null;
                    let r = yield t.getAvatar();
                    return null == r ? null : r.url
                })
            }
            perform(e, t) {
                return A.throwError(e + " not implemented", x.Logger.errors.NOT_IMPLEMENTED, {
                    operation: e
                })
            }
            _startEvent(e) {
                this.polling = this._events.filter(e => e.pollable()).length > 0
            }
            _stopEvent(e) {
                this.polling = this._events.filter(e => e.pollable()).length > 0
            }
            _addEventListener(e, t, r) {
                let n = new T(S(e), t, r);
                return this._events.push(n), this._startEvent(n), this
            }
            on(e, t) {
                return this._addEventListener(e, t, !1)
            }
            once(e, t) {
                return this._addEventListener(e, t, !0)
            }
            emit(e, ...t) {
                let r = !1,
                    n = [],
                    s = S(e);
                return this._events = this._events.filter(e => e.tag !== s || (setTimeout(() => {
                    e.listener.apply(this, t)
                }, 0), r = !0, !e.once || (n.push(e), !1))), n.forEach(e => {
                    this._stopEvent(e)
                }), r
            }
            listenerCount(e) {
                if (!e) return this._events.length;
                let t = S(e);
                return this._events.filter(e => e.tag === t).length
            }
            listeners(e) {
                if (null == e) return this._events.map(e => e.listener);
                let t = S(e);
                return this._events.filter(e => e.tag === t).map(e => e.listener)
            }
            off(e, t) {
                if (null == t) return this.removeAllListeners(e);
                let r = [],
                    n = !1,
                    s = S(e);
                return this._events = this._events.filter(e => e.tag !== s || e.listener != t || !!n || (n = !0, r.push(e), !1)), r.forEach(e => {
                    this._stopEvent(e)
                }), this
            }
            removeAllListeners(e) {
                let t = [];
                if (null == e) t = this._events, this._events = [];
                else {
                    let r = S(e);
                    this._events = this._events.filter(e => e.tag !== r || (t.push(e), !1))
                }
                return t.forEach(e => {
                    this._stopEvent(e)
                }), this
            }
        }
    }, {
        "@ethersproject/abstract-provider": "imf57",
        "@ethersproject/base64": "dIiCi",
        "@ethersproject/basex": "Pygpe",
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/constants": "cSsuf",
        "@ethersproject/hash": "jLDfB",
        "@ethersproject/networks": "acQbn",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/sha2": "bznen",
        "@ethersproject/strings": "edSy2",
        "@ethersproject/web": "5uH8k",
        bech32: "jLLEl",
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "./formatter": "7RPp2",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    Pygpe: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "BaseX", () => o), s.export(r, "Base32", () => l), s.export(r, "Base58", () => c);
        var a = e("@ethersproject/bytes"),
            i = e("@ethersproject/properties");
        class o {
            constructor(e) {
                (0, i.defineReadOnly)(this, "alphabet", e), (0, i.defineReadOnly)(this, "base", e.length), (0, i.defineReadOnly)(this, "_alphabetMap", {}), (0, i.defineReadOnly)(this, "_leader", e.charAt(0));
                for (let t = 0; t < e.length; t++) this._alphabetMap[e.charAt(t)] = t
            }
            encode(e) {
                let t = (0, a.arrayify)(e);
                if (0 === t.length) return "";
                let r = [0];
                for (let e = 0; e < t.length; ++e) {
                    let n = t[e];
                    for (let e = 0; e < r.length; ++e) n += r[e] << 8, r[e] = n % this.base, n = n / this.base | 0;
                    for (; n > 0;) r.push(n % this.base), n = n / this.base | 0
                }
                let n = "";
                for (let e = 0; 0 === t[e] && e < t.length - 1; ++e) n += this._leader;
                for (let e = r.length - 1; e >= 0; --e) n += this.alphabet[r[e]];
                return n
            }
            decode(e) {
                if ("string" != typeof e) throw TypeError("Expected String");
                let t = [];
                if (0 === e.length) return new Uint8Array(t);
                t.push(0);
                for (let r = 0; r < e.length; r++) {
                    let n = this._alphabetMap[e[r]];
                    if (void 0 === n) throw Error("Non-base" + this.base + " character");
                    let s = n;
                    for (let e = 0; e < t.length; ++e) s += t[e] * this.base, t[e] = 255 & s, s >>= 8;
                    for (; s > 0;) t.push(255 & s), s >>= 8
                }
                for (let r = 0; e[r] === this._leader && r < e.length - 1; ++r) t.push(0);
                return (0, a.arrayify)(new Uint8Array(t.reverse()))
            }
        }
        let l = new o("abcdefghijklmnopqrstuvwxyz234567"),
            c = new o("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")
    }, {
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/properties": "dmdV5",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    bznen: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "computeHmac", () => a.computeHmac), s.export(r, "ripemd160", () => a.ripemd160), s.export(r, "sha256", () => a.sha256), s.export(r, "sha512", () => a.sha512), s.export(r, "SupportedAlgorithm", () => i.SupportedAlgorithm);
        var a = e("./sha2"),
            i = e("./types")
    }, {
        "./sha2": "fjz4b",
        "./types": "cObmA",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    fjz4b: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "ripemd160", () => f), s.export(r, "sha256", () => h), s.export(r, "sha512", () => p), s.export(r, "computeHmac", () => g);
        "use strict";
        var a = e("hash.js"),
            i = s.interopDefault(a),
            o = e("@ethersproject/bytes"),
            l = e("./types"),
            c = e("@ethersproject/logger"),
            d = e("./_version");
        let u = new(0, c.Logger)(d.version);

        function f(e) {
            return "0x" + i.default.ripemd160().update((0, o.arrayify)(e)).digest("hex")
        }

        function h(e) {
            return "0x" + i.default.sha256().update((0, o.arrayify)(e)).digest("hex")
        }

        function p(e) {
            return "0x" + i.default.sha512().update((0, o.arrayify)(e)).digest("hex")
        }

        function g(e, t, r) {
            return l.SupportedAlgorithm[e] || u.throwError("unsupported algorithm " + e, c.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "hmac",
                algorithm: e
            }), "0x" + i.default.hmac(i.default[e], (0, o.arrayify)(t)).update((0, o.arrayify)(r)).digest("hex")
        }
    }, {
        "hash.js": "2Tlxk",
        "@ethersproject/bytes": "19SwW",
        "./types": "cObmA",
        "@ethersproject/logger": "6NWvR",
        "./_version": "3pnD5",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "2Tlxk": [function(e, t, r, n) {
        r.utils = e("38593959f18bd562"), r.common = e("31a457752237e8ad"), r.sha = e("3e37816d2a2fd68d"), r.ripemd = e("ce5a13b5bd10f171"), r.hmac = e("c32fbac97a361580"), r.sha1 = r.sha.sha1, r.sha256 = r.sha.sha256, r.sha224 = r.sha.sha224, r.sha384 = r.sha.sha384, r.sha512 = r.sha.sha512, r.ripemd160 = r.ripemd.ripemd160
    }, {
        "38593959f18bd562": "aKzpJ",
        "31a457752237e8ad": "gjeCy",
        "3e37816d2a2fd68d": "gVBgh",
        ce5a13b5bd10f171: "1GX8J",
        c32fbac97a361580: "3Q7qa"
    }],
    aKzpJ: [function(e, t, r, n) {
        "use strict";
        var s = e("6002b0feade022a4");

        function a(e) {
            return (e >>> 24 | e >>> 8 & 65280 | e << 8 & 0xff0000 | (255 & e) << 24) >>> 0
        }

        function i(e) {
            return 1 === e.length ? "0" + e : e
        }

        function o(e) {
            if (7 === e.length) return "0" + e;
            if (6 === e.length) return "00" + e;
            if (5 === e.length) return "000" + e;
            if (4 === e.length) return "0000" + e;
            if (3 === e.length) return "00000" + e;
            else if (2 === e.length) return "000000" + e;
            else if (1 === e.length) return "0000000" + e;
            else return e
        }
        r.inherits = e("d4826c9d0ff1b1f"), r.toArray = function(e, t) {
            if (Array.isArray(e)) return e.slice();
            if (!e) return [];
            var r = [];
            if ("string" == typeof e)
                if (t) {
                    if ("hex" === t)
                        for ((e = e.replace(/[^a-z0-9]+/ig, "")).length % 2 != 0 && (e = "0" + e), s = 0; s < e.length; s += 2) r.push(parseInt(e[s] + e[s + 1], 16))
                } else
                    for (var n = 0, s = 0; s < e.length; s++) {
                        var a, i, o = e.charCodeAt(s);
                        o < 128 ? r[n++] = o : (o < 2048 ? r[n++] = o >> 6 | 192 : ((a = e, i = s, (64512 & a.charCodeAt(i)) != 55296 || i < 0 || i + 1 >= a.length ? 1 : (64512 & a.charCodeAt(i + 1)) != 56320) ? r[n++] = o >> 12 | 224 : (o = 65536 + ((1023 & o) << 10) + (1023 & e.charCodeAt(++s)), r[n++] = o >> 18 | 240, r[n++] = o >> 12 & 63 | 128), r[n++] = o >> 6 & 63 | 128), r[n++] = 63 & o | 128)
                    } else
                        for (s = 0; s < e.length; s++) r[s] = 0 | e[s];
            return r
        }, r.toHex = function(e) {
            for (var t = "", r = 0; r < e.length; r++) t += i(e[r].toString(16));
            return t
        }, r.htonl = a, r.toHex32 = function(e, t) {
            for (var r = "", n = 0; n < e.length; n++) {
                var s = e[n];
                "little" === t && (s = a(s)), r += o(s.toString(16))
            }
            return r
        }, r.zero2 = i, r.zero8 = o, r.join32 = function(e, t, r, n) {
            var a, i = r - t;
            s(i % 4 == 0);
            for (var o = Array(i / 4), l = 0, c = t; l < o.length; l++, c += 4) a = "big" === n ? e[c] << 24 | e[c + 1] << 16 | e[c + 2] << 8 | e[c + 3] : e[c + 3] << 24 | e[c + 2] << 16 | e[c + 1] << 8 | e[c], o[l] = a >>> 0;
            return o
        }, r.split32 = function(e, t) {
            for (var r = Array(4 * e.length), n = 0, s = 0; n < e.length; n++, s += 4) {
                var a = e[n];
                "big" === t ? (r[s] = a >>> 24, r[s + 1] = a >>> 16 & 255, r[s + 2] = a >>> 8 & 255, r[s + 3] = 255 & a) : (r[s + 3] = a >>> 24, r[s + 2] = a >>> 16 & 255, r[s + 1] = a >>> 8 & 255, r[s] = 255 & a)
            }
            return r
        }, r.rotr32 = function(e, t) {
            return e >>> t | e << 32 - t
        }, r.rotl32 = function(e, t) {
            return e << t | e >>> 32 - t
        }, r.sum32 = function(e, t) {
            return e + t >>> 0
        }, r.sum32_3 = function(e, t, r) {
            return e + t + r >>> 0
        }, r.sum32_4 = function(e, t, r, n) {
            return e + t + r + n >>> 0
        }, r.sum32_5 = function(e, t, r, n, s) {
            return e + t + r + n + s >>> 0
        }, r.sum64 = function(e, t, r, n) {
            var s = e[t],
                a = n + e[t + 1] >>> 0;
            e[t] = +(a < n) + r + s >>> 0, e[t + 1] = a
        }, r.sum64_hi = function(e, t, r, n) {
            return +(t + n >>> 0 < t) + e + r >>> 0
        }, r.sum64_lo = function(e, t, r, n) {
            return t + n >>> 0
        }, r.sum64_4_hi = function(e, t, r, n, s, a, i, o) {
            var l, c = t;
            return e + r + s + i + (l = 0 + +((c = c + n >>> 0) < t) + +((c = c + a >>> 0) < a) + +((c = c + o >>> 0) < o)) >>> 0
        }, r.sum64_4_lo = function(e, t, r, n, s, a, i, o) {
            return t + n + a + o >>> 0
        }, r.sum64_5_hi = function(e, t, r, n, s, a, i, o, l, c) {
            var d, u = t;
            return e + r + s + i + l + (d = 0 + +((u = u + n >>> 0) < t) + +((u = u + a >>> 0) < a) + +((u = u + o >>> 0) < o) + +((u = u + c >>> 0) < c)) >>> 0
        }, r.sum64_5_lo = function(e, t, r, n, s, a, i, o, l, c) {
            return t + n + a + o + c >>> 0
        }, r.rotr64_hi = function(e, t, r) {
            return (t << 32 - r | e >>> r) >>> 0
        }, r.rotr64_lo = function(e, t, r) {
            return (e << 32 - r | t >>> r) >>> 0
        }, r.shr64_hi = function(e, t, r) {
            return e >>> r
        }, r.shr64_lo = function(e, t, r) {
            return (e << 32 - r | t >>> r) >>> 0
        }
    }, {
        "6002b0feade022a4": "h59lk",
        d4826c9d0ff1b1f: "cJ2FP"
    }],
    h59lk: [function(e, t, r, n) {
        function s(e, t) {
            if (!e) throw Error(t || "Assertion failed")
        }
        t.exports = s, s.equal = function(e, t, r) {
            if (e != t) throw Error(r || "Assertion failed: " + e + " != " + t)
        }
    }, {}],
    cJ2FP: [function(e, t, r, n) {
        "function" == typeof Object.create ? t.exports = function(e, t) {
            t && (e.super_ = t, e.prototype = Object.create(t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }))
        } : t.exports = function(e, t) {
            if (t) {
                e.super_ = t;
                var r = function() {};
                r.prototype = t.prototype, e.prototype = new r, e.prototype.constructor = e
            }
        }
    }, {}],
    gjeCy: [function(e, t, r, n) {
        "use strict";
        var s = e("e9291abdfb47ee4f"),
            a = e("ea8841b701712638");

        function i() {
            this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32
        }
        r.BlockHash = i, i.prototype.update = function(e, t) {
            if (e = s.toArray(e, t), this.pending ? this.pending = this.pending.concat(e) : this.pending = e, this.pendingTotal += e.length, this.pending.length >= this._delta8) {
                var r = (e = this.pending).length % this._delta8;
                this.pending = e.slice(e.length - r, e.length), 0 === this.pending.length && (this.pending = null), e = s.join32(e, 0, e.length - r, this.endian);
                for (var n = 0; n < e.length; n += this._delta32) this._update(e, n, n + this._delta32)
            }
            return this
        }, i.prototype.digest = function(e) {
            return this.update(this._pad()), a(null === this.pending), this._digest(e)
        }, i.prototype._pad = function() {
            var e = this.pendingTotal,
                t = this._delta8,
                r = t - (e + this.padLength) % t,
                n = Array(r + this.padLength);
            n[0] = 128;
            for (var s = 1; s < r; s++) n[s] = 0;
            if (e <<= 3, "big" === this.endian) {
                for (var a = 8; a < this.padLength; a++) n[s++] = 0;
                n[s++] = 0, n[s++] = 0, n[s++] = 0, n[s++] = 0, n[s++] = e >>> 24 & 255, n[s++] = e >>> 16 & 255, n[s++] = e >>> 8 & 255, n[s++] = 255 & e
            } else
                for (a = 8, n[s++] = 255 & e, n[s++] = e >>> 8 & 255, n[s++] = e >>> 16 & 255, n[s++] = e >>> 24 & 255, n[s++] = 0, n[s++] = 0, n[s++] = 0, n[s++] = 0; a < this.padLength; a++) n[s++] = 0;
            return n
        }
    }, {
        e9291abdfb47ee4f: "aKzpJ",
        ea8841b701712638: "h59lk"
    }],
    gVBgh: [function(e, t, r, n) {
        "use strict";
        r.sha1 = e("3835379564860fd7"), r.sha224 = e("bb9f72f042233648"), r.sha256 = e("20a3b0fa42e37dfe"), r.sha384 = e("ad4827efa7d953c2"), r.sha512 = e("301292595a944c1d")
    }, {
        "3835379564860fd7": "fmLwd",
        bb9f72f042233648: "d8IVH",
        "20a3b0fa42e37dfe": "27b3b",
        ad4827efa7d953c2: "fJG5D",
        "301292595a944c1d": "gXpfR"
    }],
    fmLwd: [function(e, t, r, n) {
        "use strict";
        var s = e("b75f3c1442bf9100"),
            a = e("a29e68029e4c48f8"),
            i = e("1be62f90a237cba5"),
            o = s.rotl32,
            l = s.sum32,
            c = s.sum32_5,
            d = i.ft_1,
            u = a.BlockHash,
            f = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];

        function h() {
            if (!(this instanceof h)) return new h;
            u.call(this), this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], this.W = Array(80)
        }
        s.inherits(h, u), t.exports = h, h.blockSize = 512, h.outSize = 160, h.hmacStrength = 80, h.padLength = 64, h.prototype._update = function(e, t) {
            for (var r = this.W, n = 0; n < 16; n++) r[n] = e[t + n];
            for (; n < r.length; n++) r[n] = o(r[n - 3] ^ r[n - 8] ^ r[n - 14] ^ r[n - 16], 1);
            var s = this.h[0],
                a = this.h[1],
                i = this.h[2],
                u = this.h[3],
                h = this.h[4];
            for (n = 0; n < r.length; n++) {
                var p = ~~(n / 20),
                    g = c(o(s, 5), d(p, a, i, u), h, r[n], f[p]);
                h = u, u = i, i = o(a, 30), a = s, s = g
            }
            this.h[0] = l(this.h[0], s), this.h[1] = l(this.h[1], a), this.h[2] = l(this.h[2], i), this.h[3] = l(this.h[3], u), this.h[4] = l(this.h[4], h)
        }, h.prototype._digest = function(e) {
            return "hex" === e ? s.toHex32(this.h, "big") : s.split32(this.h, "big")
        }
    }, {
        b75f3c1442bf9100: "aKzpJ",
        a29e68029e4c48f8: "gjeCy",
        "1be62f90a237cba5": "lwZs6"
    }],
    lwZs6: [function(e, t, r, n) {
        "use strict";
        var s = e("f0fb61f828bacd0f").rotr32;

        function a(e, t, r) {
            return e & t ^ e & r ^ t & r
        }
        r.ft_1 = function(e, t, r, n) {
            var s;
            return 0 === e ? (s = t) & r ^ ~s & n : 1 === e || 3 === e ? t ^ r ^ n : 2 === e ? a(t, r, n) : void 0
        }, r.ch32 = function(e, t, r) {
            return e & t ^ ~e & r
        }, r.maj32 = a, r.p32 = function(e, t, r) {
            return e ^ t ^ r
        }, r.s0_256 = function(e) {
            return s(e, 2) ^ s(e, 13) ^ s(e, 22)
        }, r.s1_256 = function(e) {
            return s(e, 6) ^ s(e, 11) ^ s(e, 25)
        }, r.g0_256 = function(e) {
            return s(e, 7) ^ s(e, 18) ^ e >>> 3
        }, r.g1_256 = function(e) {
            return s(e, 17) ^ s(e, 19) ^ e >>> 10
        }
    }, {
        f0fb61f828bacd0f: "aKzpJ"
    }],
    d8IVH: [function(e, t, r, n) {
        "use strict";
        var s = e("fe5acd040463c159"),
            a = e("fa3503eda3738d05");

        function i() {
            if (!(this instanceof i)) return new i;
            a.call(this), this.h = [0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4]
        }
        s.inherits(i, a), t.exports = i, i.blockSize = 512, i.outSize = 224, i.hmacStrength = 192, i.padLength = 64, i.prototype._digest = function(e) {
            return "hex" === e ? s.toHex32(this.h.slice(0, 7), "big") : s.split32(this.h.slice(0, 7), "big")
        }
    }, {
        fe5acd040463c159: "aKzpJ",
        fa3503eda3738d05: "27b3b"
    }],
    "27b3b": [function(e, t, r, n) {
        "use strict";
        var s = e("32ad3e510bd41f2a"),
            a = e("469ad88ad505772a"),
            i = e("fffa7d1ddf1f0b43"),
            o = e("126369f57b5225ed"),
            l = s.sum32,
            c = s.sum32_4,
            d = s.sum32_5,
            u = i.ch32,
            f = i.maj32,
            h = i.s0_256,
            p = i.s1_256,
            g = i.g0_256,
            m = i.g1_256,
            y = a.BlockHash,
            b = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0xfc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x6ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];

        function x() {
            if (!(this instanceof x)) return new x;
            y.call(this), this.h = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19], this.k = b, this.W = Array(64)
        }
        s.inherits(x, y), t.exports = x, x.blockSize = 512, x.outSize = 256, x.hmacStrength = 192, x.padLength = 64, x.prototype._update = function(e, t) {
            for (var r = this.W, n = 0; n < 16; n++) r[n] = e[t + n];
            for (; n < r.length; n++) r[n] = c(m(r[n - 2]), r[n - 7], g(r[n - 15]), r[n - 16]);
            var s = this.h[0],
                a = this.h[1],
                i = this.h[2],
                y = this.h[3],
                b = this.h[4],
                x = this.h[5],
                v = this.h[6],
                w = this.h[7];
            for (o(this.k.length === r.length), n = 0; n < r.length; n++) {
                var E = d(w, p(b), u(b, x, v), this.k[n], r[n]),
                    A = l(h(s), f(s, a, i));
                w = v, v = x, x = b, b = l(y, E), y = i, i = a, a = s, s = l(E, A)
            }
            this.h[0] = l(this.h[0], s), this.h[1] = l(this.h[1], a), this.h[2] = l(this.h[2], i), this.h[3] = l(this.h[3], y), this.h[4] = l(this.h[4], b), this.h[5] = l(this.h[5], x), this.h[6] = l(this.h[6], v), this.h[7] = l(this.h[7], w)
        }, x.prototype._digest = function(e) {
            return "hex" === e ? s.toHex32(this.h, "big") : s.split32(this.h, "big")
        }
    }, {
        "32ad3e510bd41f2a": "aKzpJ",
        "469ad88ad505772a": "gjeCy",
        fffa7d1ddf1f0b43: "lwZs6",
        "126369f57b5225ed": "h59lk"
    }],
    fJG5D: [function(e, t, r, n) {
        "use strict";
        var s = e("a696ee34c45713da"),
            a = e("fff95253fdaa49ea");

        function i() {
            if (!(this instanceof i)) return new i;
            a.call(this), this.h = [0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939, 0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4]
        }
        s.inherits(i, a), t.exports = i, i.blockSize = 1024, i.outSize = 384, i.hmacStrength = 192, i.padLength = 128, i.prototype._digest = function(e) {
            return "hex" === e ? s.toHex32(this.h.slice(0, 12), "big") : s.split32(this.h.slice(0, 12), "big")
        }
    }, {
        a696ee34c45713da: "aKzpJ",
        fff95253fdaa49ea: "gXpfR"
    }],
    gXpfR: [function(e, t, r, n) {
        "use strict";
        var s = e("7753b1fa702fbb54"),
            a = e("81b6970d75627ce1"),
            i = e("f660976cede694e2"),
            o = s.rotr64_hi,
            l = s.rotr64_lo,
            c = s.shr64_hi,
            d = s.shr64_lo,
            u = s.sum64,
            f = s.sum64_hi,
            h = s.sum64_lo,
            p = s.sum64_4_hi,
            g = s.sum64_4_lo,
            m = s.sum64_5_hi,
            y = s.sum64_5_lo,
            b = a.BlockHash,
            x = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0xfc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x6ca6351, 0xe003826f, 0x14292967, 0xa0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x6f067aa, 0x72176fba, 0xa637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];

        function v() {
            if (!(this instanceof v)) return new v;
            b.call(this), this.h = [0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1, 0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179], this.k = x, this.W = Array(160)
        }
        s.inherits(v, b), t.exports = v, v.blockSize = 1024, v.outSize = 512, v.hmacStrength = 192, v.padLength = 128, v.prototype._prepareBlock = function(e, t) {
            for (var r = this.W, n = 0; n < 32; n++) r[n] = e[t + n];
            for (; n < r.length; n += 2) {
                var s = function(e, t) {
                        var r = o(e, t, 19) ^ o(t, e, 29) ^ c(e, t, 6);
                        return r < 0 && (r += 0x100000000), r
                    }(r[n - 4], r[n - 3]),
                    a = function(e, t) {
                        var r = l(e, t, 19) ^ l(t, e, 29) ^ d(e, t, 6);
                        return r < 0 && (r += 0x100000000), r
                    }(r[n - 4], r[n - 3]),
                    i = r[n - 14],
                    u = r[n - 13],
                    f = function(e, t) {
                        var r = o(e, t, 1) ^ o(e, t, 8) ^ c(e, t, 7);
                        return r < 0 && (r += 0x100000000), r
                    }(r[n - 30], r[n - 29]),
                    h = function(e, t) {
                        var r = l(e, t, 1) ^ l(e, t, 8) ^ d(e, t, 7);
                        return r < 0 && (r += 0x100000000), r
                    }(r[n - 30], r[n - 29]),
                    m = r[n - 32],
                    y = r[n - 31];
                r[n] = p(s, a, i, u, f, h, m, y), r[n + 1] = g(s, a, i, u, f, h, m, y)
            }
        }, v.prototype._update = function(e, t) {
            this._prepareBlock(e, t);
            var r = this.W,
                n = this.h[0],
                s = this.h[1],
                a = this.h[2],
                c = this.h[3],
                d = this.h[4],
                p = this.h[5],
                g = this.h[6],
                b = this.h[7],
                x = this.h[8],
                v = this.h[9],
                w = this.h[10],
                E = this.h[11],
                A = this.h[12],
                j = this.h[13],
                I = this.h[14],
                S = this.h[15];
            i(this.k.length === r.length);
            for (var R = 0; R < r.length; R += 2) {
                var k = I,
                    _ = S,
                    T = function(e, t) {
                        var r = o(e, t, 14) ^ o(e, t, 18) ^ o(t, e, 9);
                        return r < 0 && (r += 0x100000000), r
                    }(x, v),
                    C = function(e, t) {
                        var r = l(e, t, 14) ^ l(e, t, 18) ^ l(t, e, 9);
                        return r < 0 && (r += 0x100000000), r
                    }(x, v),
                    P = function(e, t, r, n, s) {
                        var a = e & r ^ ~e & s;
                        return a < 0 && (a += 0x100000000), a
                    }(x, 0, w, 0, A, j),
                    O = function(e, t, r, n, s, a) {
                        var i = t & n ^ ~t & a;
                        return i < 0 && (i += 0x100000000), i
                    }(0, v, 0, E, 0, j),
                    N = this.k[R],
                    M = this.k[R + 1],
                    D = r[R],
                    B = r[R + 1],
                    U = m(k, _, T, C, P, O, N, M, D, B),
                    L = y(k, _, T, C, P, O, N, M, D, B);
                k = function(e, t) {
                    var r = o(e, t, 28) ^ o(t, e, 2) ^ o(t, e, 7);
                    return r < 0 && (r += 0x100000000), r
                }(n, s), _ = function(e, t) {
                    var r = l(e, t, 28) ^ l(t, e, 2) ^ l(t, e, 7);
                    return r < 0 && (r += 0x100000000), r
                }(n, s);
                var F = f(k, _, T = function(e, t, r, n, s) {
                        var a = e & r ^ e & s ^ r & s;
                        return a < 0 && (a += 0x100000000), a
                    }(n, 0, a, 0, d, p), C = function(e, t, r, n, s, a) {
                        var i = t & n ^ t & a ^ n & a;
                        return i < 0 && (i += 0x100000000), i
                    }(0, s, 0, c, 0, p)),
                    J = h(k, _, T, C);
                I = A, S = j, A = w, j = E, w = x, E = v, x = f(g, b, U, L), v = h(b, b, U, L), g = d, b = p, d = a, p = c, a = n, c = s, n = f(U, L, F, J), s = h(U, L, F, J)
            }
            u(this.h, 0, n, s), u(this.h, 2, a, c), u(this.h, 4, d, p), u(this.h, 6, g, b), u(this.h, 8, x, v), u(this.h, 10, w, E), u(this.h, 12, A, j), u(this.h, 14, I, S)
        }, v.prototype._digest = function(e) {
            return "hex" === e ? s.toHex32(this.h, "big") : s.split32(this.h, "big")
        }
    }, {
        "7753b1fa702fbb54": "aKzpJ",
        "81b6970d75627ce1": "gjeCy",
        f660976cede694e2: "h59lk"
    }],
    "1GX8J": [function(e, t, r, n) {
        "use strict";
        var s = e("36495272d446418f"),
            a = e("ad8cf0490e28e8d7"),
            i = s.rotl32,
            o = s.sum32,
            l = s.sum32_3,
            c = s.sum32_4,
            d = a.BlockHash;

        function u() {
            if (!(this instanceof u)) return new u;
            d.call(this), this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], this.endian = "little"
        }

        function f(e, t, r, n) {
            return e <= 15 ? t ^ r ^ n : e <= 31 ? t & r | ~t & n : e <= 47 ? (t | ~r) ^ n : e <= 63 ? t & n | r & ~n : t ^ (r | ~n)
        }
        s.inherits(u, d), r.ripemd160 = u, u.blockSize = 512, u.outSize = 160, u.hmacStrength = 192, u.padLength = 64, u.prototype._update = function(e, t) {
            for (var r = this.h[0], n = this.h[1], s = this.h[2], a = this.h[3], d = this.h[4], u = r, y = n, b = s, x = a, v = d, w = 0; w < 80; w++) {
                var E, A, j = o(i(c(r, f(w, n, s, a), e[h[w] + t], (E = w) <= 15 ? 0 : E <= 31 ? 0x5a827999 : E <= 47 ? 0x6ed9eba1 : E <= 63 ? 0x8f1bbcdc : 0xa953fd4e), g[w]), d);
                r = d, d = a, a = i(s, 10), s = n, n = j, j = o(i(c(u, f(79 - w, y, b, x), e[p[w] + t], (A = w) <= 15 ? 0x50a28be6 : A <= 31 ? 0x5c4dd124 : A <= 47 ? 0x6d703ef3 : 0x7a6d76e9 * !!(A <= 63)), m[w]), v), u = v, v = x, x = i(b, 10), b = y, y = j
            }
            j = l(this.h[1], s, x), this.h[1] = l(this.h[2], a, v), this.h[2] = l(this.h[3], d, u), this.h[3] = l(this.h[4], r, y), this.h[4] = l(this.h[0], n, b), this.h[0] = j
        }, u.prototype._digest = function(e) {
            return "hex" === e ? s.toHex32(this.h, "little") : s.split32(this.h, "little")
        };
        var h = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13],
            p = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11],
            g = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6],
            m = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]
    }, {
        "36495272d446418f": "aKzpJ",
        ad8cf0490e28e8d7: "gjeCy"
    }],
    "3Q7qa": [function(e, t, r, n) {
        "use strict";
        var s = e("596c08b6835a6e2d"),
            a = e("be527907d4f06808");

        function i(e, t, r) {
            if (!(this instanceof i)) return new i(e, t, r);
            this.Hash = e, this.blockSize = e.blockSize / 8, this.outSize = e.outSize / 8, this.inner = null, this.outer = null, this._init(s.toArray(t, r))
        }
        t.exports = i, i.prototype._init = function(e) {
            e.length > this.blockSize && (e = new this.Hash().update(e).digest()), a(e.length <= this.blockSize);
            for (var t = e.length; t < this.blockSize; t++) e.push(0);
            for (t = 0; t < e.length; t++) e[t] ^= 54;
            for (t = 0, this.inner = new this.Hash().update(e); t < e.length; t++) e[t] ^= 106;
            this.outer = new this.Hash().update(e)
        }, i.prototype.update = function(e, t) {
            return this.inner.update(e, t), this
        }, i.prototype.digest = function(e) {
            return this.outer.update(this.inner.digest()), this.outer.digest(e)
        }
    }, {
        "596c08b6835a6e2d": "aKzpJ",
        be527907d4f06808: "h59lk"
    }],
    cObmA: [function(e, t, r, n) {
        var s, a, i = e("@parcel/transformer-js/src/esmodule-helpers.js");
        i.defineInteropFlag(r), i.export(r, "SupportedAlgorithm", () => a), (s = a || (a = {})).sha256 = "sha256", s.sha512 = "sha512"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "3pnD5": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "sha2/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "5uH8k": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "_fetchData", () => g), s.export(r, "fetchJson", () => m), s.export(r, "poll", () => y);
        "use strict";
        var a = e("@ethersproject/base64"),
            i = e("@ethersproject/bytes"),
            o = e("@ethersproject/properties"),
            l = e("@ethersproject/strings"),
            c = e("@ethersproject/logger"),
            d = e("./_version"),
            u = e("./geturl");
        let f = new(0, c.Logger)(d.version);

        function h(e) {
            return new Promise(t => {
                setTimeout(t, e)
            })
        }

        function p(e, t) {
            if (null == e) return null;
            if ("string" == typeof e) return e;
            if ((0, i.isBytesLike)(e)) {
                if (t && ("text" === t.split("/")[0] || "application/json" === t.split(";")[0].trim())) try {
                    return (0, l.toUtf8String)(e)
                } catch (e) {}
                return (0, i.hexlify)(e)
            }
            return e
        }

        function g(e, t, r) {
            let n, s = "object" == typeof e && null != e.throttleLimit ? e.throttleLimit : 12;
            f.assertArgument(s > 0 && s % 1 == 0, "invalid connection throttle limit", "connection.throttleLimit", s);
            let i = "object" == typeof e ? e.throttleCallback : null,
                d = "object" == typeof e && "number" == typeof e.throttleSlotInterval ? e.throttleSlotInterval : 100;
            f.assertArgument(d > 0 && d % 1 == 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", d);
            let g = "object" == typeof e && !!e.errorPassThrough,
                m = {},
                y = null,
                b = {
                    method: "GET"
                },
                x = !1,
                v = 12e4;
            if ("string" == typeof e) y = e;
            else if ("object" == typeof e) {
                if ((null == e || null == e.url) && f.throwArgumentError("missing URL", "connection.url", e), y = e.url, "number" == typeof e.timeout && e.timeout > 0 && (v = e.timeout), e.headers)
                    for (let t in e.headers) m[t.toLowerCase()] = {
                        key: t,
                        value: String(e.headers[t])
                    }, ["if-none-match", "if-modified-since"].indexOf(t.toLowerCase()) >= 0 && (x = !0);
                if (b.allowGzip = !!e.allowGzip, null != e.user && null != e.password) {
                    "https:" !== y.substring(0, 6) && !0 !== e.allowInsecureAuthentication && f.throwError("basic authentication requires a secure https url", c.Logger.errors.INVALID_ARGUMENT, {
                        argument: "url",
                        url: y,
                        user: e.user,
                        password: "[REDACTED]"
                    });
                    let t = e.user + ":" + e.password;
                    m.authorization = {
                        key: "Authorization",
                        value: "Basic " + (0, a.encode)((0, l.toUtf8Bytes)(t))
                    }
                }
                null != e.skipFetchSetup && (b.skipFetchSetup = !!e.skipFetchSetup), null != e.fetchOptions && (b.fetchOptions = (0, o.shallowCopy)(e.fetchOptions))
            }
            let w = RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i"),
                E = y ? y.match(w) : null;
            if (E) try {
                var A;
                let e = {
                        statusCode: 200,
                        statusMessage: "OK",
                        headers: {
                            "content-type": E[1] || "text/plain"
                        },
                        body: E[2] ? (0, a.decode)(E[3]) : (A = E[3], (0, l.toUtf8Bytes)(A.replace(/%([0-9a-f][0-9a-f])/gi, (e, t) => String.fromCharCode(parseInt(t, 16)))))
                    },
                    t = e.body;
                return r && (t = r(e.body, e)), Promise.resolve(t)
            } catch (e) {
                f.throwError("processing response error", c.Logger.errors.SERVER_ERROR, {
                    body: p(E[1], E[2]),
                    error: e,
                    requestBody: null,
                    requestMethod: "GET",
                    url: y
                })
            }
            t && (b.method = "POST", b.body = t, null == m["content-type"] && (m["content-type"] = {
                key: "Content-Type",
                value: "application/octet-stream"
            }), null == m["content-length"] && (m["content-length"] = {
                key: "Content-Length",
                value: String(t.length)
            }));
            let j = {};
            Object.keys(m).forEach(e => {
                let t = m[e];
                j[t.key] = t.value
            }), b.headers = j;
            let I = (n = null, {
                    promise: new Promise(function(e, t) {
                        v && (n = setTimeout(() => {
                            null != n && (n = null, t(f.makeError("timeout", c.Logger.errors.TIMEOUT, {
                                requestBody: p(b.body, j["content-type"]),
                                requestMethod: b.method,
                                timeout: v,
                                url: y
                            })))
                        }, v))
                    }),
                    cancel: function() {
                        null != n && (clearTimeout(n), n = null)
                    }
                }),
                S = function() {
                    var e, t, n, a;
                    return e = this, t = void 0, n = void 0, a = function*() {
                        for (let e = 0; e < s; e++) {
                            let t = null;
                            try {
                                if (t = yield(0, u.getUrl)(y, b), e < s) {
                                    if (301 === t.statusCode || 302 === t.statusCode) {
                                        let e = t.headers.location || "";
                                        if ("GET" === b.method && e.match(/^https:/)) {
                                            y = t.headers.location;
                                            continue
                                        }
                                    } else if (429 === t.statusCode) {
                                        let r = !0;
                                        if (i && (r = yield i(e, y)), r) {
                                            let r = 0,
                                                n = t.headers["retry-after"];
                                            r = "string" == typeof n && n.match(/^[1-9][0-9]*$/) ? 1e3 * parseInt(n) : d * parseInt(String(Math.random() * Math.pow(2, e))), yield h(r);
                                            continue
                                        }
                                    }
                                }
                            } catch (e) {
                                null == (t = e.response) && (I.cancel(), f.throwError("missing response", c.Logger.errors.SERVER_ERROR, {
                                    requestBody: p(b.body, j["content-type"]),
                                    requestMethod: b.method,
                                    serverError: e,
                                    url: y
                                }))
                            }
                            let n = t.body;
                            if (x && 304 === t.statusCode ? n = null : !g && (t.statusCode < 200 || t.statusCode >= 300) && (I.cancel(), f.throwError("bad response", c.Logger.errors.SERVER_ERROR, {
                                    status: t.statusCode,
                                    headers: t.headers,
                                    body: p(n, t.headers ? t.headers["content-type"] : null),
                                    requestBody: p(b.body, j["content-type"]),
                                    requestMethod: b.method,
                                    url: y
                                })), r) try {
                                let e = yield r(n, t);
                                return I.cancel(), e
                            } catch (r) {
                                if (r.throttleRetry && e < s) {
                                    let t = !0;
                                    if (i && (t = yield i(e, y)), t) {
                                        let t = d * parseInt(String(Math.random() * Math.pow(2, e)));
                                        yield h(t);
                                        continue
                                    }
                                }
                                I.cancel(), f.throwError("processing response error", c.Logger.errors.SERVER_ERROR, {
                                    body: p(n, t.headers ? t.headers["content-type"] : null),
                                    error: r,
                                    requestBody: p(b.body, j["content-type"]),
                                    requestMethod: b.method,
                                    url: y
                                })
                            }
                            return I.cancel(), n
                        }
                        return f.throwError("failed response", c.Logger.errors.SERVER_ERROR, {
                            requestBody: p(b.body, j["content-type"]),
                            requestMethod: b.method,
                            url: y
                        })
                    }, new(n || (n = Promise))(function(r, s) {
                        function i(e) {
                            try {
                                l(a.next(e))
                            } catch (e) {
                                s(e)
                            }
                        }

                        function o(e) {
                            try {
                                l(a.throw(e))
                            } catch (e) {
                                s(e)
                            }
                        }

                        function l(e) {
                            var t;
                            e.done ? r(e.value) : ((t = e.value) instanceof n ? t : new n(function(e) {
                                e(t)
                            })).then(i, o)
                        }
                        l((a = a.apply(e, t || [])).next())
                    })
                }();
            return Promise.race([I.promise, S])
        }

        function m(e, t, r) {
            let n = null;
            if (null != t) {
                n = (0, l.toUtf8Bytes)(t);
                let r = "string" == typeof e ? {
                    url: e
                } : (0, o.shallowCopy)(e);
                r.headers ? 0 === Object.keys(r.headers).filter(e => "content-type" === e.toLowerCase()).length && (r.headers = (0, o.shallowCopy)(r.headers), r.headers["content-type"] = "application/json") : r.headers = {
                    "content-type": "application/json"
                }, e = r
            }
            return g(e, n, (e, t) => {
                let n = null;
                if (null != e) try {
                    n = JSON.parse((0, l.toUtf8String)(e))
                } catch (t) {
                    f.throwError("invalid JSON", c.Logger.errors.SERVER_ERROR, {
                        body: e,
                        error: t
                    })
                }
                return r && (n = r(n, t)), n
            })
        }

        function y(e, t) {
            return t || (t = {}), null == (t = (0, o.shallowCopy)(t)).floor && (t.floor = 0), null == t.ceiling && (t.ceiling = 1e4), null == t.interval && (t.interval = 250), new Promise(function(r, n) {
                let s = null,
                    a = !1,
                    i = () => !a && (a = !0, s && clearTimeout(s), !0);
                t.timeout && (s = setTimeout(() => {
                    i() && n(Error("timeout"))
                }, t.timeout));
                let o = t.retryLimit,
                    l = 0;
                ! function s() {
                    return e().then(function(e) {
                        if (void 0 !== e) i() && r(e);
                        else if (t.oncePoll) t.oncePoll.once("poll", s);
                        else if (t.onceBlock) t.onceBlock.once("block", s);
                        else if (!a) {
                            if (++l > o) {
                                i() && n(Error("retry limit reached"));
                                return
                            }
                            let e = t.interval * parseInt(String(Math.random() * Math.pow(2, l)));
                            e < t.floor && (e = t.floor), e > t.ceiling && (e = t.ceiling), setTimeout(s, e)
                        }
                        return null
                    }, function(e) {
                        i() && n(e)
                    })
                }()
            })
        }
    }, {
        "@ethersproject/base64": "dIiCi",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/strings": "edSy2",
        "@ethersproject/logger": "6NWvR",
        "./_version": "bPRgl",
        "./geturl": "aerdi",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    bPRgl: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "web/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    aerdi: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "getUrl", () => i);
        var a = e("@ethersproject/bytes");
        "use strict";

        function i(e, t) {
            var r, n, s, i;
            return r = this, n = void 0, s = void 0, i = function*() {
                null == t && (t = {});
                let r = {
                    method: t.method || "GET",
                    headers: t.headers || {},
                    body: t.body || void 0
                };
                if (!0 !== t.skipFetchSetup && (r.mode = "cors", r.cache = "no-cache", r.credentials = "same-origin", r.redirect = "follow", r.referrer = "client"), null != t.fetchOptions) {
                    let e = t.fetchOptions;
                    e.mode && (r.mode = e.mode), e.cache && (r.cache = e.cache), e.credentials && (r.credentials = e.credentials), e.redirect && (r.redirect = e.redirect), e.referrer && (r.referrer = e.referrer)
                }
                let n = yield fetch(e, r), s = yield n.arrayBuffer(), i = {};
                return n.headers.forEach ? n.headers.forEach((e, t) => {
                    i[t.toLowerCase()] = e
                }) : n.headers.keys().forEach(e => {
                    i[e.toLowerCase()] = n.headers.get(e)
                }), {
                    headers: i,
                    statusCode: n.status,
                    statusMessage: n.statusText,
                    body: (0, a.arrayify)(new Uint8Array(s))
                }
            }, new(s || (s = Promise))(function(e, t) {
                function a(e) {
                    try {
                        l(i.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    try {
                        l(i.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function l(t) {
                    var r;
                    t.done ? e(t.value) : ((r = t.value) instanceof s ? r : new s(function(e) {
                        e(r)
                    })).then(a, o)
                }
                l((i = i.apply(r, n || [])).next())
            })
        }
    }, {
        "@ethersproject/bytes": "19SwW",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    jLLEl: [function(e, t, r, n) {
        "use strict";
        for (var s = "qpzry9x8gf2tvdw0s3jn54khce6mua7l", a = {}, i = 0; i < s.length; i++) {
            var o = s.charAt(i);
            if (void 0 !== a[o]) throw TypeError(o + " is ambiguous");
            a[o] = i
        }

        function l(e) {
            var t = e >> 25;
            return (0x1ffffff & e) << 5 ^ 0x3b6a57b2 & -((0 | t) & 1) ^ 0x26508e6d & -(t >> 1 & 1) ^ 0x1ea119fa & -(t >> 2 & 1) ^ 0x3d4233dd & -(t >> 3 & 1) ^ 0x2a1462b3 & -(t >> 4 & 1)
        }

        function c(e) {
            for (var t = 1, r = 0; r < e.length; ++r) {
                var n = e.charCodeAt(r);
                if (n < 33 || n > 126) return "Invalid prefix (" + e + ")";
                t = l(t) ^ n >> 5
            }
            for (r = 0, t = l(t); r < e.length; ++r) {
                var s = e.charCodeAt(r);
                t = l(t) ^ 31 & s
            }
            return t
        }

        function d(e, t) {
            if (t = t || 90, e.length < 8) return e + " too short";
            if (e.length > t) return "Exceeds length limit";
            var r = e.toLowerCase(),
                n = e.toUpperCase();
            if (e !== r && e !== n) return "Mixed-case string " + e;
            var s = (e = r).lastIndexOf("1");
            if (-1 === s) return "No separator character for " + e;
            if (0 === s) return "Missing prefix for " + e;
            var i = e.slice(0, s),
                o = e.slice(s + 1);
            if (o.length < 6) return "Data too short";
            var d = c(i);
            if ("string" == typeof d) return d;
            for (var u = [], f = 0; f < o.length; ++f) {
                var h = o.charAt(f),
                    p = a[h];
                if (void 0 === p) return "Unknown character " + h;
                d = l(d) ^ p, f + 6 >= o.length || u.push(p)
            }
            return 1 !== d ? "Invalid checksum for " + e : {
                prefix: i,
                words: u
            }
        }

        function u(e, t, r, n) {
            for (var s = 0, a = 0, i = (1 << r) - 1, o = [], l = 0; l < e.length; ++l)
                for (s = s << t | e[l], a += t; a >= r;) o.push(s >> (a -= r) & i);
            if (n) a > 0 && o.push(s << r - a & i);
            else {
                if (a >= t) return "Excess padding";
                if (s << r - a & i) return "Non-zero padding"
            }
            return o
        }
        t.exports = {
            decodeUnsafe: function() {
                var e = d.apply(null, arguments);
                if ("object" == typeof e) return e
            },
            decode: function(e) {
                var t = d.apply(null, arguments);
                if ("object" == typeof t) return t;
                throw Error(t)
            },
            encode: function(e, t, r) {
                if (r = r || 90, e.length + 7 + t.length > r) throw TypeError("Exceeds length limit");
                var n = c(e = e.toLowerCase());
                if ("string" == typeof n) throw Error(n);
                for (var a = e + "1", i = 0; i < t.length; ++i) {
                    var o = t[i];
                    if (o >> 5 != 0) throw Error("Non 5-bit word");
                    n = l(n) ^ o, a += s.charAt(o)
                }
                for (i = 0; i < 6; ++i) n = l(n);
                for (n ^= 1, i = 0; i < 6; ++i) {
                    var d = n >> (5 - i) * 5 & 31;
                    a += s.charAt(d)
                }
                return a
            },
            toWordsUnsafe: function(e) {
                var t = u(e, 8, 5, !0);
                if (Array.isArray(t)) return t
            },
            toWords: function(e) {
                var t = u(e, 8, 5, !0);
                if (Array.isArray(t)) return t;
                throw Error(t)
            },
            fromWordsUnsafe: function(e) {
                var t = u(e, 5, 8, !1);
                if (Array.isArray(t)) return t
            },
            fromWords: function(e) {
                var t = u(e, 5, 8, !1);
                if (Array.isArray(t)) return t;
                throw Error(t)
            }
        }
    }, {}],
    "1LO7N": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "providers/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "7RPp2": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "Formatter", () => p), s.export(r, "isCommunityResourcable", () => g), s.export(r, "isCommunityResource", () => m), s.export(r, "showThrottleMessage", () => b);
        "use strict";
        var a = e("@ethersproject/address"),
            i = e("@ethersproject/bignumber"),
            o = e("@ethersproject/bytes"),
            l = e("@ethersproject/constants"),
            c = e("@ethersproject/properties"),
            d = e("@ethersproject/transactions"),
            u = e("@ethersproject/logger"),
            f = e("./_version");
        let h = new(0, u.Logger)(f.version);
        class p {
            constructor() {
                this.formats = this.getDefaultFormats()
            }
            getDefaultFormats() {
                let e = {},
                    t = this.address.bind(this),
                    r = this.bigNumber.bind(this),
                    n = this.blockTag.bind(this),
                    s = this.data.bind(this),
                    a = this.hash.bind(this),
                    i = this.hex.bind(this),
                    o = this.number.bind(this),
                    l = this.type.bind(this);
                return e.transaction = {
                    hash: a,
                    type: l,
                    accessList: p.allowNull(this.accessList.bind(this), null),
                    blockHash: p.allowNull(a, null),
                    blockNumber: p.allowNull(o, null),
                    transactionIndex: p.allowNull(o, null),
                    confirmations: p.allowNull(o, null),
                    from: t,
                    gasPrice: p.allowNull(r),
                    maxPriorityFeePerGas: p.allowNull(r),
                    maxFeePerGas: p.allowNull(r),
                    gasLimit: r,
                    to: p.allowNull(t, null),
                    value: r,
                    nonce: o,
                    data: s,
                    r: p.allowNull(this.uint256),
                    s: p.allowNull(this.uint256),
                    v: p.allowNull(o),
                    creates: p.allowNull(t, null),
                    raw: p.allowNull(s)
                }, e.transactionRequest = {
                    from: p.allowNull(t),
                    nonce: p.allowNull(o),
                    gasLimit: p.allowNull(r),
                    gasPrice: p.allowNull(r),
                    maxPriorityFeePerGas: p.allowNull(r),
                    maxFeePerGas: p.allowNull(r),
                    to: p.allowNull(t),
                    value: p.allowNull(r),
                    data: p.allowNull(e => this.data(e, !0)),
                    type: p.allowNull(o),
                    accessList: p.allowNull(this.accessList.bind(this), null)
                }, e.receiptLog = {
                    transactionIndex: o,
                    blockNumber: o,
                    transactionHash: a,
                    address: t,
                    topics: p.arrayOf(a),
                    data: s,
                    logIndex: o,
                    blockHash: a
                }, e.receipt = {
                    to: p.allowNull(this.address, null),
                    from: p.allowNull(this.address, null),
                    contractAddress: p.allowNull(t, null),
                    transactionIndex: o,
                    root: p.allowNull(i),
                    gasUsed: r,
                    logsBloom: p.allowNull(s),
                    blockHash: a,
                    transactionHash: a,
                    logs: p.arrayOf(this.receiptLog.bind(this)),
                    blockNumber: o,
                    confirmations: p.allowNull(o, null),
                    cumulativeGasUsed: r,
                    effectiveGasPrice: p.allowNull(r),
                    status: p.allowNull(o),
                    type: l
                }, e.block = {
                    hash: p.allowNull(a),
                    parentHash: a,
                    number: o,
                    timestamp: o,
                    nonce: p.allowNull(i),
                    difficulty: this.difficulty.bind(this),
                    gasLimit: r,
                    gasUsed: r,
                    miner: p.allowNull(t),
                    extraData: s,
                    transactions: p.allowNull(p.arrayOf(a)),
                    baseFeePerGas: p.allowNull(r)
                }, e.blockWithTransactions = (0, c.shallowCopy)(e.block), e.blockWithTransactions.transactions = p.allowNull(p.arrayOf(this.transactionResponse.bind(this))), e.filter = {
                    fromBlock: p.allowNull(n, void 0),
                    toBlock: p.allowNull(n, void 0),
                    blockHash: p.allowNull(a, void 0),
                    address: p.allowNull(t, void 0),
                    topics: p.allowNull(this.topics.bind(this), void 0)
                }, e.filterLog = {
                    blockNumber: p.allowNull(o),
                    blockHash: p.allowNull(a),
                    transactionIndex: o,
                    removed: p.allowNull(this.boolean.bind(this)),
                    address: t,
                    data: p.allowFalsish(s, "0x"),
                    topics: p.arrayOf(a),
                    transactionHash: a,
                    logIndex: o
                }, e
            }
            accessList(e) {
                return (0, d.accessListify)(e || [])
            }
            number(e) {
                return "0x" === e ? 0 : i.BigNumber.from(e).toNumber()
            }
            type(e) {
                return "0x" === e || null == e ? 0 : i.BigNumber.from(e).toNumber()
            }
            bigNumber(e) {
                return i.BigNumber.from(e)
            }
            boolean(e) {
                if ("boolean" == typeof e) return e;
                if ("string" == typeof e) {
                    if ("true" === (e = e.toLowerCase())) return !0;
                    if ("false" === e) return !1
                }
                throw Error("invalid boolean - " + e)
            }
            hex(e, t) {
                return "string" == typeof e && (t || "0x" === e.substring(0, 2) || (e = "0x" + e), (0, o.isHexString)(e)) ? e.toLowerCase() : h.throwArgumentError("invalid hash", "value", e)
            }
            data(e, t) {
                let r = this.hex(e, t);
                if (r.length % 2 != 0) throw Error("invalid data; odd-length - " + e);
                return r
            }
            address(e) {
                return (0, a.getAddress)(e)
            }
            callAddress(e) {
                if (!(0, o.isHexString)(e, 32)) return null;
                let t = (0, a.getAddress)((0, o.hexDataSlice)(e, 12));
                return t === l.AddressZero ? null : t
            }
            contractAddress(e) {
                return (0, a.getContractAddress)(e)
            }
            blockTag(e) {
                if (null == e) return "latest";
                if ("earliest" === e) return "0x0";
                switch (e) {
                    case "earliest":
                        return "0x0";
                    case "latest":
                    case "pending":
                    case "safe":
                    case "finalized":
                        return e
                }
                if ("number" == typeof e || (0, o.isHexString)(e)) return (0, o.hexValue)(e);
                throw Error("invalid blockTag")
            }
            hash(e, t) {
                let r = this.hex(e, t);
                return 32 !== (0, o.hexDataLength)(r) ? h.throwArgumentError("invalid hash", "value", e) : r
            }
            difficulty(e) {
                if (null == e) return null;
                let t = i.BigNumber.from(e);
                try {
                    return t.toNumber()
                } catch (e) {}
                return null
            }
            uint256(e) {
                if (!(0, o.isHexString)(e)) throw Error("invalid uint256");
                return (0, o.hexZeroPad)(e, 32)
            }
            _block(e, t) {
                null != e.author && null == e.miner && (e.miner = e.author);
                let r = null != e._difficulty ? e._difficulty : e.difficulty,
                    n = p.check(t, e);
                return n._difficulty = null == r ? null : i.BigNumber.from(r), n
            }
            block(e) {
                return this._block(e, this.formats.block)
            }
            blockWithTransactions(e) {
                return this._block(e, this.formats.blockWithTransactions)
            }
            transactionRequest(e) {
                return p.check(this.formats.transactionRequest, e)
            }
            transactionResponse(e) {
                null != e.gas && null == e.gasLimit && (e.gasLimit = e.gas), e.to && i.BigNumber.from(e.to).isZero() && (e.to = "0x0000000000000000000000000000000000000000"), null != e.input && null == e.data && (e.data = e.input), null == e.to && null == e.creates && (e.creates = this.contractAddress(e)), (1 === e.type || 2 === e.type) && null == e.accessList && (e.accessList = []);
                let t = p.check(this.formats.transaction, e);
                if (null != e.chainId) {
                    let r = e.chainId;
                    (0, o.isHexString)(r) && (r = i.BigNumber.from(r).toNumber()), t.chainId = r
                } else {
                    let r = e.networkId;
                    null == r && null == t.v && (r = e.chainId), (0, o.isHexString)(r) && (r = i.BigNumber.from(r).toNumber()), "number" != typeof r && null != t.v && ((r = (t.v - 35) / 2) < 0 && (r = 0), r = parseInt(r)), "number" != typeof r && (r = 0), t.chainId = r
                }
                return t.blockHash && "x" === t.blockHash.replace(/0/g, "") && (t.blockHash = null), t
            }
            transaction(e) {
                return (0, d.parse)(e)
            }
            receiptLog(e) {
                return p.check(this.formats.receiptLog, e)
            }
            receipt(e) {
                let t = p.check(this.formats.receipt, e);
                if (null != t.root)
                    if (t.root.length <= 4) {
                        let e = i.BigNumber.from(t.root).toNumber();
                        0 === e || 1 === e ? (null != t.status && t.status !== e && h.throwArgumentError("alt-root-status/status mismatch", "value", {
                            root: t.root,
                            status: t.status
                        }), t.status = e, delete t.root) : h.throwArgumentError("invalid alt-root-status", "value.root", t.root)
                    } else 66 !== t.root.length && h.throwArgumentError("invalid root hash", "value.root", t.root);
                return null != t.status && (t.byzantium = !0), t
            }
            topics(e) {
                return Array.isArray(e) ? e.map(e => this.topics(e)) : null != e ? this.hash(e, !0) : null
            }
            filter(e) {
                return p.check(this.formats.filter, e)
            }
            filterLog(e) {
                return p.check(this.formats.filterLog, e)
            }
            static check(e, t) {
                let r = {};
                for (let n in e) try {
                    let s = e[n](t[n]);
                    void 0 !== s && (r[n] = s)
                } catch (e) {
                    throw e.checkKey = n, e.checkValue = t[n], e
                }
                return r
            }
            static allowNull(e, t) {
                return function(r) {
                    return null == r ? t : e(r)
                }
            }
            static allowFalsish(e, t) {
                return function(r) {
                    return r ? e(r) : t
                }
            }
            static arrayOf(e) {
                return function(t) {
                    if (!Array.isArray(t)) throw Error("not an array");
                    let r = [];
                    return t.forEach(function(t) {
                        r.push(e(t))
                    }), r
                }
            }
        }

        function g(e) {
            return e && "function" == typeof e.isCommunityResource
        }

        function m(e) {
            return g(e) && e.isCommunityResource()
        }
        let y = !1;

        function b() {
            y || (y = !0, console.log("========= NOTICE ========="), console.log("Request-Rate Exceeded  (this message will not be repeated)"), console.log(""), console.log("The default API keys for each service are provided as a highly-throttled,"), console.log("community resource for low-traffic projects and early prototyping."), console.log(""), console.log("While your application will continue to function, we highly recommended"), console.log("signing up for your own API keys to improve performance, increase your"), console.log("request rate/limit and enable other perks, such as metrics and advanced APIs."), console.log(""), console.log("For more details: https://docs.ethers.io/api-keys/"), console.log("=========================="))
        }
    }, {
        "@ethersproject/address": "7BZuS",
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/constants": "cSsuf",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/transactions": "ctBdV",
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    ctBdV: [function(e, t, r, n) {
        var s, a, i = e("@parcel/transformer-js/src/esmodule-helpers.js");
        i.defineInteropFlag(r), i.export(r, "TransactionTypes", () => a), i.export(r, "computeAddress", () => E), i.export(r, "recoverAddress", () => A), i.export(r, "accessListify", () => S), i.export(r, "serialize", () => T), i.export(r, "parse", () => P);
        "use strict";
        var o = e("@ethersproject/address"),
            l = e("@ethersproject/bignumber"),
            c = e("@ethersproject/bytes"),
            d = e("@ethersproject/constants"),
            u = e("@ethersproject/keccak256"),
            f = e("@ethersproject/properties"),
            h = e("@ethersproject/rlp"),
            p = e("@ethersproject/signing-key"),
            g = e("@ethersproject/logger"),
            m = e("./_version");
        let y = new(0, g.Logger)(m.version);

        function b(e) {
            return "0x" === e ? null : (0, o.getAddress)(e)
        }

        function x(e) {
            return "0x" === e ? d.Zero : l.BigNumber.from(e)
        }(s = a || (a = {}))[s.legacy = 0] = "legacy", s[s.eip2930 = 1] = "eip2930", s[s.eip1559 = 2] = "eip1559";
        let v = [{
                name: "nonce",
                maxLength: 32,
                numeric: !0
            }, {
                name: "gasPrice",
                maxLength: 32,
                numeric: !0
            }, {
                name: "gasLimit",
                maxLength: 32,
                numeric: !0
            }, {
                name: "to",
                length: 20
            }, {
                name: "value",
                maxLength: 32,
                numeric: !0
            }, {
                name: "data"
            }],
            w = {
                chainId: !0,
                data: !0,
                gasLimit: !0,
                gasPrice: !0,
                nonce: !0,
                to: !0,
                type: !0,
                value: !0
            };

        function E(e) {
            let t = (0, p.computePublicKey)(e);
            return (0, o.getAddress)((0, c.hexDataSlice)((0, u.keccak256)((0, c.hexDataSlice)(t, 1)), 12))
        }

        function A(e, t) {
            return E((0, p.recoverPublicKey)((0, c.arrayify)(e), t))
        }

        function j(e, t) {
            let r = (0, c.stripZeros)(l.BigNumber.from(e).toHexString());
            return r.length > 32 && y.throwArgumentError("invalid length for " + t, "transaction:" + t, e), r
        }

        function I(e, t) {
            return {
                address: (0, o.getAddress)(e),
                storageKeys: (t || []).map((t, r) => (32 !== (0, c.hexDataLength)(t) && y.throwArgumentError("invalid access list storageKey", `accessList[${e}:${r}]`, t), t.toLowerCase()))
            }
        }

        function S(e) {
            if (Array.isArray(e)) return e.map((e, t) => Array.isArray(e) ? (e.length > 2 && y.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${t}]`, e), I(e[0], e[1])) : I(e.address, e.storageKeys));
            let t = Object.keys(e).map(t => {
                let r = e[t].reduce((e, t) => (e[t] = !0, e), {});
                return I(t, Object.keys(r).sort())
            });
            return t.sort((e, t) => e.address.localeCompare(t.address)), t
        }

        function R(e) {
            return S(e).map(e => [e.address, e.storageKeys])
        }

        function k(e, t) {
            if (null != e.gasPrice) {
                let t = l.BigNumber.from(e.gasPrice),
                    r = l.BigNumber.from(e.maxFeePerGas || 0);
                t.eq(r) || y.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
                    gasPrice: t,
                    maxFeePerGas: r
                })
            }
            let r = [j(e.chainId || 0, "chainId"), j(e.nonce || 0, "nonce"), j(e.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), j(e.maxFeePerGas || 0, "maxFeePerGas"), j(e.gasLimit || 0, "gasLimit"), null != e.to ? (0, o.getAddress)(e.to) : "0x", j(e.value || 0, "value"), e.data || "0x", R(e.accessList || [])];
            if (t) {
                let e = (0, c.splitSignature)(t);
                r.push(j(e.recoveryParam, "recoveryParam")), r.push((0, c.stripZeros)(e.r)), r.push((0, c.stripZeros)(e.s))
            }
            return (0, c.hexConcat)(["0x02", h.encode(r)])
        }

        function _(e, t) {
            let r = [j(e.chainId || 0, "chainId"), j(e.nonce || 0, "nonce"), j(e.gasPrice || 0, "gasPrice"), j(e.gasLimit || 0, "gasLimit"), null != e.to ? (0, o.getAddress)(e.to) : "0x", j(e.value || 0, "value"), e.data || "0x", R(e.accessList || [])];
            if (t) {
                let e = (0, c.splitSignature)(t);
                r.push(j(e.recoveryParam, "recoveryParam")), r.push((0, c.stripZeros)(e.r)), r.push((0, c.stripZeros)(e.s))
            }
            return (0, c.hexConcat)(["0x01", h.encode(r)])
        }

        function T(e, t) {
            if (null == e.type || 0 === e.type) {
                null != e.accessList && y.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", e);
                (0, f.checkProperties)(e, w);
                let r = [];
                v.forEach(function(t) {
                    let n = e[t.name] || [],
                        s = {};
                    t.numeric && (s.hexPad = "left"), n = (0, c.arrayify)((0, c.hexlify)(n, s)), t.length && n.length !== t.length && n.length > 0 && y.throwArgumentError("invalid length for " + t.name, "transaction:" + t.name, n), t.maxLength && (n = (0, c.stripZeros)(n)).length > t.maxLength && y.throwArgumentError("invalid length for " + t.name, "transaction:" + t.name, n), r.push((0, c.hexlify)(n))
                });
                let n = 0;
                if (null != e.chainId ? "number" != typeof(n = e.chainId) && y.throwArgumentError("invalid transaction.chainId", "transaction", e) : t && !(0, c.isBytesLike)(t) && t.v > 28 && (n = Math.floor((t.v - 35) / 2)), 0 !== n && (r.push((0, c.hexlify)(n)), r.push("0x"), r.push("0x")), !t) return h.encode(r);
                let s = (0, c.splitSignature)(t),
                    a = 27 + s.recoveryParam;
                return 0 !== n ? (r.pop(), r.pop(), r.pop(), a += 2 * n + 8, s.v > 28 && s.v !== a && y.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", t)) : s.v !== a && y.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", t), r.push((0, c.hexlify)(a)), r.push((0, c.stripZeros)((0, c.arrayify)(s.r))), r.push((0, c.stripZeros)((0, c.arrayify)(s.s))), h.encode(r)
            }
            switch (e.type) {
                case 1:
                    return _(e, t);
                case 2:
                    return k(e, t)
            }
            return y.throwError(`unsupported transaction type: ${e.type}`, g.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "serializeTransaction",
                transactionType: e.type
            })
        }

        function C(e, t, r) {
            try {
                let r = x(t[0]).toNumber();
                if (0 !== r && 1 !== r) throw Error("bad recid");
                e.v = r
            } catch (e) {
                y.throwArgumentError("invalid v for transaction type: 1", "v", t[0])
            }
            e.r = (0, c.hexZeroPad)(t[1], 32), e.s = (0, c.hexZeroPad)(t[2], 32);
            try {
                let t = (0, u.keccak256)(r(e));
                e.from = A(t, {
                    r: e.r,
                    s: e.s,
                    recoveryParam: e.v
                })
            } catch (e) {}
        }

        function P(e) {
            let t = (0, c.arrayify)(e);
            if (t[0] > 127) return function(e) {
                let t = h.decode(e);
                9 !== t.length && 6 !== t.length && y.throwArgumentError("invalid raw transaction", "rawTransaction", e);
                let r = {
                    nonce: x(t[0]).toNumber(),
                    gasPrice: x(t[1]),
                    gasLimit: x(t[2]),
                    to: b(t[3]),
                    value: x(t[4]),
                    data: t[5],
                    chainId: 0
                };
                if (6 === t.length) return r;
                try {
                    r.v = l.BigNumber.from(t[6]).toNumber()
                } catch (e) {
                    return r
                }
                if (r.r = (0, c.hexZeroPad)(t[7], 32), r.s = (0, c.hexZeroPad)(t[8], 32), l.BigNumber.from(r.r).isZero() && l.BigNumber.from(r.s).isZero()) r.chainId = r.v, r.v = 0;
                else {
                    r.chainId = Math.floor((r.v - 35) / 2), r.chainId < 0 && (r.chainId = 0);
                    let n = r.v - 27,
                        s = t.slice(0, 6);
                    0 !== r.chainId && (s.push((0, c.hexlify)(r.chainId)), s.push("0x"), s.push("0x"), n -= 2 * r.chainId + 8);
                    let a = (0, u.keccak256)(h.encode(s));
                    try {
                        r.from = A(a, {
                            r: (0, c.hexlify)(r.r),
                            s: (0, c.hexlify)(r.s),
                            recoveryParam: n
                        })
                    } catch (e) {}
                    r.hash = (0, u.keccak256)(e)
                }
                return r.type = null, r
            }(t);
            switch (t[0]) {
                case 1:
                    let r = h.decode(t.slice(1));
                    8 !== r.length && 11 !== r.length && y.throwArgumentError("invalid component count for transaction type: 1", "payload", (0, c.hexlify)(t));
                    let n = {
                        type: 1,
                        chainId: x(r[0]).toNumber(),
                        nonce: x(r[1]).toNumber(),
                        gasPrice: x(r[2]),
                        gasLimit: x(r[3]),
                        to: b(r[4]),
                        value: x(r[5]),
                        data: r[6],
                        accessList: S(r[7])
                    };
                    return 8 === r.length || (n.hash = (0, u.keccak256)(t), C(n, r.slice(8), _)), n;
                case 2:
                    let s = h.decode(t.slice(1));
                    9 !== s.length && 12 !== s.length && y.throwArgumentError("invalid component count for transaction type: 2", "payload", (0, c.hexlify)(t));
                    let a = x(s[2]),
                        i = x(s[3]),
                        o = {
                            type: 2,
                            chainId: x(s[0]).toNumber(),
                            nonce: x(s[1]).toNumber(),
                            maxPriorityFeePerGas: a,
                            maxFeePerGas: i,
                            gasPrice: null,
                            gasLimit: x(s[4]),
                            to: b(s[5]),
                            value: x(s[6]),
                            data: s[7],
                            accessList: S(s[8])
                        };
                    return 9 === s.length || (o.hash = (0, u.keccak256)(t), C(o, s.slice(9), k)), o
            }
            return y.throwError(`unsupported transaction type: ${t[0]}`, g.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "parseTransaction",
                transactionType: t[0]
            })
        }
    }, {
        "@ethersproject/address": "7BZuS",
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/constants": "cSsuf",
        "@ethersproject/keccak256": "eWtzg",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/rlp": "1wlks",
        "@ethersproject/signing-key": "a8JOx",
        "@ethersproject/logger": "6NWvR",
        "./_version": "iFVyl",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    a8JOx: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "SigningKey", () => h), s.export(r, "recoverPublicKey", () => p), s.export(r, "computePublicKey", () => g);
        "use strict";
        var a = e("./elliptic"),
            i = e("@ethersproject/bytes"),
            o = e("@ethersproject/properties"),
            l = e("@ethersproject/logger"),
            c = e("./_version");
        let d = new(0, l.Logger)(c.version),
            u = null;

        function f() {
            return u || (u = new(0, a.EC)("secp256k1")), u
        }
        class h {
            constructor(e) {
                (0, o.defineReadOnly)(this, "curve", "secp256k1"), (0, o.defineReadOnly)(this, "privateKey", (0, i.hexlify)(e)), 32 !== (0, i.hexDataLength)(this.privateKey) && d.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
                let t = f().keyFromPrivate((0, i.arrayify)(this.privateKey));
                (0, o.defineReadOnly)(this, "publicKey", "0x" + t.getPublic(!1, "hex")), (0, o.defineReadOnly)(this, "compressedPublicKey", "0x" + t.getPublic(!0, "hex")), (0, o.defineReadOnly)(this, "_isSigningKey", !0)
            }
            _addPoint(e) {
                let t = f().keyFromPublic((0, i.arrayify)(this.publicKey)),
                    r = f().keyFromPublic((0, i.arrayify)(e));
                return "0x" + t.pub.add(r.pub).encodeCompressed("hex")
            }
            signDigest(e) {
                let t = f().keyFromPrivate((0, i.arrayify)(this.privateKey)),
                    r = (0, i.arrayify)(e);
                32 !== r.length && d.throwArgumentError("bad digest length", "digest", e);
                let n = t.sign(r, {
                    canonical: !0
                });
                return (0, i.splitSignature)({
                    recoveryParam: n.recoveryParam,
                    r: (0, i.hexZeroPad)("0x" + n.r.toString(16), 32),
                    s: (0, i.hexZeroPad)("0x" + n.s.toString(16), 32)
                })
            }
            computeSharedSecret(e) {
                let t = f().keyFromPrivate((0, i.arrayify)(this.privateKey)),
                    r = f().keyFromPublic((0, i.arrayify)(g(e)));
                return (0, i.hexZeroPad)("0x" + t.derive(r.getPublic()).toString(16), 32)
            }
            static isSigningKey(e) {
                return !!(e && e._isSigningKey)
            }
        }

        function p(e, t) {
            let r = (0, i.splitSignature)(t),
                n = {
                    r: (0, i.arrayify)(r.r),
                    s: (0, i.arrayify)(r.s)
                };
            return "0x" + f().recoverPubKey((0, i.arrayify)(e), n, r.recoveryParam).encode("hex", !1)
        }

        function g(e, t) {
            let r = (0, i.arrayify)(e);
            if (32 === r.length) {
                let e = new h(r);
                return t ? "0x" + f().keyFromPrivate(r).getPublic(!0, "hex") : e.publicKey
            }
            return 33 === r.length ? t ? (0, i.hexlify)(r) : "0x" + f().keyFromPublic(r).getPublic(!1, "hex") : 65 === r.length ? t ? "0x" + f().keyFromPublic(r).getPublic(!0, "hex") : (0, i.hexlify)(r) : d.throwArgumentError("invalid public or private key", "key", "[REDACTED]")
        }
    }, {
        "./elliptic": "aoN5l",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/logger": "6NWvR",
        "./_version": "eg49z",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    aoN5l: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "EC", () => L);
        var a = e("bn.js"),
            i = s.interopDefault(a),
            o = e("hash.js"),
            l = s.interopDefault(o),
            c = arguments[3];

        function d(e, t, r) {
            return e(r = {
                path: t,
                exports: {},
                require: function(e, t) {
                    throw null == t && r.path, Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                }
            }, r.exports), r.exports
        }
        "undefined" != typeof globalThis || ("undefined" != typeof window ? window : void 0 !== c || "undefined" != typeof self && self);
        var u = f;

        function f(e, t) {
            if (!e) throw Error(t || "Assertion failed")
        }
        "use strict";
        f.equal = function(e, t, r) {
            if (e != t) throw Error(r || "Assertion failed: " + e + " != " + t)
        };
        var h = d(function(e, t) {
                "use strict";

                function r(e) {
                    return 1 === e.length ? "0" + e : e
                }

                function n(e) {
                    for (var t = "", n = 0; n < e.length; n++) t += r(e[n].toString(16));
                    return t
                }
                t.toArray = function(e, t) {
                    if (Array.isArray(e)) return e.slice();
                    if (!e) return [];
                    var r = [];
                    if ("string" != typeof e) {
                        for (var n = 0; n < e.length; n++) r[n] = 0 | e[n];
                        return r
                    }
                    if ("hex" === t) {
                        (e = e.replace(/[^a-z0-9]+/ig, "")).length % 2 != 0 && (e = "0" + e);
                        for (var n = 0; n < e.length; n += 2) r.push(parseInt(e[n] + e[n + 1], 16))
                    } else
                        for (var n = 0; n < e.length; n++) {
                            var s = e.charCodeAt(n),
                                a = s >> 8,
                                i = 255 & s;
                            a ? r.push(a, i) : r.push(i)
                        }
                    return r
                }, t.zero2 = r, t.toHex = n, t.encode = function(e, t) {
                    return "hex" === t ? n(e) : e
                }
            }),
            p = d(function(e, t) {
                "use strict";
                t.assert = u, t.toArray = h.toArray, t.zero2 = h.zero2, t.toHex = h.toHex, t.encode = h.encode, t.getNAF = function(e, t, r) {
                    var n = Array(Math.max(e.bitLength(), r) + 1);
                    for (i = 0; i < n.length; i += 1) n[i] = 0;
                    var s = 1 << t + 1,
                        a = e.clone();
                    for (i = 0; i < n.length; i++) {
                        var i, o, l = a.andln(s - 1);
                        a.isOdd() ? (o = l > (s >> 1) - 1 ? (s >> 1) - l : l, a.isubn(o)) : o = 0, n[i] = o, a.iushrn(1)
                    }
                    return n
                }, t.getJSF = function(e, t) {
                    var r = [
                        [],
                        []
                    ];
                    e = e.clone(), t = t.clone();
                    for (var n = 0, s = 0; e.cmpn(-n) > 0 || t.cmpn(-s) > 0;) {
                        var a, i, o, l = e.andln(3) + n & 3,
                            c = t.andln(3) + s & 3;
                        3 === l && (l = -1), 3 === c && (c = -1), i = (1 & l) == 0 ? 0 : (3 == (a = e.andln(7) + n & 7) || 5 === a) && 2 === c ? -l : l, r[0].push(i), o = (1 & c) == 0 ? 0 : (3 == (a = t.andln(7) + s & 7) || 5 === a) && 2 === l ? -c : c, r[1].push(o), 2 * n === i + 1 && (n = 1 - n), 2 * s === o + 1 && (s = 1 - s), e.iushrn(1), t.iushrn(1)
                    }
                    return r
                }, t.cachedProperty = function(e, t, r) {
                    var n = "_" + t;
                    e.prototype[t] = function() {
                        return void 0 !== this[n] ? this[n] : this[n] = r.call(this)
                    }
                }, t.parseBytes = function(e) {
                    return "string" == typeof e ? t.toArray(e, "hex") : e
                }, t.intFromLE = function(e) {
                    return new(0, i.default)(e, "hex", "le")
                }
            }),
            g = p.getNAF,
            m = p.getJSF,
            y = p.assert;

        function b(e, t) {
            this.type = e, this.p = new(0, i.default)(t.p, 16), this.red = t.prime ? i.default.red(t.prime) : i.default.mont(this.p), this.zero = new(0, i.default)(0).toRed(this.red), this.one = new(0, i.default)(1).toRed(this.red), this.two = new(0, i.default)(2).toRed(this.red), this.n = t.n && new(0, i.default)(t.n, 16), this.g = t.g && this.pointFromJSON(t.g, t.gRed), this._wnafT1 = [, , , , ], this._wnafT2 = [, , , , ], this._wnafT3 = [, , , , ], this._wnafT4 = [, , , , ], this._bitLength = this.n ? this.n.bitLength() : 0;
            var r = this.n && this.p.div(this.n);
            !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red))
        }

        function x(e, t) {
            this.curve = e, this.type = t, this.precomputed = null
        }
        "use strict";
        b.prototype.point = function() {
            throw Error("Not implemented")
        }, b.prototype.validate = function() {
            throw Error("Not implemented")
        }, b.prototype._fixedNafMul = function(e, t) {
            y(e.precomputed);
            var r, n, s = e._getDoubles(),
                a = g(t, 1, this._bitLength),
                i = (1 << s.step + 1) - (s.step % 2 == 0 ? 2 : 1);
            i /= 3;
            var o = [];
            for (r = 0; r < a.length; r += s.step) {
                n = 0;
                for (var l = r + s.step - 1; l >= r; l--) n = (n << 1) + a[l];
                o.push(n)
            }
            for (var c = this.jpoint(null, null, null), d = this.jpoint(null, null, null), u = i; u > 0; u--) {
                for (r = 0; r < o.length; r++)(n = o[r]) === u ? d = d.mixedAdd(s.points[r]) : n === -u && (d = d.mixedAdd(s.points[r].neg()));
                c = c.add(d)
            }
            return c.toP()
        }, b.prototype._wnafMul = function(e, t) {
            var r = 4,
                n = e._getNAFPoints(r);
            r = n.wnd;
            for (var s = n.points, a = g(t, r, this._bitLength), i = this.jpoint(null, null, null), o = a.length - 1; o >= 0; o--) {
                for (var l = 0; o >= 0 && 0 === a[o]; o--) l++;
                if (o >= 0 && l++, i = i.dblp(l), o < 0) break;
                var c = a[o];
                y(0 !== c), i = "affine" === e.type ? c > 0 ? i.mixedAdd(s[c - 1 >> 1]) : i.mixedAdd(s[-c - 1 >> 1].neg()) : c > 0 ? i.add(s[c - 1 >> 1]) : i.add(s[-c - 1 >> 1].neg())
            }
            return "affine" === e.type ? i.toP() : i
        }, b.prototype._wnafMulAdd = function(e, t, r, n, s) {
            var a, i, o, l = this._wnafT1,
                c = this._wnafT2,
                d = this._wnafT3,
                u = 0;
            for (a = 0; a < n; a++) {
                var f = (o = t[a])._getNAFPoints(e);
                l[a] = f.wnd, c[a] = f.points
            }
            for (a = n - 1; a >= 1; a -= 2) {
                var h = a - 1,
                    p = a;
                if (1 !== l[h] || 1 !== l[p]) {
                    d[h] = g(r[h], l[h], this._bitLength), d[p] = g(r[p], l[p], this._bitLength), u = Math.max(d[h].length, u), u = Math.max(d[p].length, u);
                    continue
                }
                var y = [t[h], null, null, t[p]];
                0 === t[h].y.cmp(t[p].y) ? (y[1] = t[h].add(t[p]), y[2] = t[h].toJ().mixedAdd(t[p].neg())) : 0 === t[h].y.cmp(t[p].y.redNeg()) ? (y[1] = t[h].toJ().mixedAdd(t[p]), y[2] = t[h].add(t[p].neg())) : (y[1] = t[h].toJ().mixedAdd(t[p]), y[2] = t[h].toJ().mixedAdd(t[p].neg()));
                var b = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                    x = m(r[h], r[p]);
                for (i = 0, u = Math.max(x[0].length, u), d[h] = Array(u), d[p] = Array(u); i < u; i++) {
                    var v = 0 | x[0][i],
                        w = 0 | x[1][i];
                    d[h][i] = b[(v + 1) * 3 + (w + 1)], d[p][i] = 0, c[h] = y
                }
            }
            var E = this.jpoint(null, null, null),
                A = this._wnafT4;
            for (a = u; a >= 0; a--) {
                for (var j = 0; a >= 0;) {
                    var I = !0;
                    for (i = 0; i < n; i++) A[i] = 0 | d[i][a], 0 !== A[i] && (I = !1);
                    if (!I) break;
                    j++, a--
                }
                if (a >= 0 && j++, E = E.dblp(j), a < 0) break;
                for (i = 0; i < n; i++) {
                    var S = A[i];
                    0 !== S && (S > 0 ? o = c[i][S - 1 >> 1] : S < 0 && (o = c[i][-S - 1 >> 1].neg()), E = "affine" === o.type ? E.mixedAdd(o) : E.add(o))
                }
            }
            for (a = 0; a < n; a++) c[a] = null;
            return s ? E : E.toP()
        }, b.BasePoint = x, x.prototype.eq = function() {
            throw Error("Not implemented")
        }, x.prototype.validate = function() {
            return this.curve.validate(this)
        }, b.prototype.decodePoint = function(e, t) {
            e = p.toArray(e, t);
            var r = this.p.byteLength();
            if ((4 === e[0] || 6 === e[0] || 7 === e[0]) && e.length - 1 == 2 * r) return 6 === e[0] ? y(e[e.length - 1] % 2 == 0) : 7 === e[0] && y(e[e.length - 1] % 2 == 1), this.point(e.slice(1, 1 + r), e.slice(1 + r, 1 + 2 * r));
            if ((2 === e[0] || 3 === e[0]) && e.length - 1 === r) return this.pointFromX(e.slice(1, 1 + r), 3 === e[0]);
            throw Error("Unknown point format")
        }, x.prototype.encodeCompressed = function(e) {
            return this.encode(e, !0)
        }, x.prototype._encode = function(e) {
            var t = this.curve.p.byteLength(),
                r = this.getX().toArray("be", t);
            return e ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray("be", t))
        }, x.prototype.encode = function(e, t) {
            return p.encode(this._encode(t), e)
        }, x.prototype.precompute = function(e) {
            if (this.precomputed) return this;
            var t = {
                doubles: null,
                naf: null,
                beta: null
            };
            return t.naf = this._getNAFPoints(8), t.doubles = this._getDoubles(4, e), t.beta = this._getBeta(), this.precomputed = t, this
        }, x.prototype._hasDoubles = function(e) {
            if (!this.precomputed) return !1;
            var t = this.precomputed.doubles;
            return !!t && t.points.length >= Math.ceil((e.bitLength() + 1) / t.step)
        }, x.prototype._getDoubles = function(e, t) {
            if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
            for (var r = [this], n = this, s = 0; s < t; s += e) {
                for (var a = 0; a < e; a++) n = n.dbl();
                r.push(n)
            }
            return {
                step: e,
                points: r
            }
        }, x.prototype._getNAFPoints = function(e) {
            if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
            for (var t = [this], r = (1 << e) - 1, n = 1 === r ? null : this.dbl(), s = 1; s < r; s++) t[s] = t[s - 1].add(n);
            return {
                wnd: e,
                points: t
            }
        }, x.prototype._getBeta = function() {
            return null
        }, x.prototype.dblp = function(e) {
            for (var t = this, r = 0; r < e; r++) t = t.dbl();
            return t
        };
        var v = d(function(e) {
                "function" == typeof Object.create ? e.exports = function(e, t) {
                    t && (e.super_ = t, e.prototype = Object.create(t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }))
                } : e.exports = function(e, t) {
                    if (t) {
                        e.super_ = t;
                        var r = function() {};
                        r.prototype = t.prototype, e.prototype = new r, e.prototype.constructor = e
                    }
                }
            }),
            w = p.assert;

        function E(e) {
            b.call(this, "short", e), this.a = new(0, i.default)(e.a, 16).toRed(this.red), this.b = new(0, i.default)(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(e), this._endoWnafT1 = [, , , , ], this._endoWnafT2 = [, , , , ]
        }

        function A(e, t, r, n) {
            b.BasePoint.call(this, e, "affine"), null === t && null === r ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new(0, i.default)(t, 16), this.y = new(0, i.default)(r, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1)
        }

        function j(e, t, r, n) {
            b.BasePoint.call(this, e, "jacobian"), null === t && null === r && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new(0, i.default)(0)) : (this.x = new(0, i.default)(t, 16), this.y = new(0, i.default)(r, 16), this.z = new(0, i.default)(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one
        }
        "use strict";
        v(E, b), E.prototype._getEndomorphism = function(e) {
            if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                if (e.beta) t = new(0, i.default)(e.beta, 16).toRed(this.red);
                else {
                    var t, r, n, s = this._getEndoRoots(this.p);
                    t = (t = 0 > s[0].cmp(s[1]) ? s[0] : s[1]).toRed(this.red)
                }
                if (e.lambda) r = new(0, i.default)(e.lambda, 16);
                else {
                    var a = this._getEndoRoots(this.n);
                    0 === this.g.mul(a[0]).x.cmp(this.g.x.redMul(t)) ? r = a[0] : (r = a[1], w(0 === this.g.mul(r).x.cmp(this.g.x.redMul(t))))
                }
                return n = e.basis ? e.basis.map(function(e) {
                    return {
                        a: new(0, i.default)(e.a, 16),
                        b: new(0, i.default)(e.b, 16)
                    }
                }) : this._getEndoBasis(r), {
                    beta: t,
                    lambda: r,
                    basis: n
                }
            }
        }, E.prototype._getEndoRoots = function(e) {
            var t = e === this.p ? this.red : i.default.mont(e),
                r = new(0, i.default)(2).toRed(t).redInvm(),
                n = r.redNeg(),
                s = new(0, i.default)(3).toRed(t).redNeg().redSqrt().redMul(r);
            return [n.redAdd(s).fromRed(), n.redSub(s).fromRed()]
        }, E.prototype._getEndoBasis = function(e) {
            for (var t, r, n, s, a, o, l, c, d, u = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), f = e, h = this.n.clone(), p = new(0, i.default)(1), g = new(0, i.default)(0), m = new(0, i.default)(0), y = new(0, i.default)(1), b = 0; 0 !== f.cmpn(0);) {
                var x = h.div(f);
                c = h.sub(x.mul(f)), d = m.sub(x.mul(p));
                var v = y.sub(x.mul(g));
                if (!n && 0 > c.cmp(u)) t = l.neg(), r = p, n = c.neg(), s = d;
                else if (n && 2 == ++b) break;
                l = c, h = f, f = c, m = p, p = d, y = g, g = v
            }
            a = c.neg(), o = d;
            var w = n.sqr().add(s.sqr());
            return a.sqr().add(o.sqr()).cmp(w) >= 0 && (a = t, o = r), n.negative && (n = n.neg(), s = s.neg()), a.negative && (a = a.neg(), o = o.neg()), [{
                a: n,
                b: s
            }, {
                a: a,
                b: o
            }]
        }, E.prototype._endoSplit = function(e) {
            var t = this.endo.basis,
                r = t[0],
                n = t[1],
                s = n.b.mul(e).divRound(this.n),
                a = r.b.neg().mul(e).divRound(this.n),
                i = s.mul(r.a),
                o = a.mul(n.a),
                l = s.mul(r.b),
                c = a.mul(n.b);
            return {
                k1: e.sub(i).sub(o),
                k2: l.add(c).neg()
            }
        }, E.prototype.pointFromX = function(e, t) {
            (e = new(0, i.default)(e, 16)).red || (e = e.toRed(this.red));
            var r = e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),
                n = r.redSqrt();
            if (0 !== n.redSqr().redSub(r).cmp(this.zero)) throw Error("invalid point");
            var s = n.fromRed().isOdd();
            return (t && !s || !t && s) && (n = n.redNeg()), this.point(e, n)
        }, E.prototype.validate = function(e) {
            if (e.inf) return !0;
            var t = e.x,
                r = e.y,
                n = this.a.redMul(t),
                s = t.redSqr().redMul(t).redIAdd(n).redIAdd(this.b);
            return 0 === r.redSqr().redISub(s).cmpn(0)
        }, E.prototype._endoWnafMulAdd = function(e, t, r) {
            for (var n = this._endoWnafT1, s = this._endoWnafT2, a = 0; a < e.length; a++) {
                var i = this._endoSplit(t[a]),
                    o = e[a],
                    l = o._getBeta();
                i.k1.negative && (i.k1.ineg(), o = o.neg(!0)), i.k2.negative && (i.k2.ineg(), l = l.neg(!0)), n[2 * a] = o, n[2 * a + 1] = l, s[2 * a] = i.k1, s[2 * a + 1] = i.k2
            }
            for (var c = this._wnafMulAdd(1, n, s, 2 * a, r), d = 0; d < 2 * a; d++) n[d] = null, s[d] = null;
            return c
        }, v(A, b.BasePoint), E.prototype.point = function(e, t, r) {
            return new A(this, e, t, r)
        }, E.prototype.pointFromJSON = function(e, t) {
            return A.fromJSON(this, e, t)
        }, A.prototype._getBeta = function() {
            if (this.curve.endo) {
                var e = this.precomputed;
                if (e && e.beta) return e.beta;
                var t = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                if (e) {
                    var r = this.curve,
                        n = function(e) {
                            return r.point(e.x.redMul(r.endo.beta), e.y)
                        };
                    e.beta = t, t.precomputed = {
                        beta: null,
                        naf: e.naf && {
                            wnd: e.naf.wnd,
                            points: e.naf.points.map(n)
                        },
                        doubles: e.doubles && {
                            step: e.doubles.step,
                            points: e.doubles.points.map(n)
                        }
                    }
                }
                return t
            }
        }, A.prototype.toJSON = function() {
            return this.precomputed ? [this.x, this.y, this.precomputed && {
                doubles: this.precomputed.doubles && {
                    step: this.precomputed.doubles.step,
                    points: this.precomputed.doubles.points.slice(1)
                },
                naf: this.precomputed.naf && {
                    wnd: this.precomputed.naf.wnd,
                    points: this.precomputed.naf.points.slice(1)
                }
            }] : [this.x, this.y]
        }, A.fromJSON = function(e, t, r) {
            "string" == typeof t && (t = JSON.parse(t));
            var n = e.point(t[0], t[1], r);
            if (!t[2]) return n;

            function s(t) {
                return e.point(t[0], t[1], r)
            }
            var a = t[2];
            return n.precomputed = {
                beta: null,
                doubles: a.doubles && {
                    step: a.doubles.step,
                    points: [n].concat(a.doubles.points.map(s))
                },
                naf: a.naf && {
                    wnd: a.naf.wnd,
                    points: [n].concat(a.naf.points.map(s))
                }
            }, n
        }, A.prototype.inspect = function() {
            return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">"
        }, A.prototype.isInfinity = function() {
            return this.inf
        }, A.prototype.add = function(e) {
            if (this.inf) return e;
            if (e.inf) return this;
            if (this.eq(e)) return this.dbl();
            if (this.neg().eq(e) || 0 === this.x.cmp(e.x)) return this.curve.point(null, null);
            var t = this.y.redSub(e.y);
            0 !== t.cmpn(0) && (t = t.redMul(this.x.redSub(e.x).redInvm()));
            var r = t.redSqr().redISub(this.x).redISub(e.x),
                n = t.redMul(this.x.redSub(r)).redISub(this.y);
            return this.curve.point(r, n)
        }, A.prototype.dbl = function() {
            if (this.inf) return this;
            var e = this.y.redAdd(this.y);
            if (0 === e.cmpn(0)) return this.curve.point(null, null);
            var t = this.curve.a,
                r = this.x.redSqr(),
                n = e.redInvm(),
                s = r.redAdd(r).redIAdd(r).redIAdd(t).redMul(n),
                a = s.redSqr().redISub(this.x.redAdd(this.x)),
                i = s.redMul(this.x.redSub(a)).redISub(this.y);
            return this.curve.point(a, i)
        }, A.prototype.getX = function() {
            return this.x.fromRed()
        }, A.prototype.getY = function() {
            return this.y.fromRed()
        }, A.prototype.mul = function(e) {
            return (e = new(0, i.default)(e, 16), this.isInfinity()) ? this : this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e]) : this.curve._wnafMul(this, e)
        }, A.prototype.mulAdd = function(e, t, r) {
            var n = [this, t],
                s = [e, r];
            return this.curve.endo ? this.curve._endoWnafMulAdd(n, s) : this.curve._wnafMulAdd(1, n, s, 2)
        }, A.prototype.jmulAdd = function(e, t, r) {
            var n = [this, t],
                s = [e, r];
            return this.curve.endo ? this.curve._endoWnafMulAdd(n, s, !0) : this.curve._wnafMulAdd(1, n, s, 2, !0)
        }, A.prototype.eq = function(e) {
            return this === e || this.inf === e.inf && (this.inf || 0 === this.x.cmp(e.x) && 0 === this.y.cmp(e.y))
        }, A.prototype.neg = function(e) {
            if (this.inf) return this;
            var t = this.curve.point(this.x, this.y.redNeg());
            if (e && this.precomputed) {
                var r = this.precomputed,
                    n = function(e) {
                        return e.neg()
                    };
                t.precomputed = {
                    naf: r.naf && {
                        wnd: r.naf.wnd,
                        points: r.naf.points.map(n)
                    },
                    doubles: r.doubles && {
                        step: r.doubles.step,
                        points: r.doubles.points.map(n)
                    }
                }
            }
            return t
        }, A.prototype.toJ = function() {
            return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one)
        }, v(j, b.BasePoint), E.prototype.jpoint = function(e, t, r) {
            return new j(this, e, t, r)
        }, j.prototype.toP = function() {
            if (this.isInfinity()) return this.curve.point(null, null);
            var e = this.z.redInvm(),
                t = e.redSqr(),
                r = this.x.redMul(t),
                n = this.y.redMul(t).redMul(e);
            return this.curve.point(r, n)
        }, j.prototype.neg = function() {
            return this.curve.jpoint(this.x, this.y.redNeg(), this.z)
        }, j.prototype.add = function(e) {
            if (this.isInfinity()) return e;
            if (e.isInfinity()) return this;
            var t = e.z.redSqr(),
                r = this.z.redSqr(),
                n = this.x.redMul(t),
                s = e.x.redMul(r),
                a = this.y.redMul(t.redMul(e.z)),
                i = e.y.redMul(r.redMul(this.z)),
                o = n.redSub(s),
                l = a.redSub(i);
            if (0 === o.cmpn(0))
                if (0 !== l.cmpn(0)) return this.curve.jpoint(null, null, null);
                else return this.dbl();
            var c = o.redSqr(),
                d = c.redMul(o),
                u = n.redMul(c),
                f = l.redSqr().redIAdd(d).redISub(u).redISub(u),
                h = l.redMul(u.redISub(f)).redISub(a.redMul(d)),
                p = this.z.redMul(e.z).redMul(o);
            return this.curve.jpoint(f, h, p)
        }, j.prototype.mixedAdd = function(e) {
            if (this.isInfinity()) return e.toJ();
            if (e.isInfinity()) return this;
            var t = this.z.redSqr(),
                r = this.x,
                n = e.x.redMul(t),
                s = this.y,
                a = e.y.redMul(t).redMul(this.z),
                i = r.redSub(n),
                o = s.redSub(a);
            if (0 === i.cmpn(0))
                if (0 !== o.cmpn(0)) return this.curve.jpoint(null, null, null);
                else return this.dbl();
            var l = i.redSqr(),
                c = l.redMul(i),
                d = r.redMul(l),
                u = o.redSqr().redIAdd(c).redISub(d).redISub(d),
                f = o.redMul(d.redISub(u)).redISub(s.redMul(c)),
                h = this.z.redMul(i);
            return this.curve.jpoint(u, f, h)
        }, j.prototype.dblp = function(e) {
            if (0 === e || this.isInfinity()) return this;
            if (!e) return this.dbl();
            if (this.curve.zeroA || this.curve.threeA) {
                var t, r = this;
                for (t = 0; t < e; t++) r = r.dbl();
                return r
            }
            var n = this.curve.a,
                s = this.curve.tinv,
                a = this.x,
                i = this.y,
                o = this.z,
                l = o.redSqr().redSqr(),
                c = i.redAdd(i);
            for (t = 0; t < e; t++) {
                var d = a.redSqr(),
                    u = c.redSqr(),
                    f = u.redSqr(),
                    h = d.redAdd(d).redIAdd(d).redIAdd(n.redMul(l)),
                    p = a.redMul(u),
                    g = h.redSqr().redISub(p.redAdd(p)),
                    m = p.redISub(g),
                    y = h.redMul(m);
                y = y.redIAdd(y).redISub(f);
                var b = c.redMul(o);
                t + 1 < e && (l = l.redMul(f)), a = g, o = b, c = y
            }
            return this.curve.jpoint(a, c.redMul(s), o)
        }, j.prototype.dbl = function() {
            return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl()
        }, j.prototype._zeroDbl = function() {
            if (this.zOne) {
                var e, t, r, n = this.x.redSqr(),
                    s = this.y.redSqr(),
                    a = s.redSqr(),
                    i = this.x.redAdd(s).redSqr().redISub(n).redISub(a);
                i = i.redIAdd(i);
                var o = n.redAdd(n).redIAdd(n),
                    l = o.redSqr().redISub(i).redISub(i),
                    c = a.redIAdd(a);
                c = (c = c.redIAdd(c)).redIAdd(c), e = l, t = o.redMul(i.redISub(l)).redISub(c), r = this.y.redAdd(this.y)
            } else {
                var d = this.x.redSqr(),
                    u = this.y.redSqr(),
                    f = u.redSqr(),
                    h = this.x.redAdd(u).redSqr().redISub(d).redISub(f);
                h = h.redIAdd(h);
                var p = d.redAdd(d).redIAdd(d),
                    g = p.redSqr(),
                    m = f.redIAdd(f);
                m = (m = m.redIAdd(m)).redIAdd(m), e = g.redISub(h).redISub(h), t = p.redMul(h.redISub(e)).redISub(m), r = (r = this.y.redMul(this.z)).redIAdd(r)
            }
            return this.curve.jpoint(e, t, r)
        }, j.prototype._threeDbl = function() {
            if (this.zOne) {
                var e, t, r, n = this.x.redSqr(),
                    s = this.y.redSqr(),
                    a = s.redSqr(),
                    i = this.x.redAdd(s).redSqr().redISub(n).redISub(a);
                i = i.redIAdd(i);
                var o = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),
                    l = o.redSqr().redISub(i).redISub(i);
                e = l;
                var c = a.redIAdd(a);
                c = (c = c.redIAdd(c)).redIAdd(c), t = o.redMul(i.redISub(l)).redISub(c), r = this.y.redAdd(this.y)
            } else {
                var d = this.z.redSqr(),
                    u = this.y.redSqr(),
                    f = this.x.redMul(u),
                    h = this.x.redSub(d).redMul(this.x.redAdd(d));
                h = h.redAdd(h).redIAdd(h);
                var p = f.redIAdd(f),
                    g = (p = p.redIAdd(p)).redAdd(p);
                e = h.redSqr().redISub(g), r = this.y.redAdd(this.z).redSqr().redISub(u).redISub(d);
                var m = u.redSqr();
                m = (m = (m = m.redIAdd(m)).redIAdd(m)).redIAdd(m), t = h.redMul(p.redISub(e)).redISub(m)
            }
            return this.curve.jpoint(e, t, r)
        }, j.prototype._dbl = function() {
            var e = this.curve.a,
                t = this.x,
                r = this.y,
                n = this.z,
                s = n.redSqr().redSqr(),
                a = t.redSqr(),
                i = r.redSqr(),
                o = a.redAdd(a).redIAdd(a).redIAdd(e.redMul(s)),
                l = t.redAdd(t),
                c = (l = l.redIAdd(l)).redMul(i),
                d = o.redSqr().redISub(c.redAdd(c)),
                u = c.redISub(d),
                f = i.redSqr();
            f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
            var h = o.redMul(u).redISub(f),
                p = r.redAdd(r).redMul(n);
            return this.curve.jpoint(d, h, p)
        }, j.prototype.trpl = function() {
            if (!this.curve.zeroA) return this.dbl().add(this);
            var e = this.x.redSqr(),
                t = this.y.redSqr(),
                r = this.z.redSqr(),
                n = t.redSqr(),
                s = e.redAdd(e).redIAdd(e),
                a = s.redSqr(),
                i = this.x.redAdd(t).redSqr().redISub(e).redISub(n),
                o = (i = (i = (i = i.redIAdd(i)).redAdd(i).redIAdd(i)).redISub(a)).redSqr(),
                l = n.redIAdd(n);
            l = (l = (l = l.redIAdd(l)).redIAdd(l)).redIAdd(l);
            var c = s.redIAdd(i).redSqr().redISub(a).redISub(o).redISub(l),
                d = t.redMul(c);
            d = (d = d.redIAdd(d)).redIAdd(d);
            var u = this.x.redMul(o).redISub(d);
            u = (u = u.redIAdd(u)).redIAdd(u);
            var f = this.y.redMul(c.redMul(l.redISub(c)).redISub(i.redMul(o)));
            f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
            var h = this.z.redAdd(i).redSqr().redISub(r).redISub(o);
            return this.curve.jpoint(u, f, h)
        }, j.prototype.mul = function(e, t) {
            return e = new(0, i.default)(e, t), this.curve._wnafMul(this, e)
        }, j.prototype.eq = function(e) {
            if ("affine" === e.type) return this.eq(e.toJ());
            if (this === e) return !0;
            var t = this.z.redSqr(),
                r = e.z.redSqr();
            if (0 !== this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0)) return !1;
            var n = t.redMul(this.z),
                s = r.redMul(e.z);
            return 0 === this.y.redMul(s).redISub(e.y.redMul(n)).cmpn(0)
        }, j.prototype.eqXToP = function(e) {
            var t = this.z.redSqr(),
                r = e.toRed(this.curve.red).redMul(t);
            if (0 === this.x.cmp(r)) return !0;
            for (var n = e.clone(), s = this.curve.redN.redMul(t);;) {
                if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
                if (r.redIAdd(s), 0 === this.x.cmp(r)) return !0
            }
        }, j.prototype.inspect = function() {
            return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">"
        }, j.prototype.isInfinity = function() {
            return 0 === this.z.cmpn(0)
        };
        var I = d(function(e, t) {
                "use strict";
                t.base = b, t.short = E, t.mont = null, t.edwards = null
            }),
            S = d(function(e, t) {
                "use strict";
                var r, n = p.assert;

                function s(e) {
                    "short" === e.type ? this.curve = new I.short(e) : "edwards" === e.type ? this.curve = new I.edwards(e) : this.curve = new I.mont(e), this.g = this.curve.g, this.n = this.curve.n, this.hash = e.hash, n(this.g.validate(), "Invalid curve"), n(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O")
                }

                function a(e, r) {
                    Object.defineProperty(t, e, {
                        configurable: !0,
                        enumerable: !0,
                        get: function() {
                            var n = new s(r);
                            return Object.defineProperty(t, e, {
                                configurable: !0,
                                enumerable: !0,
                                value: n
                            }), n
                        }
                    })
                }
                t.PresetCurve = s, a("p192", {
                    type: "short",
                    prime: "p192",
                    p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                    a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                    b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                    n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                    hash: l.default.sha256,
                    gRed: !1,
                    g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
                }), a("p224", {
                    type: "short",
                    prime: "p224",
                    p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                    a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                    b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                    n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                    hash: l.default.sha256,
                    gRed: !1,
                    g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
                }), a("p256", {
                    type: "short",
                    prime: null,
                    p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                    a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                    b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                    n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                    hash: l.default.sha256,
                    gRed: !1,
                    g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
                }), a("p384", {
                    type: "short",
                    prime: null,
                    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                    a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                    b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                    n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                    hash: l.default.sha384,
                    gRed: !1,
                    g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
                }), a("p521", {
                    type: "short",
                    prime: null,
                    p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                    a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                    b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                    n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                    hash: l.default.sha512,
                    gRed: !1,
                    g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
                }), a("curve25519", {
                    type: "mont",
                    prime: "p25519",
                    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                    a: "76d06",
                    b: "1",
                    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                    hash: l.default.sha256,
                    gRed: !1,
                    g: ["9"]
                }), a("ed25519", {
                    type: "edwards",
                    prime: "p25519",
                    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                    a: "-1",
                    c: "1",
                    d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                    hash: l.default.sha256,
                    gRed: !1,
                    g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
                });
                try {
                    r = null.crash()
                } catch (e) {
                    r = void 0
                }
                a("secp256k1", {
                    type: "short",
                    prime: "k256",
                    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                    a: "0",
                    b: "7",
                    n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                    h: "1",
                    hash: l.default.sha256,
                    beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                    lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                    basis: [{
                        a: "3086d221a7d46bcde86c90e49284eb15",
                        b: "-e4437ed6010e88286f547fa90abfe4c3"
                    }, {
                        a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                        b: "3086d221a7d46bcde86c90e49284eb15"
                    }],
                    gRed: !1,
                    g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", r]
                })
            });

        function R(e) {
            if (!(this instanceof R)) return new R(e);
            this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
            var t = h.toArray(e.entropy, e.entropyEnc || "hex"),
                r = h.toArray(e.nonce, e.nonceEnc || "hex"),
                n = h.toArray(e.pers, e.persEnc || "hex");
            u(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(t, r, n)
        }
        "use strict";
        R.prototype._init = function(e, t, r) {
            var n = e.concat(t).concat(r);
            this.K = Array(this.outLen / 8), this.V = Array(this.outLen / 8);
            for (var s = 0; s < this.V.length; s++) this.K[s] = 0, this.V[s] = 1;
            this._update(n), this._reseed = 1, this.reseedInterval = 0x1000000000000
        }, R.prototype._hmac = function() {
            return new l.default.hmac(this.hash, this.K)
        }, R.prototype._update = function(e) {
            var t = this._hmac().update(this.V).update([0]);
            e && (t = t.update(e)), this.K = t.digest(), this.V = this._hmac().update(this.V).digest(), e && (this.K = this._hmac().update(this.V).update([1]).update(e).digest(), this.V = this._hmac().update(this.V).digest())
        }, R.prototype.reseed = function(e, t, r, n) {
            "string" != typeof t && (n = r, r = t, t = null), e = h.toArray(e, t), r = h.toArray(r, n), u(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e.concat(r || [])), this._reseed = 1
        }, R.prototype.generate = function(e, t, r, n) {
            if (this._reseed > this.reseedInterval) throw Error("Reseed is required");
            "string" != typeof t && (n = r, r = t, t = null), r && (r = h.toArray(r, n || "hex"), this._update(r));
            for (var s = []; s.length < e;) this.V = this._hmac().update(this.V).digest(), s = s.concat(this.V);
            var a = s.slice(0, e);
            return this._update(r), this._reseed++, h.encode(a, t)
        };
        var k = p.assert;

        function _(e, t) {
            this.ec = e, this.priv = null, this.pub = null, t.priv && this._importPrivate(t.priv, t.privEnc), t.pub && this._importPublic(t.pub, t.pubEnc)
        }
        "use strict";
        _.fromPublic = function(e, t, r) {
            return t instanceof _ ? t : new _(e, {
                pub: t,
                pubEnc: r
            })
        }, _.fromPrivate = function(e, t, r) {
            return t instanceof _ ? t : new _(e, {
                priv: t,
                privEnc: r
            })
        }, _.prototype.validate = function() {
            var e = this.getPublic();
            return e.isInfinity() ? {
                result: !1,
                reason: "Invalid public key"
            } : e.validate() ? e.mul(this.ec.curve.n).isInfinity() ? {
                result: !0,
                reason: null
            } : {
                result: !1,
                reason: "Public key * N != O"
            } : {
                result: !1,
                reason: "Public key is not a point"
            }
        }, _.prototype.getPublic = function(e, t) {
            return ("string" == typeof e && (t = e, e = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), t) ? this.pub.encode(t, e) : this.pub
        }, _.prototype.getPrivate = function(e) {
            return "hex" === e ? this.priv.toString(16, 2) : this.priv
        }, _.prototype._importPrivate = function(e, t) {
            this.priv = new(0, i.default)(e, t || 16), this.priv = this.priv.umod(this.ec.curve.n)
        }, _.prototype._importPublic = function(e, t) {
            if (e.x || e.y) {
                "mont" === this.ec.curve.type ? k(e.x, "Need x coordinate") : ("short" === this.ec.curve.type || "edwards" === this.ec.curve.type) && k(e.x && e.y, "Need both x and y coordinate"), this.pub = this.ec.curve.point(e.x, e.y);
                return
            }
            this.pub = this.ec.curve.decodePoint(e, t)
        }, _.prototype.derive = function(e) {
            return e.validate() || k(e.validate(), "public point not validated"), e.mul(this.priv).getX()
        }, _.prototype.sign = function(e, t, r) {
            return this.ec.sign(e, this, t, r)
        }, _.prototype.verify = function(e, t, r) {
            return this.ec.verify(e, t, this, void 0, r)
        }, _.prototype.inspect = function() {
            return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >"
        };
        var T = p.assert;

        function C(e, t) {
            if (e instanceof C) return e;
            this._importDER(e, t) || (T(e.r && e.s, "Signature without r or s"), this.r = new(0, i.default)(e.r, 16), this.s = new(0, i.default)(e.s, 16), void 0 === e.recoveryParam ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam)
        }

        function P() {
            this.place = 0
        }

        function O(e, t) {
            var r = e[t.place++];
            if (!(128 & r)) return r;
            var n = 15 & r;
            if (0 === n || n > 4 || 0 === e[t.place]) return !1;
            for (var s = 0, a = 0, i = t.place; a < n; a++, i++) s <<= 8, s |= e[i], s >>>= 0;
            return !(s <= 127) && (t.place = i, s)
        }

        function N(e) {
            for (var t = 0, r = e.length - 1; !e[t] && !(128 & e[t + 1]) && t < r;) t++;
            return 0 === t ? e : e.slice(t)
        }

        function M(e, t) {
            if (t < 128) return void e.push(t);
            var r = 1 + (Math.log(t) / Math.LN2 >>> 3);
            for (e.push(128 | r); --r;) e.push(t >>> (r << 3) & 255);
            e.push(t)
        }
        "use strict";
        C.prototype._importDER = function(e, t) {
            e = p.toArray(e, t);
            var r = new P;
            if (48 !== e[r.place++]) return !1;
            var n = O(e, r);
            if (!1 === n || n + r.place !== e.length || 2 !== e[r.place++]) return !1;
            var s = O(e, r);
            if (!1 === s || (128 & e[r.place]) != 0) return !1;
            var a = e.slice(r.place, s + r.place);
            if (r.place += s, 2 !== e[r.place++]) return !1;
            var o = O(e, r);
            if (!1 === o || e.length !== o + r.place || (128 & e[r.place]) != 0) return !1;
            var l = e.slice(r.place, o + r.place);
            if (0 === a[0])
                if (!(128 & a[1])) return !1;
                else a = a.slice(1);
            if (0 === l[0])
                if (!(128 & l[1])) return !1;
                else l = l.slice(1);
            return this.r = new(0, i.default)(a), this.s = new(0, i.default)(l), this.recoveryParam = null, !0
        }, C.prototype.toDER = function(e) {
            var t = this.r.toArray(),
                r = this.s.toArray();
            for (128 & t[0] && (t = [0].concat(t)), 128 & r[0] && (r = [0].concat(r)), t = N(t), r = N(r); !r[0] && !(128 & r[1]);) r = r.slice(1);
            var n = [2];
            M(n, t.length), (n = n.concat(t)).push(2), M(n, r.length);
            var s = n.concat(r),
                a = [48];
            return M(a, s.length), a = a.concat(s), p.encode(a, e)
        };
        var D = function() {
                throw Error("unsupported")
            },
            B = p.assert;

        function U(e) {
            if (!(this instanceof U)) return new U(e);
            "string" == typeof e && (B(Object.prototype.hasOwnProperty.call(S, e), "Unknown curve " + e), e = S[e]), e instanceof S.PresetCurve && (e = {
                curve: e
            }), this.curve = e.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e.curve.g, this.g.precompute(e.curve.n.bitLength() + 1), this.hash = e.hash || e.curve.hash
        }
        U.prototype.keyPair = function(e) {
            return new _(this, e)
        }, U.prototype.keyFromPrivate = function(e, t) {
            return _.fromPrivate(this, e, t)
        }, U.prototype.keyFromPublic = function(e, t) {
            return _.fromPublic(this, e, t)
        }, U.prototype.genKeyPair = function(e) {
            e || (e = {});
            for (var t = new R({
                    hash: this.hash,
                    pers: e.pers,
                    persEnc: e.persEnc || "utf8",
                    entropy: e.entropy || D(this.hash.hmacStrength),
                    entropyEnc: e.entropy && e.entropyEnc || "utf8",
                    nonce: this.n.toArray()
                }), r = this.n.byteLength(), n = this.n.sub(new(0, i.default)(2));;) {
                var s = new(0, i.default)(t.generate(r));
                if (!(s.cmp(n) > 0)) return s.iaddn(1), this.keyFromPrivate(s)
            }
        }, U.prototype._truncateToN = function(e, t, r) {
            if (i.default.isBN(e) || "number" == typeof e) n = (e = new(0, i.default)(e, 16)).byteLength();
            else if ("object" == typeof e) n = e.length, e = new(0, i.default)(e, 16);
            else {
                var n, s = e.toString();
                n = s.length + 1 >>> 1, e = new(0, i.default)(s, 16)
            }
            "number" != typeof r && (r = 8 * n);
            var a = r - this.n.bitLength();
            return (a > 0 && (e = e.ushrn(a)), !t && e.cmp(this.n) >= 0) ? e.sub(this.n) : e
        }, U.prototype.sign = function(e, t, r, n) {
            if ("object" == typeof r && (n = r, r = null), n || (n = {}), "string" != typeof e && "number" != typeof e && !i.default.isBN(e)) {
                B("object" == typeof e && e && "number" == typeof e.length, "Expected message to be an array-like, a hex string, or a BN instance"), B(e.length >>> 0 === e.length);
                for (var s = 0; s < e.length; s++) B((255 & e[s]) === e[s])
            }
            t = this.keyFromPrivate(t, r), B(!(e = this._truncateToN(e, !1, n.msgBitLength)).isNeg(), "Can not sign a negative message");
            var a = this.n.byteLength(),
                o = t.getPrivate().toArray("be", a),
                l = e.toArray("be", a);
            B(new(0, i.default)(l).eq(e), "Can not sign message");
            for (var c = new R({
                    hash: this.hash,
                    entropy: o,
                    nonce: l,
                    pers: n.pers,
                    persEnc: n.persEnc || "utf8"
                }), d = this.n.sub(new(0, i.default)(1)), u = 0;; u++) {
                var f = n.k ? n.k(u) : new(0, i.default)(c.generate(this.n.byteLength()));
                if (0 >= (f = this._truncateToN(f, !0)).cmpn(1) || f.cmp(d) >= 0) continue;
                var h = this.g.mul(f);
                if (!h.isInfinity()) {
                    var p = h.getX(),
                        g = p.umod(this.n);
                    if (0 !== g.cmpn(0)) {
                        var m = f.invm(this.n).mul(g.mul(t.getPrivate()).iadd(e));
                        if (0 !== (m = m.umod(this.n)).cmpn(0)) {
                            var y = !!h.getY().isOdd() | 2 * (0 !== p.cmp(g));
                            return n.canonical && m.cmp(this.nh) > 0 && (m = this.n.sub(m), y ^= 1), new C({
                                r: g,
                                s: m,
                                recoveryParam: y
                            })
                        }
                    }
                }
            }
        }, U.prototype.verify = function(e, t, r, n, s) {
            s || (s = {}), e = this._truncateToN(e, !1, s.msgBitLength), r = this.keyFromPublic(r, n);
            var a, i = (t = new C(t, "hex")).r,
                o = t.s;
            if (0 > i.cmpn(1) || i.cmp(this.n) >= 0 || 0 > o.cmpn(1) || o.cmp(this.n) >= 0) return !1;
            var l = o.invm(this.n),
                c = l.mul(e).umod(this.n),
                d = l.mul(i).umod(this.n);
            return this.curve._maxwellTrick ? !(a = this.g.jmulAdd(c, r.getPublic(), d)).isInfinity() && a.eqXToP(i) : !(a = this.g.mulAdd(c, r.getPublic(), d)).isInfinity() && 0 === a.getX().umod(this.n).cmp(i)
        }, U.prototype.recoverPubKey = function(e, t, r, n) {
            B((3 & r) === r, "The recovery param is more than two bits"), t = new C(t, n);
            var s = this.n,
                a = new(0, i.default)(e),
                o = t.r,
                l = t.s,
                c = 1 & r,
                d = r >> 1;
            if (o.cmp(this.curve.p.umod(this.curve.n)) >= 0 && d) throw Error("Unable to find sencond key candinate");
            o = d ? this.curve.pointFromX(o.add(this.curve.n), c) : this.curve.pointFromX(o, c);
            var u = t.r.invm(s),
                f = s.sub(a).mul(u).umod(s),
                h = l.mul(u).umod(s);
            return this.g.mulAdd(f, o, h)
        }, U.prototype.getKeyRecoveryParam = function(e, t, r, n) {
            if (null !== (t = new C(t, n)).recoveryParam) return t.recoveryParam;
            for (var s, a = 0; a < 4; a++) {
                try {
                    s = this.recoverPubKey(e, t, a)
                } catch (e) {
                    continue
                }
                if (s.eq(r)) return a
            }
            throw Error("Unable to find valid recovery factor")
        };
        var L = d(function(e, t) {
            "use strict";
            t.version = "6.6.1", t.utils = p, t.rand = function() {
                throw Error("unsupported")
            }, t.curve = I, t.curves = S, t.ec = U, t.eddsa = null
        }).ec
    }, {
        "bn.js": "lXPno",
        "hash.js": "2Tlxk",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    eg49z: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "signing-key/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    iFVyl: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "transactions/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    dBSgv: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "AlchemyWebSocketProvider", () => h), s.export(r, "AlchemyProvider", () => p);
        "use strict";
        var a = e("@ethersproject/properties"),
            i = e("./formatter"),
            o = e("./websocket-provider"),
            l = e("@ethersproject/logger"),
            c = e("./_version"),
            d = e("./url-json-rpc-provider");
        let u = new(0, l.Logger)(c.version),
            f = "_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";
        class h extends o.WebSocketProvider {
            constructor(e, t) {
                let r = new p(e, t);
                super(r.connection.url.replace(/^http/i, "ws").replace(".alchemyapi.", ".ws.alchemyapi."), r.network), (0, a.defineReadOnly)(this, "apiKey", r.apiKey)
            }
            isCommunityResource() {
                return this.apiKey === f
            }
        }
        class p extends d.UrlJsonRpcProvider {
            static getWebSocketProvider(e, t) {
                return new h(e, t)
            }
            static getApiKey(e) {
                return null == e ? f : (e && "string" != typeof e && u.throwArgumentError("invalid apiKey", "apiKey", e), e)
            }
            static getUrl(e, t) {
                let r = null;
                switch (e.name) {
                    case "homestead":
                        r = "eth-mainnet.alchemyapi.io/v2/";
                        break;
                    case "goerli":
                        r = "eth-goerli.g.alchemy.com/v2/";
                        break;
                    case "sepolia":
                        r = "eth-sepolia.g.alchemy.com/v2/";
                        break;
                    case "matic":
                        r = "polygon-mainnet.g.alchemy.com/v2/";
                        break;
                    case "maticmum":
                        r = "polygon-mumbai.g.alchemy.com/v2/";
                        break;
                    case "arbitrum":
                        r = "arb-mainnet.g.alchemy.com/v2/";
                        break;
                    case "arbitrum-goerli":
                        r = "arb-goerli.g.alchemy.com/v2/";
                        break;
                    case "arbitrum-sepolia":
                        r = "arb-sepolia.g.alchemy.com/v2/";
                        break;
                    case "optimism":
                        r = "opt-mainnet.g.alchemy.com/v2/";
                        break;
                    case "optimism-goerli":
                        r = "opt-goerli.g.alchemy.com/v2/";
                        break;
                    case "optimism-sepolia":
                        r = "opt-sepolia.g.alchemy.com/v2/";
                        break;
                    default:
                        u.throwArgumentError("unsupported network", "network", arguments[0])
                }
                return {
                    allowGzip: !0,
                    url: "https://" + r + t,
                    throttleCallback: (e, r) => (t === f && (0, i.showThrottleMessage)(), Promise.resolve(!0))
                }
            }
            isCommunityResource() {
                return this.apiKey === f
            }
        }
    }, {
        "@ethersproject/properties": "dmdV5",
        "./formatter": "7RPp2",
        "./websocket-provider": "83spj",
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "./url-json-rpc-provider": "bwHu3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "83spj": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "WebSocketProvider", () => p);
        "use strict";
        var a = e("@ethersproject/bignumber"),
            i = e("@ethersproject/properties"),
            o = e("./json-rpc-provider"),
            l = e("./ws"),
            c = e("@ethersproject/logger"),
            d = e("./_version"),
            u = function(e, t, r, n) {
                return new(r || (r = Promise))(function(s, a) {
                    function i(e) {
                        try {
                            l(n.next(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function o(e) {
                        try {
                            l(n.throw(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? s(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(i, o)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        let f = new(0, c.Logger)(d.version),
            h = 1;
        class p extends o.JsonRpcProvider {
            constructor(e, t) {
                "any" === t && f.throwError("WebSocketProvider does not support 'any' network yet", c.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "network:any"
                }), "string" == typeof e ? super(e, t) : super("_websocket", t), this._pollingInterval = -1, this._wsReady = !1, "string" == typeof e ? (0, i.defineReadOnly)(this, "_websocket", new(0, l.WebSocket)(this.connection.url)) : (0, i.defineReadOnly)(this, "_websocket", e), (0, i.defineReadOnly)(this, "_requests", {}), (0, i.defineReadOnly)(this, "_subs", {}), (0, i.defineReadOnly)(this, "_subIds", {}), (0, i.defineReadOnly)(this, "_detectNetwork", super.detectNetwork()), this.websocket.onopen = () => {
                    this._wsReady = !0, Object.keys(this._requests).forEach(e => {
                        this.websocket.send(this._requests[e].payload)
                    })
                }, this.websocket.onmessage = e => {
                    let t = e.data,
                        r = JSON.parse(t);
                    if (null != r.id) {
                        let e = String(r.id),
                            n = this._requests[e];
                        if (delete this._requests[e], void 0 !== r.result) n.callback(null, r.result), this.emit("debug", {
                            action: "response",
                            request: JSON.parse(n.payload),
                            response: r.result,
                            provider: this
                        });
                        else {
                            let e = null;
                            r.error ? (e = Error(r.error.message || "unknown error"), (0, i.defineReadOnly)(e, "code", r.error.code || null), (0, i.defineReadOnly)(e, "response", t)) : e = Error("unknown error"), n.callback(e, void 0), this.emit("debug", {
                                action: "response",
                                error: e,
                                request: JSON.parse(n.payload),
                                provider: this
                            })
                        }
                    } else if ("eth_subscription" === r.method) {
                        let e = this._subs[r.params.subscription];
                        e && e.processFunc(r.params.result)
                    } else console.warn("this should not happen")
                };
                let r = setInterval(() => {
                    this.emit("poll")
                }, 1e3);
                r.unref && r.unref()
            }
            get websocket() {
                return this._websocket
            }
            detectNetwork() {
                return this._detectNetwork
            }
            get pollingInterval() {
                return 0
            }
            resetEventsBlock(e) {
                f.throwError("cannot reset events block on WebSocketProvider", c.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "resetEventBlock"
                })
            }
            set pollingInterval(e) {
                f.throwError("cannot set polling interval on WebSocketProvider", c.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "setPollingInterval"
                })
            }
            poll() {
                return u(this, void 0, void 0, function*() {
                    return null
                })
            }
            set polling(e) {
                e && f.throwError("cannot set polling on WebSocketProvider", c.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "setPolling"
                })
            }
            send(e, t) {
                let r = h++;
                return new Promise((n, s) => {
                    let a = JSON.stringify({
                        method: e,
                        params: t,
                        id: r,
                        jsonrpc: "2.0"
                    });
                    this.emit("debug", {
                        action: "request",
                        request: JSON.parse(a),
                        provider: this
                    }), this._requests[String(r)] = {
                        callback: function(e, t) {
                            return e ? s(e) : n(t)
                        },
                        payload: a
                    }, this._wsReady && this.websocket.send(a)
                })
            }
            static defaultUrl() {
                return "ws://localhost:8546"
            }
            _subscribe(e, t, r) {
                return u(this, void 0, void 0, function*() {
                    let n = this._subIds[e];
                    null == n && (n = Promise.all(t).then(e => this.send("eth_subscribe", e)), this._subIds[e] = n);
                    let s = yield n;
                    this._subs[s] = {
                        tag: e,
                        processFunc: r
                    }
                })
            }
            _startEvent(e) {
                switch (e.type) {
                    case "block":
                        this._subscribe("block", ["newHeads"], e => {
                            let t = a.BigNumber.from(e.number).toNumber();
                            this._emitted.block = t, this.emit("block", t)
                        });
                        break;
                    case "pending":
                        this._subscribe("pending", ["newPendingTransactions"], e => {
                            this.emit("pending", e)
                        });
                        break;
                    case "filter":
                        this._subscribe(e.tag, ["logs", this._getFilter(e.filter)], t => {
                            null == t.removed && (t.removed = !1), this.emit(e.filter, this.formatter.filterLog(t))
                        });
                        break;
                    case "tx": {
                        let t = e => {
                            let t = e.hash;
                            this.getTransactionReceipt(t).then(e => {
                                e && this.emit(t, e)
                            })
                        };
                        t(e), this._subscribe("tx", ["newHeads"], e => {
                            this._events.filter(e => "tx" === e.type).forEach(t)
                        });
                        break
                    }
                    case "debug":
                    case "poll":
                    case "willPoll":
                    case "didPoll":
                    case "error":
                        break;
                    default:
                        console.log("unhandled:", e)
                }
            }
            _stopEvent(e) {
                let t = e.tag;
                if ("tx" === e.type) {
                    if (this._events.filter(e => "tx" === e.type).length) return;
                    t = "tx"
                } else if (this.listenerCount(e.event)) return;
                let r = this._subIds[t];
                r && (delete this._subIds[t], r.then(e => {
                    this._subs[e] && (delete this._subs[e], this.send("eth_unsubscribe", [e]))
                }))
            }
            destroy() {
                return u(this, void 0, void 0, function*() {
                    this.websocket.readyState === l.WebSocket.CONNECTING && (yield new Promise(e => {
                        this.websocket.onopen = function() {
                            e(!0)
                        }, this.websocket.onerror = function() {
                            e(!1)
                        }
                    })), this.websocket.close(1e3)
                })
            }
        }
    }, {
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/properties": "dmdV5",
        "./json-rpc-provider": "7x7oZ",
        "./ws": "7S9K4",
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "7x7oZ": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "JsonRpcSigner", () => I), s.export(r, "JsonRpcProvider", () => k);
        "use strict";
        var a = e("@ethersproject/abstract-signer"),
            i = e("@ethersproject/bignumber"),
            o = e("@ethersproject/bytes"),
            l = e("@ethersproject/hash"),
            c = e("@ethersproject/properties"),
            d = e("@ethersproject/strings"),
            u = e("@ethersproject/transactions"),
            f = e("@ethersproject/web"),
            h = e("@ethersproject/logger"),
            p = e("./_version"),
            g = e("./base-provider"),
            m = function(e, t, r, n) {
                return new(r || (r = Promise))(function(s, a) {
                    function i(e) {
                        try {
                            l(n.next(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function o(e) {
                        try {
                            l(n.throw(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? s(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(i, o)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        let y = new(0, h.Logger)(p.version),
            b = ["call", "estimateGas"];

        function x(e, t) {
            if (null == e) return null;
            if ("string" == typeof e.message && e.message.match("reverted")) {
                let r = (0, o.isHexString)(e.data) ? e.data : null;
                if (!t || r) return {
                    message: e.message,
                    data: r
                }
            }
            if ("object" == typeof e) {
                for (let r in e) {
                    let n = x(e[r], t);
                    if (n) return n
                }
                return null
            }
            if ("string" == typeof e) try {
                return x(JSON.parse(e), t)
            } catch (e) {}
            return null
        }

        function v(e, t, r) {
            let n = r.transaction || r.signedTransaction;
            if ("call" === e) {
                let e = x(t, !0);
                if (e) return e.data;
                y.throwError("missing revert data in call exception; Transaction reverted without a reason string", h.Logger.errors.CALL_EXCEPTION, {
                    data: "0x",
                    transaction: n,
                    error: t
                })
            }
            if ("estimateGas" === e) {
                let r = x(t.body, !1);
                null == r && (r = x(t, !1)), r && y.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", h.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                    reason: r.message,
                    method: e,
                    transaction: n,
                    error: t
                })
            }
            let s = t.message;
            throw t.code === h.Logger.errors.SERVER_ERROR && t.error && "string" == typeof t.error.message ? s = t.error.message : "string" == typeof t.body ? s = t.body : "string" == typeof t.responseText && (s = t.responseText), (s = (s || "").toLowerCase()).match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i) && y.throwError("insufficient funds for intrinsic transaction cost", h.Logger.errors.INSUFFICIENT_FUNDS, {
                error: t,
                method: e,
                transaction: n
            }), s.match(/nonce (is )?too low/i) && y.throwError("nonce has already been used", h.Logger.errors.NONCE_EXPIRED, {
                error: t,
                method: e,
                transaction: n
            }), s.match(/replacement transaction underpriced|transaction gas price.*too low/i) && y.throwError("replacement fee too low", h.Logger.errors.REPLACEMENT_UNDERPRICED, {
                error: t,
                method: e,
                transaction: n
            }), s.match(/only replay-protected/i) && y.throwError("legacy pre-eip-155 transactions not supported", h.Logger.errors.UNSUPPORTED_OPERATION, {
                error: t,
                method: e,
                transaction: n
            }), b.indexOf(e) >= 0 && s.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/) && y.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", h.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                error: t,
                method: e,
                transaction: n
            }), t
        }

        function w(e) {
            return new Promise(function(t) {
                setTimeout(t, e)
            })
        }

        function E(e) {
            if (e.error) {
                let t = Error(e.error.message);
                throw t.code = e.error.code, t.data = e.error.data, t
            }
            return e.result
        }

        function A(e) {
            return e ? e.toLowerCase() : e
        }
        let j = {};
        class I extends a.Signer {
            constructor(e, t, r) {
                if (super(), e !== j) throw Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
                (0, c.defineReadOnly)(this, "provider", t), null == r && (r = 0), "string" == typeof r ? ((0, c.defineReadOnly)(this, "_address", this.provider.formatter.address(r)), (0, c.defineReadOnly)(this, "_index", null)) : "number" == typeof r ? ((0, c.defineReadOnly)(this, "_index", r), (0, c.defineReadOnly)(this, "_address", null)) : y.throwArgumentError("invalid address or index", "addressOrIndex", r)
            }
            connect(e) {
                return y.throwError("cannot alter JSON-RPC Signer connection", h.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "connect"
                })
            }
            connectUnchecked() {
                return new S(j, this.provider, this._address || this._index)
            }
            getAddress() {
                return this._address ? Promise.resolve(this._address) : this.provider.send("eth_accounts", []).then(e => (e.length <= this._index && y.throwError("unknown account #" + this._index, h.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "getAddress"
                }), this.provider.formatter.address(e[this._index])))
            }
            sendUncheckedTransaction(e) {
                e = (0, c.shallowCopy)(e);
                let t = this.getAddress().then(e => (e && (e = e.toLowerCase()), e));
                if (null == e.gasLimit) {
                    let r = (0, c.shallowCopy)(e);
                    r.from = t, e.gasLimit = this.provider.estimateGas(r)
                }
                return null != e.to && (e.to = Promise.resolve(e.to).then(e => m(this, void 0, void 0, function*() {
                    if (null == e) return null;
                    let t = yield this.provider.resolveName(e);
                    return null == t && y.throwArgumentError("provided ENS name resolves to null", "tx.to", e), t
                }))), (0, c.resolveProperties)({
                    tx: (0, c.resolveProperties)(e),
                    sender: t
                }).then(({
                    tx: t,
                    sender: r
                }) => {
                    null != t.from ? t.from.toLowerCase() !== r && y.throwArgumentError("from address mismatch", "transaction", e) : t.from = r;
                    let n = this.provider.constructor.hexlifyTransaction(t, {
                        from: !0
                    });
                    return this.provider.send("eth_sendTransaction", [n]).then(e => e, e => ("string" == typeof e.message && e.message.match(/user denied/i) && y.throwError("user rejected transaction", h.Logger.errors.ACTION_REJECTED, {
                        action: "sendTransaction",
                        transaction: t
                    }), v("sendTransaction", e, n)))
                })
            }
            signTransaction(e) {
                return y.throwError("signing transactions is unsupported", h.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "signTransaction"
                })
            }
            sendTransaction(e) {
                return m(this, void 0, void 0, function*() {
                    let t = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval), r = yield this.sendUncheckedTransaction(e);
                    try {
                        return yield(0, f.poll)(() => m(this, void 0, void 0, function*() {
                            let e = yield this.provider.getTransaction(r);
                            if (null !== e) return this.provider._wrapTransaction(e, r, t)
                        }), {
                            oncePoll: this.provider
                        })
                    } catch (e) {
                        throw e.transactionHash = r, e
                    }
                })
            }
            signMessage(e) {
                return m(this, void 0, void 0, function*() {
                    let t = "string" == typeof e ? (0, d.toUtf8Bytes)(e) : e,
                        r = yield this.getAddress();
                    try {
                        return yield this.provider.send("personal_sign", [(0, o.hexlify)(t), r.toLowerCase()])
                    } catch (t) {
                        throw "string" == typeof t.message && t.message.match(/user denied/i) && y.throwError("user rejected signing", h.Logger.errors.ACTION_REJECTED, {
                            action: "signMessage",
                            from: r,
                            messageData: e
                        }), t
                    }
                })
            }
            _legacySignMessage(e) {
                return m(this, void 0, void 0, function*() {
                    let t = "string" == typeof e ? (0, d.toUtf8Bytes)(e) : e,
                        r = yield this.getAddress();
                    try {
                        return yield this.provider.send("eth_sign", [r.toLowerCase(), (0, o.hexlify)(t)])
                    } catch (t) {
                        throw "string" == typeof t.message && t.message.match(/user denied/i) && y.throwError("user rejected signing", h.Logger.errors.ACTION_REJECTED, {
                            action: "_legacySignMessage",
                            from: r,
                            messageData: e
                        }), t
                    }
                })
            }
            _signTypedData(e, t, r) {
                return m(this, void 0, void 0, function*() {
                    let n = yield l._TypedDataEncoder.resolveNames(e, t, r, e => this.provider.resolveName(e)), s = yield this.getAddress();
                    try {
                        return yield this.provider.send("eth_signTypedData_v4", [s.toLowerCase(), JSON.stringify(l._TypedDataEncoder.getPayload(n.domain, t, n.value))])
                    } catch (e) {
                        throw "string" == typeof e.message && e.message.match(/user denied/i) && y.throwError("user rejected signing", h.Logger.errors.ACTION_REJECTED, {
                            action: "_signTypedData",
                            from: s,
                            messageData: {
                                domain: n.domain,
                                types: t,
                                value: n.value
                            }
                        }), e
                    }
                })
            }
            unlock(e) {
                return m(this, void 0, void 0, function*() {
                    let t = this.provider,
                        r = yield this.getAddress();
                    return t.send("personal_unlockAccount", [r.toLowerCase(), e, null])
                })
            }
        }
        class S extends I {
            sendTransaction(e) {
                return this.sendUncheckedTransaction(e).then(e => ({
                    hash: e,
                    nonce: null,
                    gasLimit: null,
                    gasPrice: null,
                    data: null,
                    value: null,
                    chainId: null,
                    confirmations: 0,
                    from: null,
                    wait: t => this.provider.waitForTransaction(e, t)
                }))
            }
        }
        let R = {
            chainId: !0,
            data: !0,
            gasLimit: !0,
            gasPrice: !0,
            nonce: !0,
            to: !0,
            value: !0,
            type: !0,
            accessList: !0,
            maxFeePerGas: !0,
            maxPriorityFeePerGas: !0
        };
        class k extends g.BaseProvider {
            constructor(e, t) {
                let r = t;
                null == r && (r = new Promise((e, t) => {
                    setTimeout(() => {
                        this.detectNetwork().then(t => {
                            e(t)
                        }, e => {
                            t(e)
                        })
                    }, 0)
                })), super(r), e || (e = (0, c.getStatic)(this.constructor, "defaultUrl")()), "string" == typeof e ? (0, c.defineReadOnly)(this, "connection", Object.freeze({
                    url: e
                })) : (0, c.defineReadOnly)(this, "connection", Object.freeze((0, c.shallowCopy)(e))), this._nextId = 42
            }
            get _cache() {
                return null == this._eventLoopCache && (this._eventLoopCache = {}), this._eventLoopCache
            }
            static defaultUrl() {
                return "http://localhost:8545"
            }
            detectNetwork() {
                return this._cache.detectNetwork || (this._cache.detectNetwork = this._uncachedDetectNetwork(), setTimeout(() => {
                    this._cache.detectNetwork = null
                }, 0)), this._cache.detectNetwork
            }
            _uncachedDetectNetwork() {
                return m(this, void 0, void 0, function*() {
                    yield w(0);
                    let e = null;
                    try {
                        e = yield this.send("eth_chainId", [])
                    } catch (t) {
                        try {
                            e = yield this.send("net_version", [])
                        } catch (e) {}
                    }
                    if (null != e) {
                        let t = (0, c.getStatic)(this.constructor, "getNetwork");
                        try {
                            return t(i.BigNumber.from(e).toNumber())
                        } catch (t) {
                            return y.throwError("could not detect network", h.Logger.errors.NETWORK_ERROR, {
                                chainId: e,
                                event: "invalidNetwork",
                                serverError: t
                            })
                        }
                    }
                    return y.throwError("could not detect network", h.Logger.errors.NETWORK_ERROR, {
                        event: "noNetwork"
                    })
                })
            }
            getSigner(e) {
                return new I(j, this, e)
            }
            getUncheckedSigner(e) {
                return this.getSigner(e).connectUnchecked()
            }
            listAccounts() {
                return this.send("eth_accounts", []).then(e => e.map(e => this.formatter.address(e)))
            }
            send(e, t) {
                let r = {
                    method: e,
                    params: t,
                    id: this._nextId++,
                    jsonrpc: "2.0"
                };
                this.emit("debug", {
                    action: "request",
                    request: (0, c.deepCopy)(r),
                    provider: this
                });
                let n = ["eth_chainId", "eth_blockNumber"].indexOf(e) >= 0;
                if (n && this._cache[e]) return this._cache[e];
                let s = (0, f.fetchJson)(this.connection, JSON.stringify(r), E).then(e => (this.emit("debug", {
                    action: "response",
                    request: r,
                    response: e,
                    provider: this
                }), e), e => {
                    throw this.emit("debug", {
                        action: "response",
                        error: e,
                        request: r,
                        provider: this
                    }), e
                });
                return n && (this._cache[e] = s, setTimeout(() => {
                    this._cache[e] = null
                }, 0)), s
            }
            prepareRequest(e, t) {
                switch (e) {
                    case "getBlockNumber":
                        return ["eth_blockNumber", []];
                    case "getGasPrice":
                        return ["eth_gasPrice", []];
                    case "getBalance":
                        return ["eth_getBalance", [A(t.address), t.blockTag]];
                    case "getTransactionCount":
                        return ["eth_getTransactionCount", [A(t.address), t.blockTag]];
                    case "getCode":
                        return ["eth_getCode", [A(t.address), t.blockTag]];
                    case "getStorageAt":
                        return ["eth_getStorageAt", [A(t.address), (0, o.hexZeroPad)(t.position, 32), t.blockTag]];
                    case "sendTransaction":
                        return ["eth_sendRawTransaction", [t.signedTransaction]];
                    case "getBlock":
                        if (t.blockTag) return ["eth_getBlockByNumber", [t.blockTag, !!t.includeTransactions]];
                        if (t.blockHash) return ["eth_getBlockByHash", [t.blockHash, !!t.includeTransactions]];
                        break;
                    case "getTransaction":
                        return ["eth_getTransactionByHash", [t.transactionHash]];
                    case "getTransactionReceipt":
                        return ["eth_getTransactionReceipt", [t.transactionHash]];
                    case "call":
                        return ["eth_call", [(0, c.getStatic)(this.constructor, "hexlifyTransaction")(t.transaction, {
                            from: !0
                        }), t.blockTag]];
                    case "estimateGas":
                        return ["eth_estimateGas", [(0, c.getStatic)(this.constructor, "hexlifyTransaction")(t.transaction, {
                            from: !0
                        })]];
                    case "getLogs":
                        return t.filter && null != t.filter.address && (t.filter.address = A(t.filter.address)), ["eth_getLogs", [t.filter]]
                }
                return null
            }
            perform(e, t) {
                return m(this, void 0, void 0, function*() {
                    if ("call" === e || "estimateGas" === e) {
                        let e = t.transaction;
                        if (e && null != e.type && i.BigNumber.from(e.type).isZero() && null == e.maxFeePerGas && null == e.maxPriorityFeePerGas) {
                            let r = yield this.getFeeData();
                            null == r.maxFeePerGas && null == r.maxPriorityFeePerGas && ((t = (0, c.shallowCopy)(t)).transaction = (0, c.shallowCopy)(e), delete t.transaction.type)
                        }
                    }
                    let r = this.prepareRequest(e, t);
                    null == r && y.throwError(e + " not implemented", h.Logger.errors.NOT_IMPLEMENTED, {
                        operation: e
                    });
                    try {
                        return yield this.send(r[0], r[1])
                    } catch (r) {
                        return v(e, r, t)
                    }
                })
            }
            _startEvent(e) {
                "pending" === e.tag && this._startPending(), super._startEvent(e)
            }
            _startPending() {
                if (null != this._pendingFilter) return;
                let e = this,
                    t = this.send("eth_newPendingTransactionFilter", []);
                this._pendingFilter = t, t.then(function(r) {
                    return ! function n() {
                        e.send("eth_getFilterChanges", [r]).then(function(r) {
                            if (e._pendingFilter != t) return null;
                            let n = Promise.resolve();
                            return r.forEach(function(t) {
                                e._emitted["t:" + t.toLowerCase()] = "pending", n = n.then(function() {
                                    return e.getTransaction(t).then(function(t) {
                                        return e.emit("pending", t), null
                                    })
                                })
                            }), n.then(function() {
                                return w(1e3)
                            })
                        }).then(function() {
                            return e._pendingFilter != t ? void e.send("eth_uninstallFilter", [r]) : (setTimeout(function() {
                                n()
                            }, 0), null)
                        }).catch(e => {})
                    }(), r
                }).catch(e => {})
            }
            _stopEvent(e) {
                "pending" === e.tag && 0 === this.listenerCount("pending") && (this._pendingFilter = null), super._stopEvent(e)
            }
            static hexlifyTransaction(e, t) {
                let r = (0, c.shallowCopy)(R);
                if (t)
                    for (let e in t) t[e] && (r[e] = !0);
                (0, c.checkProperties)(e, r);
                let n = {};
                return ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach(function(t) {
                    if (null == e[t]) return;
                    let r = (0, o.hexValue)(i.BigNumber.from(e[t]));
                    "gasLimit" === t && (t = "gas"), n[t] = r
                }), ["from", "to", "data"].forEach(function(t) {
                    null != e[t] && (n[t] = (0, o.hexlify)(e[t]))
                }), e.accessList && (n.accessList = (0, u.accessListify)(e.accessList)), n
            }
        }
    }, {
        "@ethersproject/abstract-signer": "j6EbC",
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/hash": "jLDfB",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/strings": "edSy2",
        "@ethersproject/transactions": "ctBdV",
        "@ethersproject/web": "5uH8k",
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "./base-provider": "lEHz5",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    j6EbC: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "Signer", () => f), s.export(r, "VoidSigner", () => h);
        "use strict";
        var a = e("@ethersproject/properties"),
            i = e("@ethersproject/logger"),
            o = e("./_version"),
            l = function(e, t, r, n) {
                return new(r || (r = Promise))(function(s, a) {
                    function i(e) {
                        try {
                            l(n.next(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function o(e) {
                        try {
                            l(n.throw(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? s(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(i, o)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        let c = new(0, i.Logger)(o.version),
            d = ["accessList", "ccipReadEnabled", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"],
            u = [i.Logger.errors.INSUFFICIENT_FUNDS, i.Logger.errors.NONCE_EXPIRED, i.Logger.errors.REPLACEMENT_UNDERPRICED];
        class f {
            constructor() {
                c.checkAbstract(new.target, f), (0, a.defineReadOnly)(this, "_isSigner", !0)
            }
            getBalance(e) {
                return l(this, void 0, void 0, function*() {
                    return this._checkProvider("getBalance"), yield this.provider.getBalance(this.getAddress(), e)
                })
            }
            getTransactionCount(e) {
                return l(this, void 0, void 0, function*() {
                    return this._checkProvider("getTransactionCount"), yield this.provider.getTransactionCount(this.getAddress(), e)
                })
            }
            estimateGas(e) {
                return l(this, void 0, void 0, function*() {
                    this._checkProvider("estimateGas");
                    let t = yield(0, a.resolveProperties)(this.checkTransaction(e));
                    return yield this.provider.estimateGas(t)
                })
            }
            call(e, t) {
                return l(this, void 0, void 0, function*() {
                    this._checkProvider("call");
                    let r = yield(0, a.resolveProperties)(this.checkTransaction(e));
                    return yield this.provider.call(r, t)
                })
            }
            sendTransaction(e) {
                return l(this, void 0, void 0, function*() {
                    this._checkProvider("sendTransaction");
                    let t = yield this.populateTransaction(e), r = yield this.signTransaction(t);
                    return yield this.provider.sendTransaction(r)
                })
            }
            getChainId() {
                return l(this, void 0, void 0, function*() {
                    return this._checkProvider("getChainId"), (yield this.provider.getNetwork()).chainId
                })
            }
            getGasPrice() {
                return l(this, void 0, void 0, function*() {
                    return this._checkProvider("getGasPrice"), yield this.provider.getGasPrice()
                })
            }
            getFeeData() {
                return l(this, void 0, void 0, function*() {
                    return this._checkProvider("getFeeData"), yield this.provider.getFeeData()
                })
            }
            resolveName(e) {
                return l(this, void 0, void 0, function*() {
                    return this._checkProvider("resolveName"), yield this.provider.resolveName(e)
                })
            }
            checkTransaction(e) {
                for (let t in e) - 1 === d.indexOf(t) && c.throwArgumentError("invalid transaction key: " + t, "transaction", e);
                let t = (0, a.shallowCopy)(e);
                return null == t.from ? t.from = this.getAddress() : t.from = Promise.all([Promise.resolve(t.from), this.getAddress()]).then(t => (t[0].toLowerCase() !== t[1].toLowerCase() && c.throwArgumentError("from address mismatch", "transaction", e), t[0])), t
            }
            populateTransaction(e) {
                return l(this, void 0, void 0, function*() {
                    let t = yield(0, a.resolveProperties)(this.checkTransaction(e));
                    null != t.to && (t.to = Promise.resolve(t.to).then(e => l(this, void 0, void 0, function*() {
                        if (null == e) return null;
                        let t = yield this.resolveName(e);
                        return null == t && c.throwArgumentError("provided ENS name resolves to null", "tx.to", e), t
                    })), t.to.catch(e => {}));
                    let r = null != t.maxFeePerGas || null != t.maxPriorityFeePerGas;
                    if (null != t.gasPrice && (2 === t.type || r) ? c.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", e) : (0 === t.type || 1 === t.type) && r && c.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", e), (2 === t.type || null == t.type) && null != t.maxFeePerGas && null != t.maxPriorityFeePerGas) t.type = 2;
                    else if (0 === t.type || 1 === t.type) null == t.gasPrice && (t.gasPrice = this.getGasPrice());
                    else {
                        let e = yield this.getFeeData();
                        if (null == t.type)
                            if (null != e.maxFeePerGas && null != e.maxPriorityFeePerGas)
                                if (t.type = 2, null != t.gasPrice) {
                                    let e = t.gasPrice;
                                    delete t.gasPrice, t.maxFeePerGas = e, t.maxPriorityFeePerGas = e
                                } else null == t.maxFeePerGas && (t.maxFeePerGas = e.maxFeePerGas), null == t.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = e.maxPriorityFeePerGas);
                        else null != e.gasPrice ? (r && c.throwError("network does not support EIP-1559", i.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "populateTransaction"
                        }), null == t.gasPrice && (t.gasPrice = e.gasPrice), t.type = 0) : c.throwError("failed to get consistent fee data", i.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "signer.getFeeData"
                        });
                        else 2 === t.type && (null == t.maxFeePerGas && (t.maxFeePerGas = e.maxFeePerGas), null == t.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = e.maxPriorityFeePerGas))
                    }
                    return null == t.nonce && (t.nonce = this.getTransactionCount("pending")), null == t.gasLimit && (t.gasLimit = this.estimateGas(t).catch(e => {
                        if (u.indexOf(e.code) >= 0) throw e;
                        return c.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", i.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                            error: e,
                            tx: t
                        })
                    })), null == t.chainId ? t.chainId = this.getChainId() : t.chainId = Promise.all([Promise.resolve(t.chainId), this.getChainId()]).then(t => (0 !== t[1] && t[0] !== t[1] && c.throwArgumentError("chainId address mismatch", "transaction", e), t[0])), yield(0, a.resolveProperties)(t)
                })
            }
            _checkProvider(e) {
                this.provider || c.throwError("missing provider", i.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: e || "_checkProvider"
                })
            }
            static isSigner(e) {
                return !!(e && e._isSigner)
            }
        }
        class h extends f {
            constructor(e, t) {
                super(), (0, a.defineReadOnly)(this, "address", e), (0, a.defineReadOnly)(this, "provider", t || null)
            }
            getAddress() {
                return Promise.resolve(this.address)
            }
            _fail(e, t) {
                return Promise.resolve().then(() => {
                    c.throwError(e, i.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: t
                    })
                })
            }
            signMessage(e) {
                return this._fail("VoidSigner cannot sign messages", "signMessage")
            }
            signTransaction(e) {
                return this._fail("VoidSigner cannot sign transactions", "signTransaction")
            }
            _signTypedData(e, t, r) {
                return this._fail("VoidSigner cannot sign typed data", "signTypedData")
            }
            connect(e) {
                return new h(this.address, e)
            }
        }
    }, {
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/logger": "6NWvR",
        "./_version": "9OQFK",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "9OQFK": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "abstract-signer/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "7S9K4": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "WebSocket", () => o);
        "use strict";
        var a = e("@ethersproject/logger"),
            i = e("./_version");
        let o = null;
        try {
            if (o = WebSocket, null == o) throw Error("inject please")
        } catch (t) {
            let e = new(0, a.Logger)(i.version);
            o = function() {
                e.throwError("WebSockets not supported in this environment", a.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "new WebSocket()"
                })
            }
        }
    }, {
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    bwHu3: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "StaticJsonRpcProvider", () => d), s.export(r, "UrlJsonRpcProvider", () => u);
        "use strict";
        var a = e("@ethersproject/properties"),
            i = e("@ethersproject/logger"),
            o = e("./_version"),
            l = e("./json-rpc-provider");
        let c = new(0, i.Logger)(o.version);
        class d extends l.JsonRpcProvider {
            detectNetwork() {
                var e, t, r, n;
                let s = Object.create(null, {
                    detectNetwork: {
                        get: () => super.detectNetwork
                    }
                });
                return e = this, t = void 0, r = void 0, n = function*() {
                    let e = this.network;
                    return null == e && ((e = yield s.detectNetwork.call(this)) || c.throwError("no network detected", i.Logger.errors.UNKNOWN_ERROR, {}), null == this._network && ((0, a.defineReadOnly)(this, "_network", e), this.emit("network", e, null))), e
                }, new(r || (r = Promise))(function(s, a) {
                    function i(e) {
                        try {
                            l(n.next(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function o(e) {
                        try {
                            l(n.throw(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? s(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(i, o)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            }
        }
        class u extends d {
            constructor(e, t) {
                c.checkAbstract(new.target, u), e = (0, a.getStatic)(new.target, "getNetwork")(e), super((0, a.getStatic)(new.target, "getUrl")(e, t = (0, a.getStatic)(new.target, "getApiKey")(t)), e), "string" == typeof t ? (0, a.defineReadOnly)(this, "apiKey", t) : null != t && Object.keys(t).forEach(e => {
                    (0, a.defineReadOnly)(this, e, t[e])
                })
            }
            _startPending() {
                c.warn("WARNING: API provider does not support pending filters")
            }
            isCommunityResource() {
                return !1
            }
            getSigner(e) {
                return c.throwError("API provider does not support signing", i.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "getSigner"
                })
            }
            listAccounts() {
                return Promise.resolve([])
            }
            static getApiKey(e) {
                return e
            }
            static getUrl(e, t) {
                return c.throwError("not implemented; sub-classes must override getUrl", i.Logger.errors.NOT_IMPLEMENTED, {
                    operation: "getUrl"
                })
            }
        }
    }, {
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "./json-rpc-provider": "7x7oZ",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    afy2f: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "AnkrProvider", () => u);
        var a = e("./formatter"),
            i = e("./url-json-rpc-provider"),
            o = e("@ethersproject/logger"),
            l = e("./_version");
        let c = new(0, o.Logger)(l.version),
            d = "9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972";
        class u extends i.UrlJsonRpcProvider {
            isCommunityResource() {
                return this.apiKey === d
            }
            static getApiKey(e) {
                return null == e ? d : e
            }
            static getUrl(e, t) {
                null == t && (t = d);
                let r = {
                    allowGzip: !0,
                    url: "https://" + function(e) {
                        switch (e) {
                            case "homestead":
                                return "rpc.ankr.com/eth/";
                            case "ropsten":
                                return "rpc.ankr.com/eth_ropsten/";
                            case "rinkeby":
                                return "rpc.ankr.com/eth_rinkeby/";
                            case "goerli":
                                return "rpc.ankr.com/eth_goerli/";
                            case "sepolia":
                                return "rpc.ankr.com/eth_sepolia/";
                            case "matic":
                                return "rpc.ankr.com/polygon/";
                            case "maticmum":
                                return "rpc.ankr.com/polygon_mumbai/";
                            case "optimism":
                                return "rpc.ankr.com/optimism/";
                            case "optimism-goerli":
                                return "rpc.ankr.com/optimism_testnet/";
                            case "optimism-sepolia":
                                return "rpc.ankr.com/optimism_sepolia/";
                            case "arbitrum":
                                return "rpc.ankr.com/arbitrum/"
                        }
                        return c.throwArgumentError("unsupported network", "name", e)
                    }(e.name) + t,
                    throttleCallback: (e, r) => (t.apiKey === d && (0, a.showThrottleMessage)(), Promise.resolve(!0))
                };
                return null != t.projectSecret && (r.user = "", r.password = t.projectSecret), r
            }
        }
    }, {
        "./formatter": "7RPp2",
        "./url-json-rpc-provider": "bwHu3",
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "1qhut": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "CloudflareProvider", () => c);
        "use strict";
        var a = e("./url-json-rpc-provider"),
            i = e("@ethersproject/logger"),
            o = e("./_version");
        let l = new(0, i.Logger)(o.version);
        class c extends a.UrlJsonRpcProvider {
            static getApiKey(e) {
                return null != e && l.throwArgumentError("apiKey not supported for cloudflare", "apiKey", e), null
            }
            static getUrl(e, t) {
                let r = null;
                return "homestead" === e.name ? r = "https://cloudflare-eth.com/" : l.throwArgumentError("unsupported network", "network", arguments[0]), r
            }
            perform(e, t) {
                var r, n, s, a;
                let i = Object.create(null, {
                    perform: {
                        get: () => super.perform
                    }
                });
                return r = this, n = void 0, s = void 0, a = function*() {
                    return "getBlockNumber" === e ? (yield i.perform.call(this, "getBlock", {
                        blockTag: "latest"
                    })).number : i.perform.call(this, e, t)
                }, new(s || (s = Promise))(function(e, t) {
                    function i(e) {
                        try {
                            l(a.next(e))
                        } catch (e) {
                            t(e)
                        }
                    }

                    function o(e) {
                        try {
                            l(a.throw(e))
                        } catch (e) {
                            t(e)
                        }
                    }

                    function l(t) {
                        var r;
                        t.done ? e(t.value) : ((r = t.value) instanceof s ? r : new s(function(e) {
                            e(r)
                        })).then(i, o)
                    }
                    l((a = a.apply(r, n || [])).next())
                })
            }
        }
    }, {
        "./url-json-rpc-provider": "bwHu3",
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    fduCf: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "EtherscanProvider", () => v);
        "use strict";
        var a = e("@ethersproject/bytes"),
            i = e("@ethersproject/properties"),
            o = e("@ethersproject/transactions"),
            l = e("@ethersproject/web"),
            c = e("./formatter"),
            d = e("@ethersproject/logger"),
            u = e("./_version"),
            f = e("./base-provider"),
            h = function(e, t, r, n) {
                return new(r || (r = Promise))(function(s, a) {
                    function i(e) {
                        try {
                            l(n.next(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function o(e) {
                        try {
                            l(n.throw(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? s(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(i, o)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        let p = new(0, d.Logger)(u.version);

        function g(e) {
            let t = {};
            for (let r in e) {
                if (null == e[r]) continue;
                let n = e[r];
                ("type" !== r || 0 !== n) && (n = ({
                    type: !0,
                    gasLimit: !0,
                    gasPrice: !0,
                    maxFeePerGs: !0,
                    maxPriorityFeePerGas: !0,
                    nonce: !0,
                    value: !0
                })[r] ? (0, a.hexValue)((0, a.hexlify)(n)) : "accessList" === r ? "[" + (0, o.accessListify)(n).map(e => `{address:"${e.address}",storageKeys:["${e.storageKeys.join('","')}"]}`).join(",") + "]" : (0, a.hexlify)(n), t[r] = n)
            }
            return t
        }

        function m(e) {
            if (0 == e.status && ("No records found" === e.message || "No transactions found" === e.message)) return e.result;
            if (1 != e.status || "string" != typeof e.message || !e.message.match(/^OK/)) {
                let t = Error("invalid response");
                throw t.result = JSON.stringify(e), (e.result || "").toLowerCase().indexOf("rate limit") >= 0 && (t.throttleRetry = !0), t
            }
            return e.result
        }

        function y(e) {
            if (e && 0 == e.status && "NOTOK" == e.message && (e.result || "").toLowerCase().indexOf("rate limit") >= 0) {
                let t = Error("throttled response");
                throw t.result = JSON.stringify(e), t.throttleRetry = !0, t
            }
            if ("2.0" != e.jsonrpc) {
                let t = Error("invalid response");
                throw t.result = JSON.stringify(e), t
            }
            if (e.error) {
                let t = Error(e.error.message || "unknown error");
                throw e.error.code && (t.code = e.error.code), e.error.data && (t.data = e.error.data), t
            }
            return e.result
        }

        function b(e) {
            if ("pending" === e) throw Error("pending not supported");
            return "latest" === e ? e : parseInt(e.substring(2), 16)
        }

        function x(e, t, r) {
            if ("call" === e && t.code === d.Logger.errors.SERVER_ERROR) {
                let e = t.error;
                if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {
                    let r = e.data;
                    if (r && (r = "0x" + r.replace(/^.*0x/i, "")), (0, a.isHexString)(r)) return r;
                    p.throwError("missing revert data in call exception", d.Logger.errors.CALL_EXCEPTION, {
                        error: t,
                        data: "0x"
                    })
                }
            }
            let n = t.message;
            throw t.code === d.Logger.errors.SERVER_ERROR && (t.error && "string" == typeof t.error.message ? n = t.error.message : "string" == typeof t.body ? n = t.body : "string" == typeof t.responseText && (n = t.responseText)), (n = (n || "").toLowerCase()).match(/insufficient funds/) && p.throwError("insufficient funds for intrinsic transaction cost", d.Logger.errors.INSUFFICIENT_FUNDS, {
                error: t,
                method: e,
                transaction: r
            }), n.match(/same hash was already imported|transaction nonce is too low|nonce too low/) && p.throwError("nonce has already been used", d.Logger.errors.NONCE_EXPIRED, {
                error: t,
                method: e,
                transaction: r
            }), n.match(/another transaction with same nonce/) && p.throwError("replacement fee too low", d.Logger.errors.REPLACEMENT_UNDERPRICED, {
                error: t,
                method: e,
                transaction: r
            }), n.match(/execution failed due to an exception|execution reverted/) && p.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", d.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                error: t,
                method: e,
                transaction: r
            }), t
        }
        class v extends f.BaseProvider {
            constructor(e, t) {
                super(e), (0, i.defineReadOnly)(this, "baseUrl", this.getBaseUrl()), (0, i.defineReadOnly)(this, "apiKey", t || null)
            }
            getBaseUrl() {
                switch (this.network ? this.network.name : "invalid") {
                    case "homestead":
                        return "https://api.etherscan.io";
                    case "goerli":
                        return "https://api-goerli.etherscan.io";
                    case "sepolia":
                        return "https://api-sepolia.etherscan.io";
                    case "matic":
                        return "https://api.polygonscan.com";
                    case "maticmum":
                        return "https://api-testnet.polygonscan.com";
                    case "arbitrum":
                        return "https://api.arbiscan.io";
                    case "arbitrum-goerli":
                        return "https://api-goerli.arbiscan.io";
                    case "optimism":
                        return "https://api-optimistic.etherscan.io";
                    case "optimism-goerli":
                        return "https://api-goerli-optimistic.etherscan.io"
                }
                return p.throwArgumentError("unsupported network", "network", this.network.name)
            }
            getUrl(e, t) {
                let r = Object.keys(t).reduce((e, r) => {
                        let n = t[r];
                        return null != n && (e += `&${r}=${n}`), e
                    }, ""),
                    n = this.apiKey ? `&apikey=${this.apiKey}` : "";
                return `${this.baseUrl}/api?module=${e}${r}${n}`
            }
            getPostUrl() {
                return `${this.baseUrl}/api`
            }
            getPostData(e, t) {
                return t.module = e, t.apikey = this.apiKey, t
            }
            fetch(e, t, r) {
                return h(this, void 0, void 0, function*() {
                    let n = r ? this.getPostUrl() : this.getUrl(e, t),
                        s = r ? this.getPostData(e, t) : null,
                        a = "proxy" === e ? y : m;
                    this.emit("debug", {
                        action: "request",
                        request: n,
                        provider: this
                    });
                    let o = {
                            url: n,
                            throttleSlotInterval: 1e3,
                            throttleCallback: (e, t) => (this.isCommunityResource() && (0, c.showThrottleMessage)(), Promise.resolve(!0))
                        },
                        d = null;
                    s && (o.headers = {
                        "content-type": "application/x-www-form-urlencoded; charset=UTF-8"
                    }, d = Object.keys(s).map(e => `${e}=${s[e]}`).join("&"));
                    let u = yield(0, l.fetchJson)(o, d, a || y);
                    return this.emit("debug", {
                        action: "response",
                        request: n,
                        response: (0, i.deepCopy)(u),
                        provider: this
                    }), u
                })
            }
            detectNetwork() {
                return h(this, void 0, void 0, function*() {
                    return this.network
                })
            }
            perform(e, t) {
                let r = Object.create(null, {
                    perform: {
                        get: () => super.perform
                    }
                });
                return h(this, void 0, void 0, function*() {
                    switch (e) {
                        case "getBlockNumber":
                            return this.fetch("proxy", {
                                action: "eth_blockNumber"
                            });
                        case "getGasPrice":
                            return this.fetch("proxy", {
                                action: "eth_gasPrice"
                            });
                        case "getBalance":
                            return this.fetch("account", {
                                action: "balance",
                                address: t.address,
                                tag: t.blockTag
                            });
                        case "getTransactionCount":
                            return this.fetch("proxy", {
                                action: "eth_getTransactionCount",
                                address: t.address,
                                tag: t.blockTag
                            });
                        case "getCode":
                            return this.fetch("proxy", {
                                action: "eth_getCode",
                                address: t.address,
                                tag: t.blockTag
                            });
                        case "getStorageAt":
                            return this.fetch("proxy", {
                                action: "eth_getStorageAt",
                                address: t.address,
                                position: t.position,
                                tag: t.blockTag
                            });
                        case "sendTransaction":
                            return this.fetch("proxy", {
                                action: "eth_sendRawTransaction",
                                hex: t.signedTransaction
                            }, !0).catch(e => x("sendTransaction", e, t.signedTransaction));
                        case "getBlock":
                            if (t.blockTag) return this.fetch("proxy", {
                                action: "eth_getBlockByNumber",
                                tag: t.blockTag,
                                boolean: t.includeTransactions ? "true" : "false"
                            });
                            throw Error("getBlock by blockHash not implemented");
                        case "getTransaction":
                            return this.fetch("proxy", {
                                action: "eth_getTransactionByHash",
                                txhash: t.transactionHash
                            });
                        case "getTransactionReceipt":
                            return this.fetch("proxy", {
                                action: "eth_getTransactionReceipt",
                                txhash: t.transactionHash
                            });
                        case "call": {
                            if ("latest" !== t.blockTag) throw Error("EtherscanProvider does not support blockTag for call");
                            let e = g(t.transaction);
                            e.module = "proxy", e.action = "eth_call";
                            try {
                                return yield this.fetch("proxy", e, !0)
                            } catch (e) {
                                return x("call", e, t.transaction)
                            }
                        }
                        case "estimateGas": {
                            let e = g(t.transaction);
                            e.module = "proxy", e.action = "eth_estimateGas";
                            try {
                                return yield this.fetch("proxy", e, !0)
                            } catch (e) {
                                return x("estimateGas", e, t.transaction)
                            }
                        }
                        case "getLogs": {
                            let e = {
                                action: "getLogs"
                            };
                            if (t.filter.fromBlock && (e.fromBlock = b(t.filter.fromBlock)), t.filter.toBlock && (e.toBlock = b(t.filter.toBlock)), t.filter.address && (e.address = t.filter.address), t.filter.topics && t.filter.topics.length > 0 && (t.filter.topics.length > 1 && p.throwError("unsupported topic count", d.Logger.errors.UNSUPPORTED_OPERATION, {
                                    topics: t.filter.topics
                                }), 1 === t.filter.topics.length)) {
                                let r = t.filter.topics[0];
                                ("string" != typeof r || 66 !== r.length) && p.throwError("unsupported topic format", d.Logger.errors.UNSUPPORTED_OPERATION, {
                                    topic0: r
                                }), e.topic0 = r
                            }
                            let r = yield this.fetch("logs", e), n = {};
                            for (let e = 0; e < r.length; e++) {
                                let t = r[e];
                                if (null == t.blockHash) {
                                    if (null == n[t.blockNumber]) {
                                        let e = yield this.getBlock(t.blockNumber);
                                        e && (n[t.blockNumber] = e.hash)
                                    }
                                    t.blockHash = n[t.blockNumber]
                                }
                            }
                            return r
                        }
                        case "getEtherPrice":
                            if ("homestead" !== this.network.name) return 0;
                            return parseFloat((yield this.fetch("stats", {
                                action: "ethprice"
                            })).ethusd)
                    }
                    return r.perform.call(this, e, t)
                })
            }
            getHistory(e, t, r) {
                return h(this, void 0, void 0, function*() {
                    let n = {
                        action: "txlist",
                        address: yield this.resolveName(e),
                        startblock: null == t ? 0 : t,
                        endblock: null == r ? 0x5f5e0ff : r,
                        sort: "asc"
                    };
                    return (yield this.fetch("account", n)).map(e => {
                        ["contractAddress", "to"].forEach(function(t) {
                            "" == e[t] && delete e[t]
                        }), null == e.creates && null != e.contractAddress && (e.creates = e.contractAddress);
                        let t = this.formatter.transactionResponse(e);
                        return e.timeStamp && (t.timestamp = parseInt(e.timeStamp)), t
                    })
                })
            }
            isCommunityResource() {
                return null == this.apiKey
            }
        }
    }, {
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/transactions": "ctBdV",
        "@ethersproject/web": "5uH8k",
        "./formatter": "7RPp2",
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "./base-provider": "lEHz5",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    LdkdG: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "FallbackProvider", () => R);
        "use strict";
        var a = e("@ethersproject/abstract-provider"),
            i = e("@ethersproject/bignumber"),
            o = e("@ethersproject/bytes"),
            l = e("@ethersproject/properties"),
            c = e("@ethersproject/random"),
            d = e("@ethersproject/web"),
            u = e("./base-provider"),
            f = e("./formatter"),
            h = e("@ethersproject/logger"),
            p = e("./_version"),
            g = function(e, t, r, n) {
                return new(r || (r = Promise))(function(s, a) {
                    function i(e) {
                        try {
                            l(n.next(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function o(e) {
                        try {
                            l(n.throw(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? s(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(i, o)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        let m = new(0, h.Logger)(p.version);

        function y() {
            return new Date().getTime()
        }

        function b(e) {
            let t = null;
            for (let r = 0; r < e.length; r++) {
                let n = e[r];
                if (null == n) return null;
                t ? (t.name !== n.name || t.chainId !== n.chainId || t.ensAddress !== n.ensAddress && (null != t.ensAddress || null != n.ensAddress)) && m.throwArgumentError("provider mismatch", "networks", e) : t = n
            }
            return t
        }

        function x(e, t) {
            let r = Math.floor((e = e.slice().sort()).length / 2);
            if (e.length % 2) return e[r];
            let n = e[r - 1],
                s = e[r];
            return null != t && Math.abs(n - s) > t ? null : (n + s) / 2
        }

        function v(e) {
            if (null === e) return "null";
            if ("number" == typeof e || "boolean" == typeof e) return JSON.stringify(e);
            if ("string" == typeof e) return e;
            if (i.BigNumber.isBigNumber(e)) return e.toString();
            if (Array.isArray(e)) return JSON.stringify(e.map(e => v(e)));
            else if ("object" == typeof e) {
                let t = Object.keys(e);
                return t.sort(), "{" + t.map(t => {
                    let r = e[t];
                    return r = "function" == typeof r ? "[function]" : v(r), JSON.stringify(t) + ":" + r
                }).join(",") + "}"
            }
            throw Error("unknown value type: " + typeof e)
        }
        let w = 1;

        function E(e) {
            let t = null,
                r = null,
                n = new Promise(n => {
                    r = setTimeout(t = function() {
                        r && (clearTimeout(r), r = null), n()
                    }, e)
                });
            return {
                cancel: t,
                getPromise: function() {
                    return n
                },
                wait: e => n = n.then(e)
            }
        }
        let A = [h.Logger.errors.CALL_EXCEPTION, h.Logger.errors.INSUFFICIENT_FUNDS, h.Logger.errors.NONCE_EXPIRED, h.Logger.errors.REPLACEMENT_UNDERPRICED, h.Logger.errors.UNPREDICTABLE_GAS_LIMIT],
            j = ["address", "args", "errorArgs", "errorSignature", "method", "transaction"];

        function I(e, t) {
            let r = {
                weight: e.weight
            };
            return Object.defineProperty(r, "provider", {
                get: () => e.provider
            }), e.start && (r.start = e.start), t && (r.duration = t - e.start), e.done && (e.error ? r.error = e.error : r.result = e.result || null), r
        }

        function S(e, t) {
            return g(this, void 0, void 0, function*() {
                let r = e.provider;
                return null != r.blockNumber && r.blockNumber >= t || -1 === t ? r : (0, d.poll)(() => new Promise((n, s) => {
                    setTimeout(function() {
                        return r.blockNumber >= t ? n(r) : e.cancelled ? n(null) : n(void 0)
                    }, 0)
                }), {
                    oncePoll: r
                })
            })
        }
        class R extends u.BaseProvider {
            constructor(e, t) {
                0 === e.length && m.throwArgumentError("missing providers", "providers", e);
                let r = e.map((e, t) => {
                        if (a.Provider.isProvider(e)) {
                            let t = (0, f.isCommunityResource)(e) ? 2e3 : 750;
                            return Object.freeze({
                                provider: e,
                                weight: 1,
                                stallTimeout: t,
                                priority: 1
                            })
                        }
                        let r = (0, l.shallowCopy)(e);
                        null == r.priority && (r.priority = 1), null == r.stallTimeout && (r.stallTimeout = (0, f.isCommunityResource)(e) ? 2e3 : 750), null == r.weight && (r.weight = 1);
                        let n = r.weight;
                        return (n % 1 || n > 512 || n < 1) && m.throwArgumentError("invalid weight; must be integer in [1, 512]", `providers[${t}].weight`, n), Object.freeze(r)
                    }),
                    n = r.reduce((e, t) => e + t.weight, 0);
                null == t ? t = n / 2 : t > n && m.throwArgumentError("quorum will always fail; larger than total weight", "quorum", t);
                let s = b(r.map(e => e.provider.network));
                null == s && (s = new Promise((e, t) => {
                    setTimeout(() => {
                        this.detectNetwork().then(e, t)
                    }, 0)
                })), super(s), (0, l.defineReadOnly)(this, "providerConfigs", Object.freeze(r)), (0, l.defineReadOnly)(this, "quorum", t), this._highestBlockNumber = -1
            }
            detectNetwork() {
                return g(this, void 0, void 0, function*() {
                    return b((yield Promise.all(this.providerConfigs.map(e => e.provider.getNetwork()))))
                })
            }
            perform(e, t) {
                return g(this, void 0, void 0, function*() {
                    if ("sendTransaction" === e) {
                        let e = yield Promise.all(this.providerConfigs.map(e => e.provider.sendTransaction(t.signedTransaction).then(e => e.hash, e => e)));
                        for (let t = 0; t < e.length; t++) {
                            let r = e[t];
                            if ("string" == typeof r) return r
                        }
                        throw e[0]
                    } - 1 === this._highestBlockNumber && "getBlockNumber" !== e && (yield this.getBlockNumber());
                    let r = function(e, t, r) {
                            var n, s;
                            let a = v;
                            switch (t) {
                                case "getBlockNumber":
                                    return function(t) {
                                        let r = t.map(e => e.result),
                                            n = x(t.map(e => e.result), 2);
                                        if (null != n) return n = Math.ceil(n), r.indexOf(n + 1) >= 0 && n++, n >= e._highestBlockNumber && (e._highestBlockNumber = n), e._highestBlockNumber
                                    };
                                case "getGasPrice":
                                    return function(e) {
                                        let t = e.map(e => e.result);
                                        return t.sort(), t[Math.floor(t.length / 2)]
                                    };
                                case "getEtherPrice":
                                    return function(e) {
                                        return x(e.map(e => e.result))
                                    };
                                case "getBalance":
                                case "getTransactionCount":
                                case "getCode":
                                case "getStorageAt":
                                case "call":
                                case "estimateGas":
                                case "getLogs":
                                    break;
                                case "getTransaction":
                                case "getTransactionReceipt":
                                    a = function(e) {
                                        return null == e ? null : ((e = (0, l.shallowCopy)(e)).confirmations = -1, v(e))
                                    };
                                    break;
                                case "getBlock":
                                    a = r.includeTransactions ? function(e) {
                                        return null == e ? null : ((e = (0, l.shallowCopy)(e)).transactions = e.transactions.map(e => ((e = (0, l.shallowCopy)(e)).confirmations = -1, e)), v(e))
                                    } : function(e) {
                                        return null == e ? null : v(e)
                                    };
                                    break;
                                default:
                                    throw Error("unknown method: " + t)
                            }
                            return n = a, s = e.quorum,
                                function(e) {
                                    let t = {};
                                    e.forEach(e => {
                                        let r = n(e.result);
                                        t[r] || (t[r] = {
                                            count: 0,
                                            result: e.result
                                        }), t[r].count++
                                    });
                                    let r = Object.keys(t);
                                    for (let e = 0; e < r.length; e++) {
                                        let n = t[r[e]];
                                        if (n.count >= s) return n.result
                                    }
                                }
                        }(this, e, t),
                        n = (0, c.shuffled)(this.providerConfigs.map(l.shallowCopy));
                    n.sort((e, t) => e.priority - t.priority);
                    let s = this._highestBlockNumber,
                        a = 0,
                        i = !0;
                    for (;;) {
                        let c = y(),
                            d = n.filter(e => e.runner && c - e.start < e.stallTimeout).reduce((e, t) => e + t.weight, 0);
                        for (; d < this.quorum && a < n.length;) {
                            let r = n[a++],
                                i = w++;
                            r.start = y(), r.staller = E(r.stallTimeout), r.staller.wait(() => {
                                r.staller = null
                            }), r.runner = (function(e, t, r, n) {
                                return g(this, void 0, void 0, function*() {
                                    let s = e.provider;
                                    switch (r) {
                                        case "getBlockNumber":
                                        case "getGasPrice":
                                            return s[r]();
                                        case "getEtherPrice":
                                            if (s.getEtherPrice) return s.getEtherPrice();
                                            break;
                                        case "getBalance":
                                        case "getTransactionCount":
                                        case "getCode":
                                            return n.blockTag && (0, o.isHexString)(n.blockTag) && (s = yield S(e, t)), s[r](n.address, n.blockTag || "latest");
                                        case "getStorageAt":
                                            return n.blockTag && (0, o.isHexString)(n.blockTag) && (s = yield S(e, t)), s.getStorageAt(n.address, n.position, n.blockTag || "latest");
                                        case "getBlock":
                                            return n.blockTag && (0, o.isHexString)(n.blockTag) && (s = yield S(e, t)), s[n.includeTransactions ? "getBlockWithTransactions" : "getBlock"](n.blockTag || n.blockHash);
                                        case "call":
                                        case "estimateGas":
                                            if (n.blockTag && (0, o.isHexString)(n.blockTag) && (s = yield S(e, t)), "call" === r && n.blockTag) return s[r](n.transaction, n.blockTag);
                                            return s[r](n.transaction);
                                        case "getTransaction":
                                        case "getTransactionReceipt":
                                            return s[r](n.transactionHash);
                                        case "getLogs": {
                                            let r = n.filter;
                                            return (r.fromBlock && (0, o.isHexString)(r.fromBlock) || r.toBlock && (0, o.isHexString)(r.toBlock)) && (s = yield S(e, t)), s.getLogs(r)
                                        }
                                    }
                                    return m.throwError("unknown method error", h.Logger.errors.UNKNOWN_ERROR, {
                                        method: r,
                                        params: n
                                    })
                                })
                            })(r, s, e, t).then(n => {
                                r.done = !0, r.result = n, this.listenerCount("debug") && this.emit("debug", {
                                    action: "request",
                                    rid: i,
                                    backend: I(r, y()),
                                    request: {
                                        method: e,
                                        params: (0, l.deepCopy)(t)
                                    },
                                    provider: this
                                })
                            }, n => {
                                r.done = !0, r.error = n, this.listenerCount("debug") && this.emit("debug", {
                                    action: "request",
                                    rid: i,
                                    backend: I(r, y()),
                                    request: {
                                        method: e,
                                        params: (0, l.deepCopy)(t)
                                    },
                                    provider: this
                                })
                            }), this.listenerCount("debug") && this.emit("debug", {
                                action: "request",
                                rid: i,
                                backend: I(r, null),
                                request: {
                                    method: e,
                                    params: (0, l.deepCopy)(t)
                                },
                                provider: this
                            }), d += r.weight
                        }
                        let u = [];
                        n.forEach(e => {
                            !e.done && e.runner && (u.push(e.runner), e.staller && u.push(e.staller.getPromise()))
                        }), u.length && (yield Promise.race(u));
                        let f = n.filter(e => e.done && null == e.error);
                        if (f.length >= this.quorum) {
                            let e = r(f);
                            if (void 0 !== e) return n.forEach(e => {
                                e.staller && e.staller.cancel(), e.cancelled = !0
                            }), e;
                            i || (yield E(100).getPromise()), i = !1
                        }
                        let p = n.reduce((e, t) => {
                            if (!t.done || null == t.error) return e;
                            let r = t.error.code;
                            return A.indexOf(r) >= 0 && (e[r] || (e[r] = {
                                error: t.error,
                                weight: 0
                            }), e[r].weight += t.weight), e
                        }, {});
                        if (Object.keys(p).forEach(e => {
                                let t = p[e];
                                if (t.weight < this.quorum) return;
                                n.forEach(e => {
                                    e.staller && e.staller.cancel(), e.cancelled = !0
                                });
                                let r = t.error,
                                    s = {};
                                j.forEach(e => {
                                    null != r[e] && (s[e] = r[e])
                                }), m.throwError(r.reason || r.message, e, s)
                            }), 0 === n.filter(e => !e.done).length) break
                    }
                    return n.forEach(e => {
                        e.staller && e.staller.cancel(), e.cancelled = !0
                    }), m.throwError("failed to meet quorum", h.Logger.errors.SERVER_ERROR, {
                        method: e,
                        params: t,
                        results: n.map(e => I(e)),
                        provider: this
                    })
                })
            }
        }
    }, {
        "@ethersproject/abstract-provider": "imf57",
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/random": "5x4el",
        "@ethersproject/web": "5uH8k",
        "./base-provider": "lEHz5",
        "./formatter": "7RPp2",
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "5x4el": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "randomBytes", () => a.randomBytes), s.export(r, "shuffled", () => i.shuffled);
        "use strict";
        var a = e("./random"),
            i = e("./shuffle")
    }, {
        "./random": "7eRII",
        "./shuffle": "9bV5K",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "7eRII": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "randomBytes", () => f);
        "use strict";
        var a = e("@ethersproject/bytes"),
            i = e("@ethersproject/logger"),
            o = e("./_version"),
            l = arguments[3];
        let c = new(0, i.Logger)(o.version),
            d = function() {
                if ("undefined" != typeof self) return self;
                if ("undefined" != typeof window) return window;
                if (void 0 !== l) return l;
                throw Error("unable to locate global object")
            }(),
            u = d.crypto || d.msCrypto;

        function f(e) {
            (e <= 0 || e > 1024 || e % 1 || e != e) && c.throwArgumentError("invalid length", "length", e);
            let t = new Uint8Array(e);
            return u.getRandomValues(t), (0, a.arrayify)(t)
        }
        u && u.getRandomValues || (c.warn("WARNING: Missing strong random number source"), u = {
            getRandomValues: function(e) {
                return c.throwError("no secure random source avaialble", i.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "crypto.getRandomValues"
                })
            }
        })
    }, {
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/logger": "6NWvR",
        "./_version": "4vVYi",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "4vVYi": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "random/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "9bV5K": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        "use strict";

        function a(e) {
            e = e.slice();
            for (let t = e.length - 1; t > 0; t--) {
                let r = Math.floor(Math.random() * (t + 1)),
                    n = e[t];
                e[t] = e[r], e[r] = n
            }
            return e
        }
        s.defineInteropFlag(r), s.export(r, "shuffled", () => a)
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "8DeRN": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        "use strict";
        s.defineInteropFlag(r), s.export(r, "IpcProvider", () => a);
        let a = null
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "8Bo5e": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "InfuraWebSocketProvider", () => h), s.export(r, "InfuraProvider", () => p);
        "use strict";
        var a = e("@ethersproject/properties"),
            i = e("./websocket-provider"),
            o = e("./formatter"),
            l = e("@ethersproject/logger"),
            c = e("./_version"),
            d = e("./url-json-rpc-provider");
        let u = new(0, l.Logger)(c.version),
            f = "84842078b09946638c03157f83405213";
        class h extends i.WebSocketProvider {
            constructor(e, t) {
                let r = new p(e, t),
                    n = r.connection;
                n.password && u.throwError("INFURA WebSocket project secrets unsupported", l.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "InfuraProvider.getWebSocketProvider()"
                }), super(n.url.replace(/^http/i, "ws").replace("/v3/", "/ws/v3/"), e), (0, a.defineReadOnly)(this, "apiKey", r.projectId), (0, a.defineReadOnly)(this, "projectId", r.projectId), (0, a.defineReadOnly)(this, "projectSecret", r.projectSecret)
            }
            isCommunityResource() {
                return this.projectId === f
            }
        }
        class p extends d.UrlJsonRpcProvider {
            static getWebSocketProvider(e, t) {
                return new h(e, t)
            }
            static getApiKey(e) {
                let t = {
                    apiKey: f,
                    projectId: f,
                    projectSecret: null
                };
                return null == e || ("string" == typeof e ? t.projectId = e : null != e.projectSecret ? (u.assertArgument("string" == typeof e.projectId, "projectSecret requires a projectId", "projectId", e.projectId), u.assertArgument("string" == typeof e.projectSecret, "invalid projectSecret", "projectSecret", "[REDACTED]"), t.projectId = e.projectId, t.projectSecret = e.projectSecret) : e.projectId && (t.projectId = e.projectId), t.apiKey = t.projectId), t
            }
            static getUrl(e, t) {
                let r = null;
                switch (e ? e.name : "unknown") {
                    case "homestead":
                        r = "mainnet.infura.io";
                        break;
                    case "goerli":
                        r = "goerli.infura.io";
                        break;
                    case "sepolia":
                        r = "sepolia.infura.io";
                        break;
                    case "matic":
                        r = "polygon-mainnet.infura.io";
                        break;
                    case "maticmum":
                        r = "polygon-mumbai.infura.io";
                        break;
                    case "optimism":
                        r = "optimism-mainnet.infura.io";
                        break;
                    case "optimism-goerli":
                        r = "optimism-goerli.infura.io";
                        break;
                    case "optimism-sepolia":
                        r = "optimism-sepolia.infura.io";
                        break;
                    case "arbitrum":
                        r = "arbitrum-mainnet.infura.io";
                        break;
                    case "arbitrum-goerli":
                        r = "arbitrum-goerli.infura.io";
                        break;
                    case "arbitrum-sepolia":
                        r = "arbitrum-sepolia.infura.io";
                        break;
                    default:
                        u.throwError("unsupported network", l.Logger.errors.INVALID_ARGUMENT, {
                            argument: "network",
                            value: e
                        })
                }
                let n = {
                    allowGzip: !0,
                    url: "https://" + r + "/v3/" + t.projectId,
                    throttleCallback: (e, r) => (t.projectId === f && (0, o.showThrottleMessage)(), Promise.resolve(!0))
                };
                return null != t.projectSecret && (n.user = "", n.password = t.projectSecret), n
            }
            isCommunityResource() {
                return this.projectId === f
            }
        }
    }, {
        "@ethersproject/properties": "dmdV5",
        "./websocket-provider": "83spj",
        "./formatter": "7RPp2",
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "./url-json-rpc-provider": "bwHu3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    aCNcD: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "JsonRpcBatchProvider", () => l);
        var a = e("@ethersproject/properties"),
            i = e("@ethersproject/web"),
            o = e("./json-rpc-provider");
        class l extends o.JsonRpcProvider {
            send(e, t) {
                let r = {
                    method: e,
                    params: t,
                    id: this._nextId++,
                    jsonrpc: "2.0"
                };
                null == this._pendingBatch && (this._pendingBatch = []);
                let n = {
                        request: r,
                        resolve: null,
                        reject: null
                    },
                    s = new Promise((e, t) => {
                        n.resolve = e, n.reject = t
                    });
                return this._pendingBatch.push(n), this._pendingBatchAggregator || (this._pendingBatchAggregator = setTimeout(() => {
                    let e = this._pendingBatch;
                    this._pendingBatch = null, this._pendingBatchAggregator = null;
                    let t = e.map(e => e.request);
                    return this.emit("debug", {
                        action: "requestBatch",
                        request: (0, a.deepCopy)(t),
                        provider: this
                    }), (0, i.fetchJson)(this.connection, JSON.stringify(t)).then(r => {
                        this.emit("debug", {
                            action: "response",
                            request: t,
                            response: r,
                            provider: this
                        }), e.forEach((e, t) => {
                            let n = r[t];
                            if (n.error) {
                                let t = Error(n.error.message);
                                t.code = n.error.code, t.data = n.error.data, e.reject(t)
                            } else e.resolve(n.result)
                        })
                    }, r => {
                        this.emit("debug", {
                            action: "response",
                            error: r,
                            request: t,
                            provider: this
                        }), e.forEach(e => {
                            e.reject(r)
                        })
                    })
                }, 10)), s
            }
        }
    }, {
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/web": "5uH8k",
        "./json-rpc-provider": "7x7oZ",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "19g4w": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "NodesmithProvider", () => c);
        "use strict";
        var a = e("./url-json-rpc-provider"),
            i = e("@ethersproject/logger"),
            o = e("./_version");
        let l = new(0, i.Logger)(o.version);
        class c extends a.UrlJsonRpcProvider {
            static getApiKey(e) {
                return e && "string" != typeof e && l.throwArgumentError("invalid apiKey", "apiKey", e), e || "ETHERS_JS_SHARED"
            }
            static getUrl(e, t) {
                l.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");
                let r = null;
                switch (e.name) {
                    case "homestead":
                        r = "https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";
                        break;
                    case "ropsten":
                        r = "https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";
                        break;
                    case "rinkeby":
                        r = "https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";
                        break;
                    case "goerli":
                        r = "https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";
                        break;
                    case "kovan":
                        r = "https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";
                        break;
                    default:
                        l.throwArgumentError("unsupported network", "network", arguments[0])
                }
                return r + "?apiKey=" + t
            }
        }
    }, {
        "./url-json-rpc-provider": "bwHu3",
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    dwl0t: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "PocketProvider", () => d);
        "use strict";
        var a = e("@ethersproject/logger"),
            i = e("./_version"),
            o = e("./url-json-rpc-provider");
        let l = new(0, a.Logger)(i.version),
            c = "62e1ad51b37b8e00394bda3b";
        class d extends o.UrlJsonRpcProvider {
            static getApiKey(e) {
                let t = {
                    applicationId: null,
                    loadBalancer: !0,
                    applicationSecretKey: null
                };
                return null == e ? t.applicationId = c : "string" == typeof e ? t.applicationId = e : null != e.applicationSecretKey ? (t.applicationId = e.applicationId, t.applicationSecretKey = e.applicationSecretKey) : e.applicationId ? t.applicationId = e.applicationId : l.throwArgumentError("unsupported PocketProvider apiKey", "apiKey", e), t
            }
            static getUrl(e, t) {
                let r = null;
                switch (e ? e.name : "unknown") {
                    case "goerli":
                        r = "eth-goerli.gateway.pokt.network";
                        break;
                    case "homestead":
                        r = "eth-mainnet.gateway.pokt.network";
                        break;
                    case "kovan":
                        r = "poa-kovan.gateway.pokt.network";
                        break;
                    case "matic":
                        r = "poly-mainnet.gateway.pokt.network";
                        break;
                    case "maticmum":
                        r = "polygon-mumbai-rpc.gateway.pokt.network";
                        break;
                    case "rinkeby":
                        r = "eth-rinkeby.gateway.pokt.network";
                        break;
                    case "ropsten":
                        r = "eth-ropsten.gateway.pokt.network";
                        break;
                    default:
                        l.throwError("unsupported network", a.Logger.errors.INVALID_ARGUMENT, {
                            argument: "network",
                            value: e
                        })
                }
                let n = {
                    headers: {},
                    url: `https://${r}/v1/lb/${t.applicationId}`
                };
                return null != t.applicationSecretKey && (n.user = "", n.password = t.applicationSecretKey), n
            }
            isCommunityResource() {
                return this.applicationId === c
            }
        }
    }, {
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "./url-json-rpc-provider": "bwHu3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    idefM: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "QuickNodeProvider", () => c);
        "use strict";
        var a = e("./url-json-rpc-provider"),
            i = e("@ethersproject/logger"),
            o = e("./_version");
        let l = new(0, i.Logger)(o.version);
        class c extends a.UrlJsonRpcProvider {
            static getApiKey(e) {
                return e && "string" != typeof e && l.throwArgumentError("invalid apiKey", "apiKey", e), e || "919b412a057b5e9c9b6dce193c5a60242d6efadb"
            }
            static getUrl(e, t) {
                let r = null;
                switch (e.name) {
                    case "homestead":
                        r = "ethers.quiknode.pro";
                        break;
                    case "goerli":
                        r = "ethers.ethereum-goerli.quiknode.pro";
                        break;
                    case "sepolia":
                        r = "ethers.ethereum-sepolia.quiknode.pro";
                        break;
                    case "holesky":
                        r = "ethers.ethereum-holesky.quiknode.pro";
                        break;
                    case "arbitrum":
                        r = "ethers.arbitrum-mainnet.quiknode.pro";
                        break;
                    case "arbitrum-goerli":
                        r = "ethers.arbitrum-goerli.quiknode.pro";
                        break;
                    case "arbitrum-sepolia":
                        r = "ethers.arbitrum-sepolia.quiknode.pro";
                        break;
                    case "base":
                        r = "ethers.base-mainnet.quiknode.pro";
                        break;
                    case "base-goerli":
                        r = "ethers.base-goerli.quiknode.pro";
                        break;
                    case "base-spolia":
                        r = "ethers.base-sepolia.quiknode.pro";
                        break;
                    case "bnb":
                        r = "ethers.bsc.quiknode.pro";
                        break;
                    case "bnbt":
                        r = "ethers.bsc-testnet.quiknode.pro";
                        break;
                    case "matic":
                        r = "ethers.matic.quiknode.pro";
                        break;
                    case "maticmum":
                        r = "ethers.matic-testnet.quiknode.pro";
                        break;
                    case "optimism":
                        r = "ethers.optimism.quiknode.pro";
                        break;
                    case "optimism-goerli":
                        r = "ethers.optimism-goerli.quiknode.pro";
                        break;
                    case "optimism-sepolia":
                        r = "ethers.optimism-sepolia.quiknode.pro";
                        break;
                    case "xdai":
                        r = "ethers.xdai.quiknode.pro";
                        break;
                    default:
                        l.throwArgumentError("unsupported network", "network", arguments[0])
                }
                return "https://" + r + "/" + t
            }
        }
    }, {
        "./url-json-rpc-provider": "bwHu3",
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "2aAfb": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "Web3Provider", () => f);
        "use strict";
        var a = e("@ethersproject/properties"),
            i = e("@ethersproject/logger"),
            o = e("./_version"),
            l = e("./json-rpc-provider");
        let c = new(0, i.Logger)(o.version),
            d = 1;

        function u(e, t) {
            let r = "Web3LegacyFetcher";
            return function(e, n) {
                let s = {
                    method: e,
                    params: n,
                    id: d++,
                    jsonrpc: "2.0"
                };
                return new Promise((e, n) => {
                    this.emit("debug", {
                        action: "request",
                        fetcher: r,
                        request: (0, a.deepCopy)(s),
                        provider: this
                    }), t(s, (t, a) => {
                        if (t) return this.emit("debug", {
                            action: "response",
                            fetcher: r,
                            error: t,
                            request: s,
                            provider: this
                        }), n(t);
                        if (this.emit("debug", {
                                action: "response",
                                fetcher: r,
                                request: s,
                                response: a,
                                provider: this
                            }), a.error) {
                            let e = Error(a.error.message);
                            return e.code = a.error.code, e.data = a.error.data, n(e)
                        }
                        e(a.result)
                    })
                })
            }
        }
        class f extends l.JsonRpcProvider {
            constructor(e, t) {
                null == e && c.throwArgumentError("missing provider", "provider", e);
                let r = null,
                    n = null,
                    s = null;
                if ("function" == typeof e) r = "unknown:", n = e;
                else {
                    if ((r = e.host || e.path || "") || !e.isMetaMask || (r = "metamask"), s = e, e.request) "" === r && (r = "eip-1193:"), n = function(t, r) {
                        null == r && (r = []);
                        let n = {
                            method: t,
                            params: r
                        };
                        return this.emit("debug", {
                            action: "request",
                            fetcher: "Eip1193Fetcher",
                            request: (0, a.deepCopy)(n),
                            provider: this
                        }), e.request(n).then(e => (this.emit("debug", {
                            action: "response",
                            fetcher: "Eip1193Fetcher",
                            request: n,
                            response: e,
                            provider: this
                        }), e), e => {
                            throw this.emit("debug", {
                                action: "response",
                                fetcher: "Eip1193Fetcher",
                                request: n,
                                error: e,
                                provider: this
                            }), e
                        })
                    };
                    else e.sendAsync ? n = u(e, e.sendAsync.bind(e)) : e.send ? n = u(e, e.send.bind(e)) : c.throwArgumentError("unsupported provider", "provider", e);
                    r || (r = "unknown:")
                }
                super(r, t), (0, a.defineReadOnly)(this, "jsonRpcFetchFunc", n), (0, a.defineReadOnly)(this, "provider", s)
            }
            send(e, t) {
                return this.jsonRpcFetchFunc(e, t)
            }
        }
    }, {
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/logger": "6NWvR",
        "./_version": "1LO7N",
        "./json-rpc-provider": "7x7oZ",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "8wpcu": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "Signer", () => a.Signer), s.export(r, "Wallet", () => a.Wallet), s.export(r, "VoidSigner", () => a.VoidSigner), s.export(r, "getDefaultProvider", () => a.getDefaultProvider), s.export(r, "providers", () => a.providers), s.export(r, "BaseContract", () => a.BaseContract), s.export(r, "Contract", () => a.Contract), s.export(r, "ContractFactory", () => a.ContractFactory), s.export(r, "BigNumber", () => a.BigNumber), s.export(r, "FixedNumber", () => a.FixedNumber), s.export(r, "constants", () => a.constants), s.export(r, "errors", () => a.errors), s.export(r, "logger", () => a.logger), s.export(r, "utils", () => a.utils), s.export(r, "wordlists", () => a.wordlists), s.export(r, "version", () => a.version), s.export(r, "Wordlist", () => a.Wordlist), s.export(r, "ethers", () => a);
        var a = e("./ethers");
        "use strict";
        try {
            let e = window;
            null == e._ethers && (e._ethers = a)
        } catch (e) {}
    }, {
        "./ethers": "gFgxE",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    gFgxE: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "Signer", () => o.Signer), s.export(r, "Wallet", () => l.Wallet), s.export(r, "VoidSigner", () => o.VoidSigner), s.export(r, "getDefaultProvider", () => d.getDefaultProvider), s.export(r, "providers", () => d), s.export(r, "BaseContract", () => a.BaseContract), s.export(r, "Contract", () => a.Contract), s.export(r, "ContractFactory", () => a.ContractFactory), s.export(r, "BigNumber", () => i.BigNumber), s.export(r, "FixedNumber", () => i.FixedNumber), s.export(r, "constants", () => c), s.export(r, "errors", () => h.ErrorCode), s.export(r, "logger", () => g), s.export(r, "utils", () => f), s.export(r, "wordlists", () => u.wordlists), s.export(r, "version", () => p.version), s.export(r, "Wordlist", () => u.Wordlist);
        "use strict";
        var a = e("@ethersproject/contracts"),
            i = e("@ethersproject/bignumber"),
            o = e("@ethersproject/abstract-signer"),
            l = e("@ethersproject/wallet"),
            c = e("@ethersproject/constants"),
            d = e("@ethersproject/providers"),
            u = e("@ethersproject/wordlists"),
            f = e("./utils"),
            h = e("@ethersproject/logger"),
            p = e("./_version");
        let g = new(0, h.Logger)(p.version)
    }, {
        "@ethersproject/contracts": "bmZzW",
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/abstract-signer": "j6EbC",
        "@ethersproject/wallet": "euBMB",
        "@ethersproject/constants": "cSsuf",
        "@ethersproject/providers": "lpm2Y",
        "@ethersproject/wordlists": "a2daz",
        "./utils": "7jy5m",
        "@ethersproject/logger": "6NWvR",
        "./_version": "lHxZw",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    bmZzW: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "BaseContract", () => _), s.export(r, "Contract", () => T), s.export(r, "ContractFactory", () => C);
        "use strict";
        var a = e("@ethersproject/abi"),
            i = e("@ethersproject/abstract-provider"),
            o = e("@ethersproject/abstract-signer"),
            l = e("@ethersproject/address"),
            c = e("@ethersproject/bignumber"),
            d = e("@ethersproject/bytes"),
            u = e("@ethersproject/properties"),
            f = e("@ethersproject/transactions"),
            h = e("@ethersproject/logger"),
            p = e("./_version"),
            g = function(e, t, r, n) {
                return new(r || (r = Promise))(function(s, a) {
                    function i(e) {
                        try {
                            l(n.next(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function o(e) {
                        try {
                            l(n.throw(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? s(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(i, o)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        let m = new(0, h.Logger)(p.version),
            y = {
                chainId: !0,
                data: !0,
                from: !0,
                gasLimit: !0,
                gasPrice: !0,
                nonce: !0,
                to: !0,
                value: !0,
                type: !0,
                accessList: !0,
                maxFeePerGas: !0,
                maxPriorityFeePerGas: !0,
                customData: !0,
                ccipReadEnabled: !0
            };

        function b(e, t) {
            return g(this, void 0, void 0, function*() {
                let r = yield t;
                "string" != typeof r && m.throwArgumentError("invalid address or ENS name", "name", r);
                try {
                    return (0, l.getAddress)(r)
                } catch (e) {}
                e || m.throwError("a provider or signer is needed to resolve ENS names", h.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "resolveName"
                });
                let n = yield e.resolveName(r);
                return null == n && m.throwArgumentError("resolver or addr is not configured for ENS name", "name", r), n
            })
        }

        function x(e, t, r) {
            return g(this, void 0, void 0, function*() {
                return Array.isArray(r) ? yield Promise.all(r.map((r, n) => x(e, Array.isArray(t) ? t[n] : t[r.name], r))): "address" === r.type ? yield b(e, t): "tuple" === r.type ? yield x(e, t, r.components): "array" === r.baseType ? Array.isArray(t) ? yield Promise.all(t.map(t => x(e, t, r.arrayChildren))): Promise.reject(m.makeError("invalid value for array", h.Logger.errors.INVALID_ARGUMENT, {
                    argument: "value",
                    value: t
                })): t
            })
        }

        function v(e, t, r) {
            return g(this, void 0, void 0, function*() {
                let n = {};
                r.length === t.inputs.length + 1 && "object" == typeof r[r.length - 1] && (n = (0, u.shallowCopy)(r.pop())), m.checkArgumentCount(r.length, t.inputs.length, "passed to contract"), e.signer ? n.from ? n.from = (0, u.resolveProperties)({
                    override: b(e.signer, n.from),
                    signer: e.signer.getAddress()
                }).then(e => g(this, void 0, void 0, function*() {
                    return (0, l.getAddress)(e.signer) !== e.override && m.throwError("Contract with a Signer cannot override from", h.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "overrides.from"
                    }), e.override
                })) : n.from = e.signer.getAddress() : n.from && (n.from = b(e.provider, n.from));
                let s = yield(0, u.resolveProperties)({
                    args: x(e.signer || e.provider, r, t.inputs),
                    address: e.resolvedAddress,
                    overrides: (0, u.resolveProperties)(n) || {}
                }), a = e.interface.encodeFunctionData(t, s.args), i = {
                    data: a,
                    to: s.address
                }, o = s.overrides;
                if (null != o.nonce && (i.nonce = c.BigNumber.from(o.nonce).toNumber()), null != o.gasLimit && (i.gasLimit = c.BigNumber.from(o.gasLimit)), null != o.gasPrice && (i.gasPrice = c.BigNumber.from(o.gasPrice)), null != o.maxFeePerGas && (i.maxFeePerGas = c.BigNumber.from(o.maxFeePerGas)), null != o.maxPriorityFeePerGas && (i.maxPriorityFeePerGas = c.BigNumber.from(o.maxPriorityFeePerGas)), null != o.from && (i.from = o.from), null != o.type && (i.type = o.type), null != o.accessList && (i.accessList = (0, f.accessListify)(o.accessList)), null == i.gasLimit && null != t.gas) {
                    let e = 21e3,
                        r = (0, d.arrayify)(a);
                    for (let t = 0; t < r.length; t++) e += 4, r[t] && (e += 64);
                    i.gasLimit = c.BigNumber.from(t.gas).add(e)
                }
                if (o.value) {
                    let e = c.BigNumber.from(o.value);
                    e.isZero() || t.payable || m.throwError("non-payable method cannot override value", h.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "overrides.value",
                        value: n.value
                    }), i.value = e
                }
                o.customData && (i.customData = (0, u.shallowCopy)(o.customData)), o.ccipReadEnabled && (i.ccipReadEnabled = !!o.ccipReadEnabled), delete n.nonce, delete n.gasLimit, delete n.gasPrice, delete n.from, delete n.value, delete n.type, delete n.accessList, delete n.maxFeePerGas, delete n.maxPriorityFeePerGas, delete n.customData, delete n.ccipReadEnabled;
                let p = Object.keys(n).filter(e => null != n[e]);
                return p.length && m.throwError(`cannot override ${p.map(e=>JSON.stringify(e)).join(",")}`, h.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "overrides",
                    overrides: p
                }), i
            })
        }

        function w(e, t) {
            let r = t.wait.bind(t);
            t.wait = t => r(t).then(t => (t.events = t.logs.map(r => {
                let n = (0, u.deepCopy)(r),
                    s = null;
                try {
                    s = e.interface.parseLog(r)
                } catch (e) {}
                return s && (n.args = s.args, n.decode = (t, r) => e.interface.decodeEventLog(s.eventFragment, t, r), n.event = s.name, n.eventSignature = s.signature), n.removeListener = () => e.provider, n.getBlock = () => e.provider.getBlock(t.blockHash), n.getTransaction = () => e.provider.getTransaction(t.transactionHash), n.getTransactionReceipt = () => Promise.resolve(t), n
            }), t))
        }

        function E(e, t, r) {
            let n = e.signer || e.provider;
            return function(...s) {
                return g(this, void 0, void 0, function*() {
                    let a;
                    if (s.length === t.inputs.length + 1 && "object" == typeof s[s.length - 1]) {
                        let e = (0, u.shallowCopy)(s.pop());
                        null != e.blockTag && (a = yield e.blockTag), delete e.blockTag, s.push(e)
                    }
                    null != e.deployTransaction && (yield e._deployed(a));
                    let i = yield v(e, t, s), o = yield n.call(i, a);
                    try {
                        let n = e.interface.decodeFunctionResult(t, o);
                        return r && 1 === t.outputs.length && (n = n[0]), n
                    } catch (t) {
                        throw t.code === h.Logger.errors.CALL_EXCEPTION && (t.address = e.address, t.args = s, t.transaction = i), t
                    }
                })
            }
        }

        function A(e, t, r) {
            return t.constant ? E(e, t, r) : function(...r) {
                return g(this, void 0, void 0, function*() {
                    e.signer || m.throwError("sending a transaction requires a signer", h.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "sendTransaction"
                    }), null != e.deployTransaction && (yield e._deployed());
                    let n = yield v(e, t, r), s = yield e.signer.sendTransaction(n);
                    return w(e, s), s
                })
            }
        }

        function j(e) {
            return e.address && (null == e.topics || 0 === e.topics.length) ? "*" : (e.address || "*") + "@" + (e.topics ? e.topics.map(e => Array.isArray(e) ? e.join("|") : e).join(":") : "")
        }
        class I {
            constructor(e, t) {
                (0, u.defineReadOnly)(this, "tag", e), (0, u.defineReadOnly)(this, "filter", t), this._listeners = []
            }
            addListener(e, t) {
                this._listeners.push({
                    listener: e,
                    once: t
                })
            }
            removeListener(e) {
                let t = !1;
                this._listeners = this._listeners.filter(r => !!t || r.listener !== e || (t = !0, !1))
            }
            removeAllListeners() {
                this._listeners = []
            }
            listeners() {
                return this._listeners.map(e => e.listener)
            }
            listenerCount() {
                return this._listeners.length
            }
            run(e) {
                let t = this.listenerCount();
                return this._listeners = this._listeners.filter(t => {
                    let r = e.slice();
                    return setTimeout(() => {
                        t.listener.apply(this, r)
                    }, 0), !t.once
                }), t
            }
            prepareEvent(e) {}
            getEmit(e) {
                return [e]
            }
        }
        class S extends I {
            constructor() {
                super("error", null)
            }
        }
        class R extends I {
            constructor(e, t, r, n) {
                let s = {
                        address: e
                    },
                    a = t.getEventTopic(r);
                n ? (a !== n[0] && m.throwArgumentError("topic mismatch", "topics", n), s.topics = n.slice()) : s.topics = [a], super(j(s), s), (0, u.defineReadOnly)(this, "address", e), (0, u.defineReadOnly)(this, "interface", t), (0, u.defineReadOnly)(this, "fragment", r)
            }
            prepareEvent(e) {
                super.prepareEvent(e), e.event = this.fragment.name, e.eventSignature = this.fragment.format(), e.decode = (e, t) => this.interface.decodeEventLog(this.fragment, e, t);
                try {
                    e.args = this.interface.decodeEventLog(this.fragment, e.data, e.topics)
                } catch (t) {
                    e.args = null, e.decodeError = t
                }
            }
            getEmit(e) {
                let t = (0, a.checkResultErrors)(e.args);
                if (t.length) throw t[0].error;
                let r = (e.args || []).slice();
                return r.push(e), r
            }
        }
        class k extends I {
            constructor(e, t) {
                super("*", {
                    address: e
                }), (0, u.defineReadOnly)(this, "address", e), (0, u.defineReadOnly)(this, "interface", t)
            }
            prepareEvent(e) {
                super.prepareEvent(e);
                try {
                    let t = this.interface.parseLog(e);
                    e.event = t.name, e.eventSignature = t.signature, e.decode = (e, r) => this.interface.decodeEventLog(t.eventFragment, e, r), e.args = t.args
                } catch (e) {}
            }
        }
        class _ {
            constructor(e, t, r) {
                (0, u.defineReadOnly)(this, "interface", (0, u.getStatic)(new.target, "getInterface")(t)), null == r ? ((0, u.defineReadOnly)(this, "provider", null), (0, u.defineReadOnly)(this, "signer", null)) : o.Signer.isSigner(r) ? ((0, u.defineReadOnly)(this, "provider", r.provider || null), (0, u.defineReadOnly)(this, "signer", r)) : i.Provider.isProvider(r) ? ((0, u.defineReadOnly)(this, "provider", r), (0, u.defineReadOnly)(this, "signer", null)) : m.throwArgumentError("invalid signer or provider", "signerOrProvider", r), (0, u.defineReadOnly)(this, "callStatic", {}), (0, u.defineReadOnly)(this, "estimateGas", {}), (0, u.defineReadOnly)(this, "functions", {}), (0, u.defineReadOnly)(this, "populateTransaction", {}), (0, u.defineReadOnly)(this, "filters", {});
                {
                    let e = {};
                    Object.keys(this.interface.events).forEach(t => {
                        let r = this.interface.events[t];
                        (0, u.defineReadOnly)(this.filters, t, (...e) => ({
                            address: this.address,
                            topics: this.interface.encodeFilterTopics(r, e)
                        })), e[r.name] || (e[r.name] = []), e[r.name].push(t)
                    }), Object.keys(e).forEach(t => {
                        let r = e[t];
                        1 === r.length ? (0, u.defineReadOnly)(this.filters, t, this.filters[r[0]]) : m.warn(`Duplicate definition of ${t} (${r.join(", ")})`)
                    })
                }
                if ((0, u.defineReadOnly)(this, "_runningEvents", {}), (0, u.defineReadOnly)(this, "_wrappedEmits", {}), null == e && m.throwArgumentError("invalid contract address or ENS name", "addressOrName", e), (0, u.defineReadOnly)(this, "address", e), this.provider)(0, u.defineReadOnly)(this, "resolvedAddress", b(this.provider, e));
                else try {
                    (0, u.defineReadOnly)(this, "resolvedAddress", Promise.resolve((0, l.getAddress)(e)))
                } catch (e) {
                    m.throwError("provider is required to use ENS name as contract address", h.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "new Contract"
                    })
                }
                this.resolvedAddress.catch(e => {});
                let n = {},
                    s = {};
                Object.keys(this.interface.functions).forEach(e => {
                    var t;
                    let r = this.interface.functions[e];
                    if (s[e]) return void m.warn(`Duplicate ABI entry for ${JSON.stringify(e)}`);
                    s[e] = !0;
                    {
                        let t = r.name;
                        n[`%${t}`] || (n[`%${t}`] = []), n[`%${t}`].push(e)
                    }
                    null == this[e] && (0, u.defineReadOnly)(this, e, A(this, r, !0)), null == this.functions[e] && (0, u.defineReadOnly)(this.functions, e, A(this, r, !1)), null == this.callStatic[e] && (0, u.defineReadOnly)(this.callStatic, e, E(this, r, !0)), null == this.populateTransaction[e] && (0, u.defineReadOnly)(this.populateTransaction, e, (t = this, function(...e) {
                        return v(t, r, e)
                    })), null == this.estimateGas[e] && (0, u.defineReadOnly)(this.estimateGas, e, function(e, t) {
                        let r = e.signer || e.provider;
                        return function(...n) {
                            return g(this, void 0, void 0, function*() {
                                r || m.throwError("estimate require a provider or signer", h.Logger.errors.UNSUPPORTED_OPERATION, {
                                    operation: "estimateGas"
                                });
                                let s = yield v(e, t, n);
                                return yield r.estimateGas(s)
                            })
                        }
                    }(this, r))
                }), Object.keys(n).forEach(e => {
                    let t = n[e];
                    if (t.length > 1) return;
                    e = e.substring(1);
                    let r = t[0];
                    try {
                        null == this[e] && (0, u.defineReadOnly)(this, e, this[r])
                    } catch (e) {}
                    null == this.functions[e] && (0, u.defineReadOnly)(this.functions, e, this.functions[r]), null == this.callStatic[e] && (0, u.defineReadOnly)(this.callStatic, e, this.callStatic[r]), null == this.populateTransaction[e] && (0, u.defineReadOnly)(this.populateTransaction, e, this.populateTransaction[r]), null == this.estimateGas[e] && (0, u.defineReadOnly)(this.estimateGas, e, this.estimateGas[r])
                })
            }
            static getContractAddress(e) {
                return (0, l.getContractAddress)(e)
            }
            static getInterface(e) {
                return a.Interface.isInterface(e) ? e : new(0, a.Interface)(e)
            }
            deployed() {
                return this._deployed()
            }
            _deployed(e) {
                return this._deployedPromise || (this.deployTransaction ? this._deployedPromise = this.deployTransaction.wait().then(() => this) : this._deployedPromise = this.provider.getCode(this.address, e).then(e => ("0x" === e && m.throwError("contract not deployed", h.Logger.errors.UNSUPPORTED_OPERATION, {
                    contractAddress: this.address,
                    operation: "getDeployed"
                }), this))), this._deployedPromise
            }
            fallback(e) {
                this.signer || m.throwError("sending a transactions require a signer", h.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "sendTransaction(fallback)"
                });
                let t = (0, u.shallowCopy)(e || {});
                return ["from", "to"].forEach(function(e) {
                    null != t[e] && m.throwError("cannot override " + e, h.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: e
                    })
                }), t.to = this.resolvedAddress, this.deployed().then(() => this.signer.sendTransaction(t))
            }
            connect(e) {
                "string" == typeof e && (e = new(0, o.VoidSigner)(e, this.provider));
                let t = new this.constructor(this.address, this.interface, e);
                return this.deployTransaction && (0, u.defineReadOnly)(t, "deployTransaction", this.deployTransaction), t
            }
            attach(e) {
                return new this.constructor(e, this.interface, this.signer || this.provider)
            }
            static isIndexed(e) {
                return a.Indexed.isIndexed(e)
            }
            _normalizeRunningEvent(e) {
                return this._runningEvents[e.tag] ? this._runningEvents[e.tag] : e
            }
            _getRunningEvent(e) {
                if ("string" == typeof e) {
                    if ("error" === e) return this._normalizeRunningEvent(new S);
                    if ("event" === e) return this._normalizeRunningEvent(new I("event", null));
                    if ("*" === e) return this._normalizeRunningEvent(new k(this.address, this.interface));
                    let t = this.interface.getEvent(e);
                    return this._normalizeRunningEvent(new R(this.address, this.interface, t))
                }
                if (e.topics && e.topics.length > 0) {
                    try {
                        let t = e.topics[0];
                        if ("string" != typeof t) throw Error("invalid topic");
                        let r = this.interface.getEvent(t);
                        return this._normalizeRunningEvent(new R(this.address, this.interface, r, e.topics))
                    } catch (e) {}
                    let t = {
                        address: this.address,
                        topics: e.topics
                    };
                    return this._normalizeRunningEvent(new I(j(t), t))
                }
                return this._normalizeRunningEvent(new k(this.address, this.interface))
            }
            _checkRunningEvents(e) {
                if (0 === e.listenerCount()) {
                    delete this._runningEvents[e.tag];
                    let t = this._wrappedEmits[e.tag];
                    t && e.filter && (this.provider.off(e.filter, t), delete this._wrappedEmits[e.tag])
                }
            }
            _wrapEvent(e, t, r) {
                let n = (0, u.deepCopy)(t);
                return n.removeListener = () => {
                    r && (e.removeListener(r), this._checkRunningEvents(e))
                }, n.getBlock = () => this.provider.getBlock(t.blockHash), n.getTransaction = () => this.provider.getTransaction(t.transactionHash), n.getTransactionReceipt = () => this.provider.getTransactionReceipt(t.transactionHash), e.prepareEvent(n), n
            }
            _addEventListener(e, t, r) {
                if (this.provider || m.throwError("events require a provider or a signer with a provider", h.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "once"
                    }), e.addListener(t, r), this._runningEvents[e.tag] = e, !this._wrappedEmits[e.tag]) {
                    let r = r => {
                        let n = this._wrapEvent(e, r, t);
                        if (null == n.decodeError) try {
                            let t = e.getEmit(n);
                            this.emit(e.filter, ...t)
                        } catch (e) {
                            n.decodeError = e.error
                        }
                        null != e.filter && this.emit("event", n), null != n.decodeError && this.emit("error", n.decodeError, n)
                    };
                    this._wrappedEmits[e.tag] = r, null != e.filter && this.provider.on(e.filter, r)
                }
            }
            queryFilter(e, t, r) {
                let n = this._getRunningEvent(e),
                    s = (0, u.shallowCopy)(n.filter);
                return "string" == typeof t && (0, d.isHexString)(t, 32) ? (null != r && m.throwArgumentError("cannot specify toBlock with blockhash", "toBlock", r), s.blockHash = t) : (s.fromBlock = null != t ? t : 0, s.toBlock = null != r ? r : "latest"), this.provider.getLogs(s).then(e => e.map(e => this._wrapEvent(n, e, null)))
            }
            on(e, t) {
                return this._addEventListener(this._getRunningEvent(e), t, !1), this
            }
            once(e, t) {
                return this._addEventListener(this._getRunningEvent(e), t, !0), this
            }
            emit(e, ...t) {
                if (!this.provider) return !1;
                let r = this._getRunningEvent(e),
                    n = r.run(t) > 0;
                return this._checkRunningEvents(r), n
            }
            listenerCount(e) {
                return this.provider ? null == e ? Object.keys(this._runningEvents).reduce((e, t) => e + this._runningEvents[t].listenerCount(), 0) : this._getRunningEvent(e).listenerCount() : 0
            }
            listeners(e) {
                if (!this.provider) return [];
                if (null == e) {
                    let e = [];
                    for (let t in this._runningEvents) this._runningEvents[t].listeners().forEach(t => {
                        e.push(t)
                    });
                    return e
                }
                return this._getRunningEvent(e).listeners()
            }
            removeAllListeners(e) {
                if (!this.provider) return this;
                if (null == e) {
                    for (let e in this._runningEvents) {
                        let t = this._runningEvents[e];
                        t.removeAllListeners(), this._checkRunningEvents(t)
                    }
                    return this
                }
                let t = this._getRunningEvent(e);
                return t.removeAllListeners(), this._checkRunningEvents(t), this
            }
            off(e, t) {
                if (!this.provider) return this;
                let r = this._getRunningEvent(e);
                return r.removeListener(t), this._checkRunningEvents(r), this
            }
            removeListener(e, t) {
                return this.off(e, t)
            }
        }
        class T extends _ {}
        class C {
            constructor(e, t, r) {
                let n = null;
                "0x" !== (n = "string" == typeof t ? t : (0, d.isBytes)(t) ? (0, d.hexlify)(t) : t && "string" == typeof t.object ? t.object : "!").substring(0, 2) && (n = "0x" + n), (!(0, d.isHexString)(n) || n.length % 2) && m.throwArgumentError("invalid bytecode", "bytecode", t), r && !o.Signer.isSigner(r) && m.throwArgumentError("invalid signer", "signer", r), (0, u.defineReadOnly)(this, "bytecode", n), (0, u.defineReadOnly)(this, "interface", (0, u.getStatic)(new.target, "getInterface")(e)), (0, u.defineReadOnly)(this, "signer", r || null)
            }
            getDeployTransaction(...e) {
                let t = {};
                if (e.length === this.interface.deploy.inputs.length + 1 && "object" == typeof e[e.length - 1]) {
                    for (let r in t = (0, u.shallowCopy)(e.pop()))
                        if (!y[r]) throw Error("unknown transaction override " + r)
                }
                return ["data", "from", "to"].forEach(e => {
                    null != t[e] && m.throwError("cannot override " + e, h.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: e
                    })
                }), t.value && (c.BigNumber.from(t.value).isZero() || this.interface.deploy.payable || m.throwError("non-payable constructor cannot override value", h.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "overrides.value",
                    value: t.value
                })), m.checkArgumentCount(e.length, this.interface.deploy.inputs.length, " in Contract constructor"), t.data = (0, d.hexlify)((0, d.concat)([this.bytecode, this.interface.encodeDeploy(e)])), t
            }
            deploy(...e) {
                return g(this, void 0, void 0, function*() {
                    let t = {};
                    e.length === this.interface.deploy.inputs.length + 1 && (t = e.pop()), m.checkArgumentCount(e.length, this.interface.deploy.inputs.length, " in Contract constructor");
                    let r = yield x(this.signer, e, this.interface.deploy.inputs);
                    r.push(t);
                    let n = this.getDeployTransaction(...r),
                        s = yield this.signer.sendTransaction(n), a = (0, u.getStatic)(this.constructor, "getContractAddress")(s), i = (0, u.getStatic)(this.constructor, "getContract")(a, this.interface, this.signer);
                    return w(i, s), (0, u.defineReadOnly)(i, "deployTransaction", s), i
                })
            }
            attach(e) {
                return this.constructor.getContract(e, this.interface, this.signer)
            }
            connect(e) {
                return new this.constructor(this.interface, this.bytecode, e)
            }
            static fromSolidity(e, t) {
                null == e && m.throwError("missing compiler output", h.Logger.errors.MISSING_ARGUMENT, {
                    argument: "compilerOutput"
                }), "string" == typeof e && (e = JSON.parse(e));
                let r = e.abi,
                    n = null;
                return e.bytecode ? n = e.bytecode : e.evm && e.evm.bytecode && (n = e.evm.bytecode), new this(r, n, t)
            }
            static getInterface(e) {
                return T.getInterface(e)
            }
            static getContractAddress(e) {
                return (0, l.getContractAddress)(e)
            }
            static getContract(e, t, r) {
                return new T(e, t, r)
            }
        }
    }, {
        "@ethersproject/abi": "gbtNr",
        "@ethersproject/abstract-provider": "imf57",
        "@ethersproject/abstract-signer": "j6EbC",
        "@ethersproject/address": "7BZuS",
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/transactions": "ctBdV",
        "@ethersproject/logger": "6NWvR",
        "./_version": "liyH3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    gbtNr: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "ConstructorFragment", () => a.ConstructorFragment), s.export(r, "ErrorFragment", () => a.ErrorFragment), s.export(r, "EventFragment", () => a.EventFragment), s.export(r, "Fragment", () => a.Fragment), s.export(r, "FunctionFragment", () => a.FunctionFragment), s.export(r, "ParamType", () => a.ParamType), s.export(r, "FormatTypes", () => a.FormatTypes), s.export(r, "AbiCoder", () => i.AbiCoder), s.export(r, "defaultAbiCoder", () => i.defaultAbiCoder), s.export(r, "Interface", () => o.Interface), s.export(r, "Indexed", () => o.Indexed), s.export(r, "checkResultErrors", () => o.checkResultErrors), s.export(r, "LogDescription", () => o.LogDescription), s.export(r, "TransactionDescription", () => o.TransactionDescription);
        "use strict";
        var a = e("./fragments"),
            i = e("./abi-coder"),
            o = e("./interface")
    }, {
        "./fragments": "2aRQ2",
        "./abi-coder": "eiswb",
        "./interface": "gOFir",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "2aRQ2": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "FormatTypes", () => g), s.export(r, "ParamType", () => y), s.export(r, "Fragment", () => x), s.export(r, "EventFragment", () => v), s.export(r, "ConstructorFragment", () => j), s.export(r, "FunctionFragment", () => I), s.export(r, "ErrorFragment", () => R);
        "use strict";
        var a = e("@ethersproject/bignumber"),
            i = e("@ethersproject/properties"),
            o = e("@ethersproject/logger"),
            l = e("./_version");
        let c = new(0, o.Logger)(l.version),
            d = {},
            u = {
                calldata: !0,
                memory: !0,
                storage: !0
            },
            f = {
                calldata: !0,
                memory: !0
            };

        function h(e, t) {
            if ("bytes" === e || "string" === e) {
                if (u[t]) return !0
            } else if ("address" === e) {
                if ("payable" === t) return !0
            } else if ((e.indexOf("[") >= 0 || "tuple" === e) && f[t]) return !0;
            return (u[t] || "payable" === t) && c.throwArgumentError("invalid modifier", "name", t), !1
        }

        function p(e, t) {
            for (let r in t)(0, i.defineReadOnly)(e, r, t[r])
        }
        let g = Object.freeze({
                sighash: "sighash",
                minimal: "minimal",
                full: "full",
                json: "json"
            }),
            m = new RegExp(/^(.*)\[([0-9]*)\]$/);
        class y {
            constructor(e, t) {
                e !== d && c.throwError("use fromString", o.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "new ParamType()"
                }), p(this, t);
                let r = this.type.match(m);
                r ? p(this, {
                    arrayLength: parseInt(r[2] || "-1"),
                    arrayChildren: y.fromObject({
                        type: r[1],
                        components: this.components
                    }),
                    baseType: "array"
                }) : p(this, {
                    arrayLength: null,
                    arrayChildren: null,
                    baseType: null != this.components ? "tuple" : this.type
                }), this._isParamType = !0, Object.freeze(this)
            }
            format(e) {
                if (e || (e = g.sighash), g[e] || c.throwArgumentError("invalid format type", "format", e), e === g.json) {
                    let t = {
                        type: "tuple" === this.baseType ? "tuple" : this.type,
                        name: this.name || void 0
                    };
                    return "boolean" == typeof this.indexed && (t.indexed = this.indexed), this.components && (t.components = this.components.map(t => JSON.parse(t.format(e)))), JSON.stringify(t)
                }
                let t = "";
                return "array" === this.baseType ? (t += this.arrayChildren.format(e), t += "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]") : "tuple" === this.baseType ? (e !== g.sighash && (t += this.type), t += "(" + this.components.map(t => t.format(e)).join(e === g.full ? ", " : ",") + ")") : t += this.type, e !== g.sighash && (!0 === this.indexed && (t += " indexed"), e === g.full && this.name && (t += " " + this.name)), t
            }
            static from(e, t) {
                return "string" == typeof e ? y.fromString(e, t) : y.fromObject(e)
            }
            static fromObject(e) {
                return y.isParamType(e) ? e : new y(d, {
                    name: e.name || null,
                    type: k(e.type),
                    indexed: null == e.indexed ? null : !!e.indexed,
                    components: e.components ? e.components.map(y.fromObject) : null
                })
            }
            static fromString(e, t) {
                var r;
                return r = function(e, t) {
                    let r = e;

                    function n(t) {
                        c.throwArgumentError(`unexpected character at position ${t}`, "param", e)
                    }

                    function s(e) {
                        let r = {
                            type: "",
                            name: "",
                            parent: e,
                            state: {
                                allowType: !0
                            }
                        };
                        return t && (r.indexed = !1), r
                    }
                    e = e.replace(/\s/g, " ");
                    let a = {
                            type: "",
                            name: "",
                            state: {
                                allowType: !0
                            }
                        },
                        i = a;
                    for (let r = 0; r < e.length; r++) {
                        let a = e[r];
                        switch (a) {
                            case "(":
                                i.state.allowType && "" === i.type ? i.type = "tuple" : i.state.allowParams || n(r), i.state.allowType = !1, i.type = k(i.type), i.components = [s(i)], i = i.components[0];
                                break;
                            case ")":
                                delete i.state, "indexed" === i.name && (t || n(r), i.indexed = !0, i.name = ""), h(i.type, i.name) && (i.name = ""), i.type = k(i.type);
                                let o = i;
                                (i = i.parent) || n(r), delete o.parent, i.state.allowParams = !1, i.state.allowName = !0, i.state.allowArray = !0;
                                break;
                            case ",":
                                delete i.state, "indexed" === i.name && (t || n(r), i.indexed = !0, i.name = ""), h(i.type, i.name) && (i.name = ""), i.type = k(i.type);
                                let l = s(i.parent);
                                i.parent.components.push(l), delete i.parent, i = l;
                                break;
                            case " ":
                                i.state.allowType && "" !== i.type && (i.type = k(i.type), delete i.state.allowType, i.state.allowName = !0, i.state.allowParams = !0), i.state.allowName && "" !== i.name && ("indexed" === i.name ? (t || n(r), i.indexed && n(r), i.indexed = !0, i.name = "") : h(i.type, i.name) ? i.name = "" : i.state.allowName = !1);
                                break;
                            case "[":
                                i.state.allowArray || n(r), i.type += a, i.state.allowArray = !1, i.state.allowName = !1, i.state.readArray = !0;
                                break;
                            case "]":
                                i.state.readArray || n(r), i.type += a, i.state.readArray = !1, i.state.allowArray = !0, i.state.allowName = !0;
                                break;
                            default:
                                i.state.allowType ? (i.type += a, i.state.allowParams = !0, i.state.allowArray = !0) : i.state.allowName ? (i.name += a, delete i.state.allowArray) : i.state.readArray ? i.type += a : n(r)
                        }
                    }
                    return i.parent && c.throwArgumentError("unexpected eof", "param", e), delete a.state, "indexed" === i.name ? (t || n(r.length - 7), i.indexed && n(r.length - 7), i.indexed = !0, i.name = "") : h(i.type, i.name) && (i.name = ""), a.type = k(a.type), a
                }(e, !!t), y.fromObject({
                    name: r.name,
                    type: r.type,
                    indexed: r.indexed,
                    components: r.components
                })
            }
            static isParamType(e) {
                return !!(null != e && e._isParamType)
            }
        }

        function b(e, t) {
            return (function(e) {
                e = e.trim();
                let t = [],
                    r = "",
                    n = 0;
                for (let s = 0; s < e.length; s++) {
                    let a = e[s];
                    "," === a && 0 === n ? (t.push(r), r = "") : (r += a, "(" === a ? n++ : ")" === a && -1 == --n && c.throwArgumentError("unbalanced parenthesis", "value", e))
                }
                return r && t.push(r), t
            })(e).map(e => y.fromString(e, t))
        }
        class x {
            constructor(e, t) {
                e !== d && c.throwError("use a static from method", o.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "new Fragment()"
                }), p(this, t), this._isFragment = !0, Object.freeze(this)
            }
            static from(e) {
                return x.isFragment(e) ? e : "string" == typeof e ? x.fromString(e) : x.fromObject(e)
            }
            static fromObject(e) {
                if (x.isFragment(e)) return e;
                switch (e.type) {
                    case "function":
                        return I.fromObject(e);
                    case "event":
                        return v.fromObject(e);
                    case "constructor":
                        return j.fromObject(e);
                    case "error":
                        return R.fromObject(e);
                    case "fallback":
                    case "receive":
                        return null
                }
                return c.throwArgumentError("invalid fragment object", "value", e)
            }
            static fromString(e) {
                return "event" === (e = (e = (e = e.replace(/\s/g, " ")).replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " ")).trim()).split(" ")[0] ? v.fromString(e.substring(5).trim()) : "function" === e.split(" ")[0] ? I.fromString(e.substring(8).trim()) : "constructor" === e.split("(")[0].trim() ? j.fromString(e.trim()) : "error" === e.split(" ")[0] ? R.fromString(e.substring(5).trim()) : c.throwArgumentError("unsupported fragment", "value", e)
            }
            static isFragment(e) {
                return !!(e && e._isFragment)
            }
        }
        class v extends x {
            format(e) {
                if (e || (e = g.sighash), g[e] || c.throwArgumentError("invalid format type", "format", e), e === g.json) return JSON.stringify({
                    type: "event",
                    anonymous: this.anonymous,
                    name: this.name,
                    inputs: this.inputs.map(t => JSON.parse(t.format(e)))
                });
                let t = "";
                return e !== g.sighash && (t += "event "), t += this.name + "(" + this.inputs.map(t => t.format(e)).join(e === g.full ? ", " : ",") + ") ", e !== g.sighash && this.anonymous && (t += "anonymous "), t.trim()
            }
            static from(e) {
                return "string" == typeof e ? v.fromString(e) : v.fromObject(e)
            }
            static fromObject(e) {
                return v.isEventFragment(e) ? e : ("event" !== e.type && c.throwArgumentError("invalid event object", "value", e), new v(d, {
                    name: T(e.name),
                    anonymous: e.anonymous,
                    inputs: e.inputs ? e.inputs.map(y.fromObject) : [],
                    type: "event"
                }))
            }
            static fromString(e) {
                let t = e.match(C);
                t || c.throwArgumentError("invalid event string", "value", e);
                let r = !1;
                return t[3].split(" ").forEach(e => {
                    switch (e.trim()) {
                        case "anonymous":
                            r = !0;
                            break;
                        case "":
                            break;
                        default:
                            c.warn("unknown modifier: " + e)
                    }
                }), v.fromObject({
                    name: t[1].trim(),
                    anonymous: r,
                    inputs: b(t[2], !0),
                    type: "event"
                })
            }
            static isEventFragment(e) {
                return e && e._isFragment && "event" === e.type
            }
        }

        function w(e, t) {
            t.gas = null;
            let r = e.split("@");
            return 1 !== r.length ? (r.length > 2 && c.throwArgumentError("invalid human-readable ABI signature", "value", e), r[1].match(/^[0-9]+$/) || c.throwArgumentError("invalid human-readable ABI signature gas", "value", e), t.gas = a.BigNumber.from(r[1]), r[0]) : e
        }

        function E(e, t) {
            t.constant = !1, t.payable = !1, t.stateMutability = "nonpayable", e.split(" ").forEach(e => {
                switch (e.trim()) {
                    case "constant":
                        t.constant = !0;
                        break;
                    case "payable":
                        t.payable = !0, t.stateMutability = "payable";
                        break;
                    case "nonpayable":
                        t.payable = !1, t.stateMutability = "nonpayable";
                        break;
                    case "pure":
                        t.constant = !0, t.stateMutability = "pure";
                        break;
                    case "view":
                        t.constant = !0, t.stateMutability = "view";
                        break;
                    case "external":
                    case "public":
                    case "":
                        break;
                    default:
                        console.log("unknown modifier: " + e)
                }
            })
        }

        function A(e) {
            let t = {
                constant: !1,
                payable: !0,
                stateMutability: "payable"
            };
            return null != e.stateMutability ? (t.stateMutability = e.stateMutability, t.constant = "view" === t.stateMutability || "pure" === t.stateMutability, null != e.constant && !!e.constant !== t.constant && c.throwArgumentError("cannot have constant function with mutability " + t.stateMutability, "value", e), t.payable = "payable" === t.stateMutability, null != e.payable && !!e.payable !== t.payable && c.throwArgumentError("cannot have payable function with mutability " + t.stateMutability, "value", e)) : null != e.payable ? (t.payable = !!e.payable, null != e.constant || t.payable || "constructor" === e.type || c.throwArgumentError("unable to determine stateMutability", "value", e), t.constant = !!e.constant, t.constant ? t.stateMutability = "view" : t.stateMutability = t.payable ? "payable" : "nonpayable", t.payable && t.constant && c.throwArgumentError("cannot have constant payable function", "value", e)) : null != e.constant ? (t.constant = !!e.constant, t.payable = !t.constant, t.stateMutability = t.constant ? "view" : "payable") : "constructor" !== e.type && c.throwArgumentError("unable to determine stateMutability", "value", e), t
        }
        class j extends x {
            format(e) {
                if (e || (e = g.sighash), g[e] || c.throwArgumentError("invalid format type", "format", e), e === g.json) return JSON.stringify({
                    type: "constructor",
                    stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
                    payable: this.payable,
                    gas: this.gas ? this.gas.toNumber() : void 0,
                    inputs: this.inputs.map(t => JSON.parse(t.format(e)))
                });
                e === g.sighash && c.throwError("cannot format a constructor for sighash", o.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "format(sighash)"
                });
                let t = "constructor(" + this.inputs.map(t => t.format(e)).join(e === g.full ? ", " : ",") + ") ";
                return this.stateMutability && "nonpayable" !== this.stateMutability && (t += this.stateMutability + " "), t.trim()
            }
            static from(e) {
                return "string" == typeof e ? j.fromString(e) : j.fromObject(e)
            }
            static fromObject(e) {
                if (j.isConstructorFragment(e)) return e;
                "constructor" !== e.type && c.throwArgumentError("invalid constructor object", "value", e);
                let t = A(e);
                return t.constant && c.throwArgumentError("constructor cannot be constant", "value", e), new j(d, {
                    name: null,
                    type: e.type,
                    inputs: e.inputs ? e.inputs.map(y.fromObject) : [],
                    payable: t.payable,
                    stateMutability: t.stateMutability,
                    gas: e.gas ? a.BigNumber.from(e.gas) : null
                })
            }
            static fromString(e) {
                let t = {
                        type: "constructor"
                    },
                    r = (e = w(e, t)).match(C);
                return r && "constructor" === r[1].trim() || c.throwArgumentError("invalid constructor string", "value", e), t.inputs = b(r[2].trim(), !1), E(r[3].trim(), t), j.fromObject(t)
            }
            static isConstructorFragment(e) {
                return e && e._isFragment && "constructor" === e.type
            }
        }
        class I extends j {
            format(e) {
                if (e || (e = g.sighash), g[e] || c.throwArgumentError("invalid format type", "format", e), e === g.json) return JSON.stringify({
                    type: "function",
                    name: this.name,
                    constant: this.constant,
                    stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
                    payable: this.payable,
                    gas: this.gas ? this.gas.toNumber() : void 0,
                    inputs: this.inputs.map(t => JSON.parse(t.format(e))),
                    outputs: this.outputs.map(t => JSON.parse(t.format(e)))
                });
                let t = "";
                return e !== g.sighash && (t += "function "), t += this.name + "(" + this.inputs.map(t => t.format(e)).join(e === g.full ? ", " : ",") + ") ", e !== g.sighash && (this.stateMutability ? "nonpayable" !== this.stateMutability && (t += this.stateMutability + " ") : this.constant && (t += "view "), this.outputs && this.outputs.length && (t += "returns (" + this.outputs.map(t => t.format(e)).join(", ") + ") "), null != this.gas && (t += "@" + this.gas.toString() + " ")), t.trim()
            }
            static from(e) {
                return "string" == typeof e ? I.fromString(e) : I.fromObject(e)
            }
            static fromObject(e) {
                if (I.isFunctionFragment(e)) return e;
                "function" !== e.type && c.throwArgumentError("invalid function object", "value", e);
                let t = A(e);
                return new I(d, {
                    type: e.type,
                    name: T(e.name),
                    constant: t.constant,
                    inputs: e.inputs ? e.inputs.map(y.fromObject) : [],
                    outputs: e.outputs ? e.outputs.map(y.fromObject) : [],
                    payable: t.payable,
                    stateMutability: t.stateMutability,
                    gas: e.gas ? a.BigNumber.from(e.gas) : null
                })
            }
            static fromString(e) {
                let t = {
                        type: "function"
                    },
                    r = (e = w(e, t)).split(" returns ");
                r.length > 2 && c.throwArgumentError("invalid function string", "value", e);
                let n = r[0].match(C);
                if (n || c.throwArgumentError("invalid function signature", "value", e), t.name = n[1].trim(), t.name && T(t.name), t.inputs = b(n[2], !1), E(n[3].trim(), t), r.length > 1) {
                    let n = r[1].match(C);
                    ("" != n[1].trim() || "" != n[3].trim()) && c.throwArgumentError("unexpected tokens", "value", e), t.outputs = b(n[2], !1)
                } else t.outputs = [];
                return I.fromObject(t)
            }
            static isFunctionFragment(e) {
                return e && e._isFragment && "function" === e.type
            }
        }

        function S(e) {
            let t = e.format();
            return ("Error(string)" === t || "Panic(uint256)" === t) && c.throwArgumentError(`cannot specify user defined ${t} error`, "fragment", e), e
        }
        class R extends x {
            format(e) {
                if (e || (e = g.sighash), g[e] || c.throwArgumentError("invalid format type", "format", e), e === g.json) return JSON.stringify({
                    type: "error",
                    name: this.name,
                    inputs: this.inputs.map(t => JSON.parse(t.format(e)))
                });
                let t = "";
                return e !== g.sighash && (t += "error "), (t += this.name + "(" + this.inputs.map(t => t.format(e)).join(e === g.full ? ", " : ",") + ") ").trim()
            }
            static from(e) {
                return "string" == typeof e ? R.fromString(e) : R.fromObject(e)
            }
            static fromObject(e) {
                return R.isErrorFragment(e) ? e : ("error" !== e.type && c.throwArgumentError("invalid error object", "value", e), S(new R(d, {
                    type: e.type,
                    name: T(e.name),
                    inputs: e.inputs ? e.inputs.map(y.fromObject) : []
                })))
            }
            static fromString(e) {
                let t = {
                        type: "error"
                    },
                    r = e.match(C);
                return r || c.throwArgumentError("invalid error signature", "value", e), t.name = r[1].trim(), t.name && T(t.name), t.inputs = b(r[2], !1), S(R.fromObject(t))
            }
            static isErrorFragment(e) {
                return e && e._isFragment && "error" === e.type
            }
        }

        function k(e) {
            return e.match(/^uint($|[^1-9])/) ? e = "uint256" + e.substring(4) : e.match(/^int($|[^1-9])/) && (e = "int256" + e.substring(3)), e
        }
        let _ = RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");

        function T(e) {
            return e && e.match(_) || c.throwArgumentError(`invalid identifier "${e}"`, "value", e), e
        }
        let C = RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$")
    }, {
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/logger": "6NWvR",
        "./_version": "6avgg",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "6avgg": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "abi/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    eiswb: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "AbiCoder", () => A), s.export(r, "defaultAbiCoder", () => j);
        "use strict";
        var a = e("@ethersproject/bytes"),
            i = e("@ethersproject/properties"),
            o = e("@ethersproject/logger"),
            l = e("./_version"),
            c = e("./coders/abstract-coder"),
            d = e("./coders/address"),
            u = e("./coders/array"),
            f = e("./coders/boolean"),
            h = e("./coders/bytes"),
            p = e("./coders/fixed-bytes"),
            g = e("./coders/null"),
            m = e("./coders/number"),
            y = e("./coders/string"),
            b = e("./coders/tuple"),
            x = e("./fragments");
        let v = new(0, o.Logger)(l.version),
            w = new RegExp(/^bytes([0-9]*)$/),
            E = new RegExp(/^(u?int)([0-9]*)$/);
        class A {
            constructor(e) {
                (0, i.defineReadOnly)(this, "coerceFunc", e || null)
            }
            _getCoder(e) {
                switch (e.baseType) {
                    case "address":
                        return new(0, d.AddressCoder)(e.name);
                    case "bool":
                        return new(0, f.BooleanCoder)(e.name);
                    case "string":
                        return new(0, y.StringCoder)(e.name);
                    case "bytes":
                        return new(0, h.BytesCoder)(e.name);
                    case "array":
                        return new(0, u.ArrayCoder)(this._getCoder(e.arrayChildren), e.arrayLength, e.name);
                    case "tuple":
                        return new(0, b.TupleCoder)((e.components || []).map(e => this._getCoder(e)), e.name);
                    case "":
                        return new(0, g.NullCoder)(e.name)
                }
                let t = e.type.match(E);
                if (t) {
                    let r = parseInt(t[2] || "256");
                    return (0 === r || r > 256 || r % 8 != 0) && v.throwArgumentError("invalid " + t[1] + " bit length", "param", e), new(0, m.NumberCoder)(r / 8, "int" === t[1], e.name)
                }
                if (t = e.type.match(w)) {
                    let r = parseInt(t[1]);
                    return (0 === r || r > 32) && v.throwArgumentError("invalid bytes length", "param", e), new(0, p.FixedBytesCoder)(r, e.name)
                }
                return v.throwArgumentError("invalid type", "type", e.type)
            }
            _getWordSize() {
                return 32
            }
            _getReader(e, t) {
                return new(0, c.Reader)(e, this._getWordSize(), this.coerceFunc, t)
            }
            _getWriter() {
                return new(0, c.Writer)(this._getWordSize())
            }
            getDefaultValue(e) {
                let t = e.map(e => this._getCoder(x.ParamType.from(e)));
                return new(0, b.TupleCoder)(t, "_").defaultValue()
            }
            encode(e, t) {
                e.length !== t.length && v.throwError("types/values length mismatch", o.Logger.errors.INVALID_ARGUMENT, {
                    count: {
                        types: e.length,
                        values: t.length
                    },
                    value: {
                        types: e,
                        values: t
                    }
                });
                let r = e.map(e => this._getCoder(x.ParamType.from(e))),
                    n = new(0, b.TupleCoder)(r, "_"),
                    s = this._getWriter();
                return n.encode(s, t), s.data
            }
            decode(e, t, r) {
                let n = e.map(e => this._getCoder(x.ParamType.from(e)));
                return new(0, b.TupleCoder)(n, "_").decode(this._getReader((0, a.arrayify)(t), r))
            }
        }
        let j = new A
    }, {
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/logger": "6NWvR",
        "./_version": "6avgg",
        "./coders/abstract-coder": "9TMyg",
        "./coders/address": "gmOQs",
        "./coders/array": "2wlJw",
        "./coders/boolean": "euYzQ",
        "./coders/bytes": "kOE2A",
        "./coders/fixed-bytes": "dNFj2",
        "./coders/null": "2639x",
        "./coders/number": "lHQpm",
        "./coders/string": "44r1i",
        "./coders/tuple": "90ORK",
        "./fragments": "2aRQ2",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "9TMyg": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "checkResultErrors", () => u), s.export(r, "Coder", () => f), s.export(r, "Writer", () => h), s.export(r, "Reader", () => p);
        "use strict";
        var a = e("@ethersproject/bytes"),
            i = e("@ethersproject/bignumber"),
            o = e("@ethersproject/properties"),
            l = e("@ethersproject/logger"),
            c = e("../_version");
        let d = new(0, l.Logger)(c.version);

        function u(e) {
            let t = [],
                r = function(e, n) {
                    if (Array.isArray(n))
                        for (let s in n) {
                            let a = e.slice();
                            a.push(s);
                            try {
                                r(a, n[s])
                            } catch (e) {
                                t.push({
                                    path: a,
                                    error: e
                                })
                            }
                        }
                };
            return r([], e), t
        }
        class f {
            constructor(e, t, r, n) {
                this.name = e, this.type = t, this.localName = r, this.dynamic = n
            }
            _throwError(e, t) {
                d.throwArgumentError(e, this.localName, t)
            }
        }
        class h {
            constructor(e) {
                (0, o.defineReadOnly)(this, "wordSize", e || 32), this._data = [], this._dataLength = 0, this._padding = new Uint8Array(e)
            }
            get data() {
                return (0, a.hexConcat)(this._data)
            }
            get length() {
                return this._dataLength
            }
            _writeData(e) {
                return this._data.push(e), this._dataLength += e.length, e.length
            }
            appendWriter(e) {
                return this._writeData((0, a.concat)(e._data))
            }
            writeBytes(e) {
                let t = (0, a.arrayify)(e),
                    r = t.length % this.wordSize;
                return r && (t = (0, a.concat)([t, this._padding.slice(r)])), this._writeData(t)
            }
            _getValue(e) {
                let t = (0, a.arrayify)(i.BigNumber.from(e));
                return t.length > this.wordSize && d.throwError("value out-of-bounds", l.Logger.errors.BUFFER_OVERRUN, {
                    length: this.wordSize,
                    offset: t.length
                }), t.length % this.wordSize && (t = (0, a.concat)([this._padding.slice(t.length % this.wordSize), t])), t
            }
            writeValue(e) {
                return this._writeData(this._getValue(e))
            }
            writeUpdatableValue() {
                let e = this._data.length;
                return this._data.push(this._padding), this._dataLength += this.wordSize, t => {
                    this._data[e] = this._getValue(t)
                }
            }
        }
        class p {
            constructor(e, t, r, n) {
                (0, o.defineReadOnly)(this, "_data", (0, a.arrayify)(e)), (0, o.defineReadOnly)(this, "wordSize", t || 32), (0, o.defineReadOnly)(this, "_coerceFunc", r), (0, o.defineReadOnly)(this, "allowLoose", n), this._offset = 0
            }
            get data() {
                return (0, a.hexlify)(this._data)
            }
            get consumed() {
                return this._offset
            }
            static coerce(e, t) {
                let r = e.match("^u?int([0-9]+)$");
                return r && 48 >= parseInt(r[1]) && (t = t.toNumber()), t
            }
            coerce(e, t) {
                return this._coerceFunc ? this._coerceFunc(e, t) : p.coerce(e, t)
            }
            _peekBytes(e, t, r) {
                let n = Math.ceil(t / this.wordSize) * this.wordSize;
                return this._offset + n > this._data.length && (this.allowLoose && r && this._offset + t <= this._data.length ? n = t : d.throwError("data out-of-bounds", l.Logger.errors.BUFFER_OVERRUN, {
                    length: this._data.length,
                    offset: this._offset + n
                })), this._data.slice(this._offset, this._offset + n)
            }
            subReader(e) {
                return new p(this._data.slice(this._offset + e), this.wordSize, this._coerceFunc, this.allowLoose)
            }
            readBytes(e, t) {
                let r = this._peekBytes(0, e, !!t);
                return this._offset += r.length, r.slice(0, e)
            }
            readValue() {
                return i.BigNumber.from(this.readBytes(this.wordSize))
            }
        }
    }, {
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/logger": "6NWvR",
        "../_version": "6avgg",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    gmOQs: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "AddressCoder", () => l);
        "use strict";
        var a = e("@ethersproject/address"),
            i = e("@ethersproject/bytes"),
            o = e("./abstract-coder");
        class l extends o.Coder {
            constructor(e) {
                super("address", "address", e, !1)
            }
            defaultValue() {
                return "0x0000000000000000000000000000000000000000"
            }
            encode(e, t) {
                try {
                    t = (0, a.getAddress)(t)
                } catch (e) {
                    this._throwError(e.message, t)
                }
                return e.writeValue(t)
            }
            decode(e) {
                return (0, a.getAddress)((0, i.hexZeroPad)(e.readValue().toHexString(), 20))
            }
        }
    }, {
        "@ethersproject/address": "7BZuS",
        "@ethersproject/bytes": "19SwW",
        "./abstract-coder": "9TMyg",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "2wlJw": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "pack", () => d), s.export(r, "unpack", () => u), s.export(r, "ArrayCoder", () => f);
        "use strict";
        var a = e("@ethersproject/logger"),
            i = e("../_version"),
            o = e("./abstract-coder"),
            l = e("./anonymous");
        let c = new(0, a.Logger)(i.version);

        function d(e, t, r) {
            let n = null;
            if (Array.isArray(r)) n = r;
            else if (r && "object" == typeof r) {
                let e = {};
                n = t.map(t => {
                    let n = t.localName;
                    return n || c.throwError("cannot encode object for signature with missing names", a.Logger.errors.INVALID_ARGUMENT, {
                        argument: "values",
                        coder: t,
                        value: r
                    }), e[n] && c.throwError("cannot encode object for signature with duplicate names", a.Logger.errors.INVALID_ARGUMENT, {
                        argument: "values",
                        coder: t,
                        value: r
                    }), e[n] = !0, r[n]
                })
            } else c.throwArgumentError("invalid tuple value", "tuple", r);
            t.length !== n.length && c.throwArgumentError("types/value length mismatch", "tuple", r);
            let s = new(0, o.Writer)(e.wordSize),
                i = new(0, o.Writer)(e.wordSize),
                l = [];
            t.forEach((e, t) => {
                let r = n[t];
                if (e.dynamic) {
                    let t = i.length;
                    e.encode(i, r);
                    let n = s.writeUpdatableValue();
                    l.push(e => {
                        n(e + t)
                    })
                } else e.encode(s, r)
            }), l.forEach(e => {
                e(s.length)
            });
            let d = e.appendWriter(s);
            return d + e.appendWriter(i)
        }

        function u(e, t) {
            let r = [],
                n = e.subReader(0);
            t.forEach(t => {
                let s = null;
                if (t.dynamic) {
                    let r = e.readValue(),
                        i = n.subReader(r.toNumber());
                    try {
                        s = t.decode(i)
                    } catch (e) {
                        if (e.code === a.Logger.errors.BUFFER_OVERRUN) throw e;
                        (s = e).baseType = t.name, s.name = t.localName, s.type = t.type
                    }
                } else try {
                    s = t.decode(e)
                } catch (e) {
                    if (e.code === a.Logger.errors.BUFFER_OVERRUN) throw e;
                    (s = e).baseType = t.name, s.name = t.localName, s.type = t.type
                }
                void 0 != s && r.push(s)
            });
            let s = t.reduce((e, t) => {
                let r = t.localName;
                return r && (e[r] || (e[r] = 0), e[r]++), e
            }, {});
            t.forEach((e, t) => {
                let n = e.localName;
                if (!n || 1 !== s[n] || ("length" === n && (n = "_length"), null != r[n])) return;
                let a = r[t];
                a instanceof Error ? Object.defineProperty(r, n, {
                    enumerable: !0,
                    get: () => {
                        throw a
                    }
                }) : r[n] = a
            });
            for (let e = 0; e < r.length; e++) {
                let t = r[e];
                t instanceof Error && Object.defineProperty(r, e, {
                    enumerable: !0,
                    get: () => {
                        throw t
                    }
                })
            }
            return Object.freeze(r)
        }
        class f extends o.Coder {
            constructor(e, t, r) {
                super("array", e.type + "[" + (t >= 0 ? t : "") + "]", r, -1 === t || e.dynamic), this.coder = e, this.length = t
            }
            defaultValue() {
                let e = this.coder.defaultValue(),
                    t = [];
                for (let r = 0; r < this.length; r++) t.push(e);
                return t
            }
            encode(e, t) {
                Array.isArray(t) || this._throwError("expected array value", t);
                let r = this.length; - 1 === r && (r = t.length, e.writeValue(t.length)), c.checkArgumentCount(t.length, r, "coder array" + (this.localName ? " " + this.localName : ""));
                let n = [];
                for (let e = 0; e < t.length; e++) n.push(this.coder);
                return d(e, n, t)
            }
            decode(e) {
                let t = this.length; - 1 === t && 32 * (t = e.readValue().toNumber()) > e._data.length && c.throwError("insufficient data length", a.Logger.errors.BUFFER_OVERRUN, {
                    length: e._data.length,
                    count: t
                });
                let r = [];
                for (let e = 0; e < t; e++) r.push(new(0, l.AnonymousCoder)(this.coder));
                return e.coerce(this.name, u(e, r))
            }
        }
    }, {
        "@ethersproject/logger": "6NWvR",
        "../_version": "6avgg",
        "./abstract-coder": "9TMyg",
        "./anonymous": "etgPE",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    etgPE: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "AnonymousCoder", () => i);
        var a = e("./abstract-coder");
        "use strict";
        class i extends a.Coder {
            constructor(e) {
                super(e.name, e.type, void 0, e.dynamic), this.coder = e
            }
            defaultValue() {
                return this.coder.defaultValue()
            }
            encode(e, t) {
                return this.coder.encode(e, t)
            }
            decode(e) {
                return this.coder.decode(e)
            }
        }
    }, {
        "./abstract-coder": "9TMyg",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    euYzQ: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "BooleanCoder", () => i);
        var a = e("./abstract-coder");
        "use strict";
        class i extends a.Coder {
            constructor(e) {
                super("bool", "bool", e, !1)
            }
            defaultValue() {
                return !1
            }
            encode(e, t) {
                return e.writeValue(+!!t)
            }
            decode(e) {
                return e.coerce(this.type, !e.readValue().isZero())
            }
        }
    }, {
        "./abstract-coder": "9TMyg",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    kOE2A: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "DynamicBytesCoder", () => o), s.export(r, "BytesCoder", () => l);
        "use strict";
        var a = e("@ethersproject/bytes"),
            i = e("./abstract-coder");
        class o extends i.Coder {
            constructor(e, t) {
                super(e, e, t, !0)
            }
            defaultValue() {
                return "0x"
            }
            encode(e, t) {
                t = (0, a.arrayify)(t);
                let r = e.writeValue(t.length);
                return r + e.writeBytes(t)
            }
            decode(e) {
                return e.readBytes(e.readValue().toNumber(), !0)
            }
        }
        class l extends o {
            constructor(e) {
                super("bytes", e)
            }
            decode(e) {
                return e.coerce(this.name, (0, a.hexlify)(super.decode(e)))
            }
        }
    }, {
        "@ethersproject/bytes": "19SwW",
        "./abstract-coder": "9TMyg",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    dNFj2: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "FixedBytesCoder", () => o);
        "use strict";
        var a = e("@ethersproject/bytes"),
            i = e("./abstract-coder");
        class o extends i.Coder {
            constructor(e, t) {
                let r = "bytes" + String(e);
                super(r, r, t, !1), this.size = e
            }
            defaultValue() {
                return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + 2 * this.size)
            }
            encode(e, t) {
                let r = (0, a.arrayify)(t);
                return r.length !== this.size && this._throwError("incorrect data length", t), e.writeBytes(r)
            }
            decode(e) {
                return e.coerce(this.name, (0, a.hexlify)(e.readBytes(this.size)))
            }
        }
    }, {
        "@ethersproject/bytes": "19SwW",
        "./abstract-coder": "9TMyg",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "2639x": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "NullCoder", () => i);
        var a = e("./abstract-coder");
        "use strict";
        class i extends a.Coder {
            constructor(e) {
                super("null", "", e, !1)
            }
            defaultValue() {
                return null
            }
            encode(e, t) {
                return null != t && this._throwError("not null", t), e.writeBytes([])
            }
            decode(e) {
                return e.readBytes(0), e.coerce(this.name, null)
            }
        }
    }, {
        "./abstract-coder": "9TMyg",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    lHQpm: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "NumberCoder", () => l);
        "use strict";
        var a = e("@ethersproject/bignumber"),
            i = e("@ethersproject/constants"),
            o = e("./abstract-coder");
        class l extends o.Coder {
            constructor(e, t, r) {
                let n = (t ? "int" : "uint") + 8 * e;
                super(n, n, r, !1), this.size = e, this.signed = t
            }
            defaultValue() {
                return 0
            }
            encode(e, t) {
                let r = a.BigNumber.from(t),
                    n = i.MaxUint256.mask(8 * e.wordSize);
                if (this.signed) {
                    let e = n.mask(8 * this.size - 1);
                    (r.gt(e) || r.lt(e.add(i.One).mul(i.NegativeOne))) && this._throwError("value out-of-bounds", t)
                } else(r.lt(i.Zero) || r.gt(n.mask(8 * this.size))) && this._throwError("value out-of-bounds", t);
                return r = r.toTwos(8 * this.size).mask(8 * this.size), this.signed && (r = r.fromTwos(8 * this.size).toTwos(8 * e.wordSize)), e.writeValue(r)
            }
            decode(e) {
                let t = e.readValue().mask(8 * this.size);
                return this.signed && (t = t.fromTwos(8 * this.size)), e.coerce(this.name, t)
            }
        }
    }, {
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/constants": "cSsuf",
        "./abstract-coder": "9TMyg",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "44r1i": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "StringCoder", () => o);
        "use strict";
        var a = e("@ethersproject/strings"),
            i = e("./bytes");
        class o extends i.DynamicBytesCoder {
            constructor(e) {
                super("string", e)
            }
            defaultValue() {
                return ""
            }
            encode(e, t) {
                return super.encode(e, (0, a.toUtf8Bytes)(t))
            }
            decode(e) {
                return (0, a.toUtf8String)(super.decode(e))
            }
        }
    }, {
        "@ethersproject/strings": "edSy2",
        "./bytes": "kOE2A",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "90ORK": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "TupleCoder", () => o);
        "use strict";
        var a = e("./abstract-coder"),
            i = e("./array");
        class o extends a.Coder {
            constructor(e, t) {
                let r = !1,
                    n = [];
                e.forEach(e => {
                    e.dynamic && (r = !0), n.push(e.type)
                }), super("tuple", "tuple(" + n.join(",") + ")", t, r), this.coders = e
            }
            defaultValue() {
                let e = [];
                this.coders.forEach(t => {
                    e.push(t.defaultValue())
                });
                let t = this.coders.reduce((e, t) => {
                    let r = t.localName;
                    return r && (e[r] || (e[r] = 0), e[r]++), e
                }, {});
                return this.coders.forEach((r, n) => {
                    let s = r.localName;
                    s && 1 === t[s] && ("length" === s && (s = "_length"), null == e[s] && (e[s] = e[n]))
                }), Object.freeze(e)
            }
            encode(e, t) {
                return (0, i.pack)(e, this.coders, t)
            }
            decode(e) {
                return e.coerce(this.name, (0, i.unpack)(e, this.coders))
            }
        }
    }, {
        "./abstract-coder": "9TMyg",
        "./array": "2wlJw",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    gOFir: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "checkResultErrors", () => f.checkResultErrors), s.export(r, "LogDescription", () => y), s.export(r, "TransactionDescription", () => b), s.export(r, "ErrorDescription", () => x), s.export(r, "Indexed", () => v), s.export(r, "Interface", () => A);
        "use strict";
        var a = e("@ethersproject/address"),
            i = e("@ethersproject/bignumber"),
            o = e("@ethersproject/bytes"),
            l = e("@ethersproject/hash"),
            c = e("@ethersproject/keccak256"),
            d = e("@ethersproject/properties"),
            u = e("./abi-coder"),
            f = e("./coders/abstract-coder"),
            h = e("./fragments"),
            p = e("@ethersproject/logger"),
            g = e("./_version");
        let m = new(0, p.Logger)(g.version);
        class y extends d.Description {}
        class b extends d.Description {}
        class x extends d.Description {}
        class v extends d.Description {
            static isIndexed(e) {
                return !!(e && e._isIndexed)
            }
        }
        let w = {
            "0x08c379a0": {
                signature: "Error(string)",
                name: "Error",
                inputs: ["string"],
                reason: !0
            },
            "0x4e487b71": {
                signature: "Panic(uint256)",
                name: "Panic",
                inputs: ["uint256"]
            }
        };

        function E(e, t) {
            let r = Error(`deferred error during ABI decoding triggered accessing ${e}`);
            return r.error = t, r
        }
        class A {
            constructor(e) {
                let t = [];
                t = "string" == typeof e ? JSON.parse(e) : e, (0, d.defineReadOnly)(this, "fragments", t.map(e => h.Fragment.from(e)).filter(e => null != e)), (0, d.defineReadOnly)(this, "_abiCoder", (0, d.getStatic)(new.target, "getAbiCoder")()), (0, d.defineReadOnly)(this, "functions", {}), (0, d.defineReadOnly)(this, "errors", {}), (0, d.defineReadOnly)(this, "events", {}), (0, d.defineReadOnly)(this, "structs", {}), this.fragments.forEach(e => {
                    let t = null;
                    switch (e.type) {
                        case "constructor":
                            if (this.deploy) return void m.warn("duplicate definition - constructor");
                            (0, d.defineReadOnly)(this, "deploy", e);
                            return;
                        case "function":
                            t = this.functions;
                            break;
                        case "event":
                            t = this.events;
                            break;
                        case "error":
                            t = this.errors;
                            break;
                        default:
                            return
                    }
                    let r = e.format();
                    if (t[r]) return void m.warn("duplicate definition - " + r);
                    t[r] = e
                }), this.deploy || (0, d.defineReadOnly)(this, "deploy", h.ConstructorFragment.from({
                    payable: !1,
                    type: "constructor"
                })), (0, d.defineReadOnly)(this, "_isInterface", !0)
            }
            format(e) {
                e || (e = h.FormatTypes.full), e === h.FormatTypes.sighash && m.throwArgumentError("interface does not support formatting sighash", "format", e);
                let t = this.fragments.map(t => t.format(e));
                return e === h.FormatTypes.json ? JSON.stringify(t.map(e => JSON.parse(e))) : t
            }
            static getAbiCoder() {
                return u.defaultAbiCoder
            }
            static getAddress(e) {
                return (0, a.getAddress)(e)
            }
            static getSighash(e) {
                return (0, o.hexDataSlice)((0, l.id)(e.format()), 0, 4)
            }
            static getEventTopic(e) {
                return (0, l.id)(e.format())
            }
            getFunction(e) {
                if ((0, o.isHexString)(e)) {
                    for (let t in this.functions)
                        if (e === this.getSighash(t)) return this.functions[t];
                    m.throwArgumentError("no matching function", "sighash", e)
                }
                if (-1 === e.indexOf("(")) {
                    let t = e.trim(),
                        r = Object.keys(this.functions).filter(e => e.split("(")[0] === t);
                    return 0 === r.length ? m.throwArgumentError("no matching function", "name", t) : r.length > 1 && m.throwArgumentError("multiple matching functions", "name", t), this.functions[r[0]]
                }
                let t = this.functions[h.FunctionFragment.fromString(e).format()];
                return t || m.throwArgumentError("no matching function", "signature", e), t
            }
            getEvent(e) {
                if ((0, o.isHexString)(e)) {
                    let t = e.toLowerCase();
                    for (let e in this.events)
                        if (t === this.getEventTopic(e)) return this.events[e];
                    m.throwArgumentError("no matching event", "topichash", t)
                }
                if (-1 === e.indexOf("(")) {
                    let t = e.trim(),
                        r = Object.keys(this.events).filter(e => e.split("(")[0] === t);
                    return 0 === r.length ? m.throwArgumentError("no matching event", "name", t) : r.length > 1 && m.throwArgumentError("multiple matching events", "name", t), this.events[r[0]]
                }
                let t = this.events[h.EventFragment.fromString(e).format()];
                return t || m.throwArgumentError("no matching event", "signature", e), t
            }
            getError(e) {
                if ((0, o.isHexString)(e)) {
                    let t = (0, d.getStatic)(this.constructor, "getSighash");
                    for (let r in this.errors)
                        if (e === t(this.errors[r])) return this.errors[r];
                    m.throwArgumentError("no matching error", "sighash", e)
                }
                if (-1 === e.indexOf("(")) {
                    let t = e.trim(),
                        r = Object.keys(this.errors).filter(e => e.split("(")[0] === t);
                    return 0 === r.length ? m.throwArgumentError("no matching error", "name", t) : r.length > 1 && m.throwArgumentError("multiple matching errors", "name", t), this.errors[r[0]]
                }
                let t = this.errors[h.FunctionFragment.fromString(e).format()];
                return t || m.throwArgumentError("no matching error", "signature", e), t
            }
            getSighash(e) {
                if ("string" == typeof e) try {
                    e = this.getFunction(e)
                } catch (t) {
                    try {
                        e = this.getError(e)
                    } catch (e) {
                        throw t
                    }
                }
                return (0, d.getStatic)(this.constructor, "getSighash")(e)
            }
            getEventTopic(e) {
                return "string" == typeof e && (e = this.getEvent(e)), (0, d.getStatic)(this.constructor, "getEventTopic")(e)
            }
            _decodeParams(e, t) {
                return this._abiCoder.decode(e, t)
            }
            _encodeParams(e, t) {
                return this._abiCoder.encode(e, t)
            }
            encodeDeploy(e) {
                return this._encodeParams(this.deploy.inputs, e || [])
            }
            decodeErrorResult(e, t) {
                "string" == typeof e && (e = this.getError(e));
                let r = (0, o.arrayify)(t);
                return (0, o.hexlify)(r.slice(0, 4)) !== this.getSighash(e) && m.throwArgumentError(`data signature does not match error ${e.name}.`, "data", (0, o.hexlify)(r)), this._decodeParams(e.inputs, r.slice(4))
            }
            encodeErrorResult(e, t) {
                return "string" == typeof e && (e = this.getError(e)), (0, o.hexlify)((0, o.concat)([this.getSighash(e), this._encodeParams(e.inputs, t || [])]))
            }
            decodeFunctionData(e, t) {
                "string" == typeof e && (e = this.getFunction(e));
                let r = (0, o.arrayify)(t);
                return (0, o.hexlify)(r.slice(0, 4)) !== this.getSighash(e) && m.throwArgumentError(`data signature does not match function ${e.name}.`, "data", (0, o.hexlify)(r)), this._decodeParams(e.inputs, r.slice(4))
            }
            encodeFunctionData(e, t) {
                return "string" == typeof e && (e = this.getFunction(e)), (0, o.hexlify)((0, o.concat)([this.getSighash(e), this._encodeParams(e.inputs, t || [])]))
            }
            decodeFunctionResult(e, t) {
                "string" == typeof e && (e = this.getFunction(e));
                let r = (0, o.arrayify)(t),
                    n = null,
                    s = "",
                    a = null,
                    i = null,
                    l = null;
                switch (r.length % this._abiCoder._getWordSize()) {
                    case 0:
                        try {
                            return this._abiCoder.decode(e.outputs, r)
                        } catch (e) {}
                        break;
                    case 4: {
                        let e = (0, o.hexlify)(r.slice(0, 4)),
                            t = w[e];
                        if (t) a = this._abiCoder.decode(t.inputs, r.slice(4)), i = t.name, l = t.signature, t.reason && (n = a[0]), "Error" === i ? s = `; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(a[0])}` : "Panic" === i && (s = `; VM Exception while processing transaction: reverted with panic code ${a[0]}`);
                        else try {
                            let t = this.getError(e);
                            a = this._abiCoder.decode(t.inputs, r.slice(4)), i = t.name, l = t.format()
                        } catch (e) {}
                    }
                }
                return m.throwError("call revert exception" + s, p.Logger.errors.CALL_EXCEPTION, {
                    method: e.format(),
                    data: (0, o.hexlify)(t),
                    errorArgs: a,
                    errorName: i,
                    errorSignature: l,
                    reason: n
                })
            }
            encodeFunctionResult(e, t) {
                return "string" == typeof e && (e = this.getFunction(e)), (0, o.hexlify)(this._abiCoder.encode(e.outputs, t || []))
            }
            encodeFilterTopics(e, t) {
                "string" == typeof e && (e = this.getEvent(e)), t.length > e.inputs.length && m.throwError("too many arguments for " + e.format(), p.Logger.errors.UNEXPECTED_ARGUMENT, {
                    argument: "values",
                    value: t
                });
                let r = [];
                e.anonymous || r.push(this.getEventTopic(e));
                let n = (e, t) => "string" === e.type ? (0, l.id)(t) : "bytes" === e.type ? (0, c.keccak256)((0, o.hexlify)(t)) : ("bool" === e.type && "boolean" == typeof t && (t = t ? "0x01" : "0x00"), e.type.match(/^u?int/) && (t = i.BigNumber.from(t).toHexString()), "address" === e.type && this._abiCoder.encode(["address"], [t]), (0, o.hexZeroPad)((0, o.hexlify)(t), 32));
                for (t.forEach((t, s) => {
                        let a = e.inputs[s];
                        if (!a.indexed) {
                            null != t && m.throwArgumentError("cannot filter non-indexed parameters; must be null", "contract." + a.name, t);
                            return
                        }
                        null == t ? r.push(null) : "array" === a.baseType || "tuple" === a.baseType ? m.throwArgumentError("filtering with tuples or arrays not supported", "contract." + a.name, t) : Array.isArray(t) ? r.push(t.map(e => n(a, e))) : r.push(n(a, t))
                    }); r.length && null === r[r.length - 1];) r.pop();
                return r
            }
            encodeEventLog(e, t) {
                "string" == typeof e && (e = this.getEvent(e));
                let r = [],
                    n = [],
                    s = [];
                return e.anonymous || r.push(this.getEventTopic(e)), t.length !== e.inputs.length && m.throwArgumentError("event arguments/values mismatch", "values", t), e.inputs.forEach((e, a) => {
                    let i = t[a];
                    if (e.indexed)
                        if ("string" === e.type) r.push((0, l.id)(i));
                        else if ("bytes" === e.type) r.push((0, c.keccak256)(i));
                    else if ("tuple" === e.baseType || "array" === e.baseType) throw Error("not implemented");
                    else r.push(this._abiCoder.encode([e.type], [i]));
                    else n.push(e), s.push(i)
                }), {
                    data: this._abiCoder.encode(n, s),
                    topics: r
                }
            }
            decodeEventLog(e, t, r) {
                if ("string" == typeof e && (e = this.getEvent(e)), null != r && !e.anonymous) {
                    let t = this.getEventTopic(e);
                    (0, o.isHexString)(r[0], 32) && r[0].toLowerCase() === t || m.throwError("fragment/topic mismatch", p.Logger.errors.INVALID_ARGUMENT, {
                        argument: "topics[0]",
                        expected: t,
                        value: r[0]
                    }), r = r.slice(1)
                }
                let n = [],
                    s = [],
                    a = [];
                e.inputs.forEach((e, t) => {
                    e.indexed ? "string" === e.type || "bytes" === e.type || "tuple" === e.baseType || "array" === e.baseType ? (n.push(h.ParamType.fromObject({
                        type: "bytes32",
                        name: e.name
                    })), a.push(!0)) : (n.push(e), a.push(!1)) : (s.push(e), a.push(!1))
                });
                let i = null != r ? this._abiCoder.decode(n, (0, o.concat)(r)) : null,
                    l = this._abiCoder.decode(s, t, !0),
                    c = [],
                    d = 0,
                    u = 0;
                e.inputs.forEach((e, t) => {
                    if (e.indexed)
                        if (null == i) c[t] = new v({
                            _isIndexed: !0,
                            hash: null
                        });
                        else if (a[t]) c[t] = new v({
                        _isIndexed: !0,
                        hash: i[u++]
                    });
                    else try {
                        c[t] = i[u++]
                    } catch (e) {
                        c[t] = e
                    } else try {
                        c[t] = l[d++]
                    } catch (e) {
                        c[t] = e
                    }
                    if (e.name && null == c[e.name]) {
                        let r = c[t];
                        r instanceof Error ? Object.defineProperty(c, e.name, {
                            enumerable: !0,
                            get: () => {
                                throw E(`property ${JSON.stringify(e.name)}`, r)
                            }
                        }) : c[e.name] = r
                    }
                });
                for (let e = 0; e < c.length; e++) {
                    let t = c[e];
                    t instanceof Error && Object.defineProperty(c, e, {
                        enumerable: !0,
                        get: () => {
                            throw E(`index ${e}`, t)
                        }
                    })
                }
                return Object.freeze(c)
            }
            parseTransaction(e) {
                let t = this.getFunction(e.data.substring(0, 10).toLowerCase());
                return t ? new b({
                    args: this._abiCoder.decode(t.inputs, "0x" + e.data.substring(10)),
                    functionFragment: t,
                    name: t.name,
                    signature: t.format(),
                    sighash: this.getSighash(t),
                    value: i.BigNumber.from(e.value || "0")
                }) : null
            }
            parseLog(e) {
                let t = this.getEvent(e.topics[0]);
                return !t || t.anonymous ? null : new y({
                    eventFragment: t,
                    name: t.name,
                    signature: t.format(),
                    topic: this.getEventTopic(t),
                    args: this.decodeEventLog(t, e.data, e.topics)
                })
            }
            parseError(e) {
                let t = (0, o.hexlify)(e),
                    r = this.getError(t.substring(0, 10).toLowerCase());
                return r ? new x({
                    args: this._abiCoder.decode(r.inputs, "0x" + t.substring(10)),
                    errorFragment: r,
                    name: r.name,
                    signature: r.format(),
                    sighash: this.getSighash(r)
                }) : null
            }
            static isInterface(e) {
                return !!(e && e._isInterface)
            }
        }
    }, {
        "@ethersproject/address": "7BZuS",
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/hash": "jLDfB",
        "@ethersproject/keccak256": "eWtzg",
        "@ethersproject/properties": "dmdV5",
        "./abi-coder": "eiswb",
        "./coders/abstract-coder": "9TMyg",
        "./fragments": "2aRQ2",
        "@ethersproject/logger": "6NWvR",
        "./_version": "6avgg",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    liyH3: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "contracts/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    euBMB: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "Wallet", () => w), s.export(r, "verifyMessage", () => E), s.export(r, "verifyTypedData", () => A);
        "use strict";
        var a = e("@ethersproject/address"),
            i = e("@ethersproject/abstract-provider"),
            o = e("@ethersproject/abstract-signer"),
            l = e("@ethersproject/bytes"),
            c = e("@ethersproject/hash"),
            d = e("@ethersproject/hdnode"),
            u = e("@ethersproject/keccak256"),
            f = e("@ethersproject/properties"),
            h = e("@ethersproject/random"),
            p = e("@ethersproject/signing-key"),
            g = e("@ethersproject/json-wallets"),
            m = e("@ethersproject/transactions"),
            y = e("@ethersproject/logger"),
            b = e("./_version"),
            x = function(e, t, r, n) {
                return new(r || (r = Promise))(function(s, a) {
                    function i(e) {
                        try {
                            l(n.next(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function o(e) {
                        try {
                            l(n.throw(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? s(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(i, o)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        let v = new(0, y.Logger)(b.version);
        class w extends o.Signer {
            constructor(e, t) {
                var r;
                if (super(), null != (r = e) && (0, l.isHexString)(r.privateKey, 32) && null != r.address) {
                    let t = new(0, p.SigningKey)(e.privateKey);
                    if ((0, f.defineReadOnly)(this, "_signingKey", () => t), (0, f.defineReadOnly)(this, "address", (0, m.computeAddress)(this.publicKey)), this.address !== (0, a.getAddress)(e.address) && v.throwArgumentError("privateKey/address mismatch", "privateKey", "[REDACTED]"), function(e) {
                            let t = e.mnemonic;
                            return t && t.phrase
                        }(e)) {
                        let t = e.mnemonic;
                        (0, f.defineReadOnly)(this, "_mnemonic", () => ({
                            phrase: t.phrase,
                            path: t.path || d.defaultPath,
                            locale: t.locale || "en"
                        }));
                        let r = this.mnemonic,
                            n = d.HDNode.fromMnemonic(r.phrase, null, r.locale).derivePath(r.path);
                        (0, m.computeAddress)(n.privateKey) !== this.address && v.throwArgumentError("mnemonic/address mismatch", "privateKey", "[REDACTED]")
                    } else(0, f.defineReadOnly)(this, "_mnemonic", () => null)
                } else {
                    if (p.SigningKey.isSigningKey(e)) "secp256k1" !== e.curve && v.throwArgumentError("unsupported curve; must be secp256k1", "privateKey", "[REDACTED]"), (0, f.defineReadOnly)(this, "_signingKey", () => e);
                    else {
                        "string" == typeof e && e.match(/^[0-9a-f]*$/i) && 64 === e.length && (e = "0x" + e);
                        let t = new(0, p.SigningKey)(e);
                        (0, f.defineReadOnly)(this, "_signingKey", () => t)
                    }(0, f.defineReadOnly)(this, "_mnemonic", () => null), (0, f.defineReadOnly)(this, "address", (0, m.computeAddress)(this.publicKey))
                }
                t && !i.Provider.isProvider(t) && v.throwArgumentError("invalid provider", "provider", t), (0, f.defineReadOnly)(this, "provider", t || null)
            }
            get mnemonic() {
                return this._mnemonic()
            }
            get privateKey() {
                return this._signingKey().privateKey
            }
            get publicKey() {
                return this._signingKey().publicKey
            }
            getAddress() {
                return Promise.resolve(this.address)
            }
            connect(e) {
                return new w(this, e)
            }
            signTransaction(e) {
                return (0, f.resolveProperties)(e).then(t => {
                    null != t.from && ((0, a.getAddress)(t.from) !== this.address && v.throwArgumentError("transaction from address mismatch", "transaction.from", e.from), delete t.from);
                    let r = this._signingKey().signDigest((0, u.keccak256)((0, m.serialize)(t)));
                    return (0, m.serialize)(t, r)
                })
            }
            signMessage(e) {
                return x(this, void 0, void 0, function*() {
                    return (0, l.joinSignature)(this._signingKey().signDigest((0, c.hashMessage)(e)))
                })
            }
            _signTypedData(e, t, r) {
                return x(this, void 0, void 0, function*() {
                    let n = yield c._TypedDataEncoder.resolveNames(e, t, r, e => (null == this.provider && v.throwError("cannot resolve ENS names without a provider", y.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "resolveName",
                        value: e
                    }), this.provider.resolveName(e)));
                    return (0, l.joinSignature)(this._signingKey().signDigest(c._TypedDataEncoder.hash(n.domain, t, n.value)))
                })
            }
            encrypt(e, t, r) {
                if ("function" != typeof t || r || (r = t, t = {}), r && "function" != typeof r) throw Error("invalid callback");
                return t || (t = {}), (0, g.encryptKeystore)(this, e, t, r)
            }
            static createRandom(e) {
                let t = (0, h.randomBytes)(16);
                e || (e = {}), e.extraEntropy && (t = (0, l.arrayify)((0, l.hexDataSlice)((0, u.keccak256)((0, l.concat)([t, e.extraEntropy])), 0, 16)));
                let r = (0, d.entropyToMnemonic)(t, e.locale);
                return w.fromMnemonic(r, e.path, e.locale)
            }
            static fromEncryptedJson(e, t, r) {
                return (0, g.decryptJsonWallet)(e, t, r).then(e => new w(e))
            }
            static fromEncryptedJsonSync(e, t) {
                return new w((0, g.decryptJsonWalletSync)(e, t))
            }
            static fromMnemonic(e, t, r) {
                return t || (t = d.defaultPath), new w(d.HDNode.fromMnemonic(e, null, r).derivePath(t))
            }
        }

        function E(e, t) {
            return (0, m.recoverAddress)((0, c.hashMessage)(e), t)
        }

        function A(e, t, r, n) {
            return (0, m.recoverAddress)(c._TypedDataEncoder.hash(e, t, r), n)
        }
    }, {
        "@ethersproject/address": "7BZuS",
        "@ethersproject/abstract-provider": "imf57",
        "@ethersproject/abstract-signer": "j6EbC",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/hash": "jLDfB",
        "@ethersproject/hdnode": "2zCqF",
        "@ethersproject/keccak256": "eWtzg",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/random": "5x4el",
        "@ethersproject/signing-key": "a8JOx",
        "@ethersproject/json-wallets": "7BEU7",
        "@ethersproject/transactions": "ctBdV",
        "@ethersproject/logger": "6NWvR",
        "./_version": "2nczW",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "2zCqF": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "defaultPath", () => I), s.export(r, "HDNode", () => S), s.export(r, "mnemonicToSeed", () => R), s.export(r, "mnemonicToEntropy", () => k), s.export(r, "entropyToMnemonic", () => _), s.export(r, "isValidMnemonic", () => T), s.export(r, "getAccountPath", () => C);
        "use strict";
        var a = e("@ethersproject/basex"),
            i = e("@ethersproject/bytes"),
            o = e("@ethersproject/bignumber"),
            l = e("@ethersproject/strings"),
            c = e("@ethersproject/pbkdf2"),
            d = e("@ethersproject/properties"),
            u = e("@ethersproject/signing-key"),
            f = e("@ethersproject/sha2"),
            h = e("@ethersproject/transactions"),
            p = e("@ethersproject/wordlists"),
            g = e("@ethersproject/logger"),
            m = e("./_version");
        let y = new(0, g.Logger)(m.version),
            b = o.BigNumber.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),
            x = (0, l.toUtf8Bytes)("Bitcoin seed");

        function v(e) {
            return (1 << e) - 1 << 8 - e
        }

        function w(e) {
            return (0, i.hexZeroPad)((0, i.hexlify)(e), 32)
        }

        function E(e) {
            return a.Base58.encode((0, i.concat)([e, (0, i.hexDataSlice)((0, f.sha256)((0, f.sha256)(e)), 0, 4)]))
        }

        function A(e) {
            if (null == e) return p.wordlists.en;
            if ("string" == typeof e) {
                let t = p.wordlists[e];
                return null == t && y.throwArgumentError("unknown locale", "wordlist", e), t
            }
            return e
        }
        let j = {},
            I = "m/44'/60'/0'/0/0";
        class S {
            constructor(e, t, r, n, s, a, o, l) {
                if (e !== j) throw Error("HDNode constructor cannot be called directly");
                if (t) {
                    let e = new(0, u.SigningKey)(t);
                    (0, d.defineReadOnly)(this, "privateKey", e.privateKey), (0, d.defineReadOnly)(this, "publicKey", e.compressedPublicKey)
                } else(0, d.defineReadOnly)(this, "privateKey", null), (0, d.defineReadOnly)(this, "publicKey", (0, i.hexlify)(r));
                (0, d.defineReadOnly)(this, "parentFingerprint", n), (0, d.defineReadOnly)(this, "fingerprint", (0, i.hexDataSlice)((0, f.ripemd160)((0, f.sha256)(this.publicKey)), 0, 4)), (0, d.defineReadOnly)(this, "address", (0, h.computeAddress)(this.publicKey)), (0, d.defineReadOnly)(this, "chainCode", s), (0, d.defineReadOnly)(this, "index", a), (0, d.defineReadOnly)(this, "depth", o), null == l ? ((0, d.defineReadOnly)(this, "mnemonic", null), (0, d.defineReadOnly)(this, "path", null)) : "string" == typeof l ? ((0, d.defineReadOnly)(this, "mnemonic", null), (0, d.defineReadOnly)(this, "path", l)) : ((0, d.defineReadOnly)(this, "mnemonic", l), (0, d.defineReadOnly)(this, "path", l.path))
            }
            get extendedKey() {
                if (this.depth >= 256) throw Error("Depth too large!");
                return E((0, i.concat)([null != this.privateKey ? "0x0488ADE4" : "0x0488B21E", (0, i.hexlify)(this.depth), this.parentFingerprint, (0, i.hexZeroPad)((0, i.hexlify)(this.index), 4), this.chainCode, null != this.privateKey ? (0, i.concat)(["0x00", this.privateKey]) : this.publicKey]))
            }
            neuter() {
                return new S(j, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path)
            }
            _derive(e) {
                if (e > 0xffffffff) throw Error("invalid index - " + String(e));
                let t = this.path;
                t && (t += "/" + (0x7fffffff & e));
                let r = new Uint8Array(37);
                if (0x80000000 & e) {
                    if (!this.privateKey) throw Error("cannot derive child of neutered node");
                    r.set((0, i.arrayify)(this.privateKey), 1), t && (t += "'")
                } else r.set((0, i.arrayify)(this.publicKey));
                for (let t = 24; t >= 0; t -= 8) r[33 + (t >> 3)] = e >> 24 - t & 255;
                let n = (0, i.arrayify)((0, f.computeHmac)(f.SupportedAlgorithm.sha512, this.chainCode, r)),
                    s = n.slice(0, 32),
                    a = n.slice(32),
                    l = null,
                    c = null;
                this.privateKey ? l = w(o.BigNumber.from(s).add(this.privateKey).mod(b)) : c = new(0, u.SigningKey)((0, i.hexlify)(s))._addPoint(this.publicKey);
                let d = t,
                    h = this.mnemonic;
                return h && (d = Object.freeze({
                    phrase: h.phrase,
                    path: t,
                    locale: h.locale || "en"
                })), new S(j, l, c, this.fingerprint, w(a), e, this.depth + 1, d)
            }
            derivePath(e) {
                let t = e.split("/");
                if (0 === t.length || "m" === t[0] && 0 !== this.depth) throw Error("invalid path - " + e);
                "m" === t[0] && t.shift();
                let r = this;
                for (let e = 0; e < t.length; e++) {
                    let n = t[e];
                    if (n.match(/^[0-9]+'$/)) {
                        let e = parseInt(n.substring(0, n.length - 1));
                        if (e >= 0x80000000) throw Error("invalid path index - " + n);
                        r = r._derive(0x80000000 + e)
                    } else if (n.match(/^[0-9]+$/)) {
                        let e = parseInt(n);
                        if (e >= 0x80000000) throw Error("invalid path index - " + n);
                        r = r._derive(e)
                    } else throw Error("invalid path component - " + n)
                }
                return r
            }
            static _fromSeed(e, t) {
                let r = (0, i.arrayify)(e);
                if (r.length < 16 || r.length > 64) throw Error("invalid seed");
                let n = (0, i.arrayify)((0, f.computeHmac)(f.SupportedAlgorithm.sha512, x, r));
                return new S(j, w(n.slice(0, 32)), null, "0x00000000", w(n.slice(32)), 0, 0, t)
            }
            static fromMnemonic(e, t, r) {
                return r = A(r), e = _(k(e, r), r), S._fromSeed(R(e, t), {
                    phrase: e,
                    path: "m",
                    locale: r.locale
                })
            }
            static fromSeed(e) {
                return S._fromSeed(e, null)
            }
            static fromExtendedKey(e) {
                let t = a.Base58.decode(e);
                (82 !== t.length || E(t.slice(0, 78)) !== e) && y.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
                let r = t[4],
                    n = (0, i.hexlify)(t.slice(5, 9)),
                    s = parseInt((0, i.hexlify)(t.slice(9, 13)).substring(2), 16),
                    o = (0, i.hexlify)(t.slice(13, 45)),
                    l = t.slice(45, 78);
                switch ((0, i.hexlify)(t.slice(0, 4))) {
                    case "0x0488b21e":
                    case "0x043587cf":
                        return new S(j, null, (0, i.hexlify)(l), n, o, s, r, null);
                    case "0x0488ade4":
                    case "0x04358394 ":
                        if (0 !== l[0]) break;
                        return new S(j, (0, i.hexlify)(l.slice(1)), null, n, o, s, r, null)
                }
                return y.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]")
            }
        }

        function R(e, t) {
            t || (t = "");
            let r = (0, l.toUtf8Bytes)("mnemonic" + t, l.UnicodeNormalizationForm.NFKD);
            return (0, c.pbkdf2)((0, l.toUtf8Bytes)(e, l.UnicodeNormalizationForm.NFKD), r, 2048, 64, "sha512")
        }

        function k(e, t) {
            t = A(t), y.checkNormalize();
            let r = t.split(e);
            if (r.length % 3 != 0) throw Error("invalid mnemonic");
            let n = (0, i.arrayify)(new Uint8Array(Math.ceil(11 * r.length / 8))),
                s = 0;
            for (let e = 0; e < r.length; e++) {
                let a = t.getWordIndex(r[e].normalize("NFKD"));
                if (-1 === a) throw Error("invalid mnemonic");
                for (let e = 0; e < 11; e++) a & 1 << 10 - e && (n[s >> 3] |= 1 << 7 - s % 8), s++
            }
            let a = 32 * r.length / 3,
                o = v(r.length / 3);
            if (((0, i.arrayify)((0, f.sha256)(n.slice(0, a / 8)))[0] & o) != (n[n.length - 1] & o)) throw Error("invalid checksum");
            return (0, i.hexlify)(n.slice(0, a / 8))
        }

        function _(e, t) {
            if (t = A(t), (e = (0, i.arrayify)(e)).length % 4 != 0 || e.length < 16 || e.length > 32) throw Error("invalid entropy");
            let r = [0],
                n = 11;
            for (let t = 0; t < e.length; t++) n > 8 ? (r[r.length - 1] <<= 8, r[r.length - 1] |= e[t], n -= 8) : (r[r.length - 1] <<= n, r[r.length - 1] |= e[t] >> 8 - n, r.push(e[t] & (1 << 8 - n) - 1), n += 3);
            let s = e.length / 4,
                a = (0, i.arrayify)((0, f.sha256)(e))[0] & v(s);
            return r[r.length - 1] <<= s, r[r.length - 1] |= a >> 8 - s, t.join(r.map(e => t.getWord(e)))
        }

        function T(e, t) {
            try {
                return k(e, t), !0
            } catch (e) {}
            return !1
        }

        function C(e) {
            return ("number" != typeof e || e < 0 || e >= 0x80000000 || e % 1) && y.throwArgumentError("invalid account index", "index", e), `m/44'/60'/${e}'/0/0`
        }
    }, {
        "@ethersproject/basex": "Pygpe",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/strings": "edSy2",
        "@ethersproject/pbkdf2": "53AfG",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/signing-key": "a8JOx",
        "@ethersproject/sha2": "bznen",
        "@ethersproject/transactions": "ctBdV",
        "@ethersproject/wordlists": "a2daz",
        "@ethersproject/logger": "6NWvR",
        "./_version": "iqxFg",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "53AfG": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "pbkdf2", () => a.pbkdf2);
        var a = e("./pbkdf2")
    }, {
        "./pbkdf2": "iSJTG",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    iSJTG: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "pbkdf2", () => o);
        "use strict";
        var a = e("@ethersproject/bytes"),
            i = e("@ethersproject/sha2");

        function o(e, t, r, n, s) {
            let o, l, c;
            e = (0, a.arrayify)(e), t = (0, a.arrayify)(t);
            let d = 1,
                u = new Uint8Array(n),
                f = new Uint8Array(t.length + 4);
            f.set(t);
            for (let h = 1; h <= d; h++) {
                f[t.length] = h >> 24 & 255, f[t.length + 1] = h >> 16 & 255, f[t.length + 2] = h >> 8 & 255, f[t.length + 3] = 255 & h;
                let p = (0, a.arrayify)((0, i.computeHmac)(s, e, f));
                o || (c = new Uint8Array(o = p.length), d = Math.ceil(n / o), l = n - (d - 1) * o), c.set(p);
                for (let t = 1; t < r; t++) {
                    p = (0, a.arrayify)((0, i.computeHmac)(s, e, p));
                    for (let e = 0; e < o; e++) c[e] ^= p[e]
                }
                let g = (h - 1) * o,
                    m = h === d ? l : o;
                u.set((0, a.arrayify)(c).slice(0, m), g)
            }
            return (0, a.hexlify)(u)
        }
    }, {
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/sha2": "bznen",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    a2daz: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "logger", () => a.logger), s.export(r, "Wordlist", () => a.Wordlist), s.export(r, "wordlists", () => i.wordlists);
        "use strict";
        var a = e("./wordlist"),
            i = e("./wordlists")
    }, {
        "./wordlist": "kQd0Q",
        "./wordlists": "bk3n1",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    kQd0Q: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "logger", () => c), s.export(r, "Wordlist", () => d);
        "use strict";
        var a = e("@ethersproject/hash"),
            i = e("@ethersproject/properties"),
            o = e("@ethersproject/logger"),
            l = e("./_version");
        let c = new(0, o.Logger)(l.version);
        class d {
            constructor(e) {
                c.checkAbstract(new.target, d), (0, i.defineReadOnly)(this, "locale", e)
            }
            split(e) {
                return e.toLowerCase().split(/ +/g)
            }
            join(e) {
                return e.join(" ")
            }
            static check(e) {
                let t = [];
                for (let r = 0; r < 2048; r++) {
                    let n = e.getWord(r);
                    if (r !== e.getWordIndex(n)) return "0x";
                    t.push(n)
                }
                return (0, a.id)(t.join("\n") + "\n")
            }
            static register(e, t) {
                t || (t = e.locale)
            }
        }
    }, {
        "@ethersproject/hash": "jLDfB",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/logger": "6NWvR",
        "./_version": "V1tr9",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    V1tr9: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "wordlists/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    bk3n1: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "wordlists", () => i);
        var a = e("./lang-en");
        "use strict";
        let i = {
            en: a.langEn
        }
    }, {
        "./lang-en": "3iB3I",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "3iB3I": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "langEn", () => c);
        var a = e("./wordlist");
        "use strict";
        let i = null;

        function o(e) {
            if (null == i && (i = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo".replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" "), "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60" !== a.Wordlist.check(e))) throw i = null, Error("BIP39 Wordlist for en (English) FAILED")
        }
        class l extends a.Wordlist {
            constructor() {
                super("en")
            }
            getWord(e) {
                return o(this), i[e]
            }
            getWordIndex(e) {
                return o(this), i.indexOf(e)
            }
        }
        let c = new l;
        a.Wordlist.register(c)
    }, {
        "./wordlist": "kQd0Q",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    iqxFg: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "hdnode/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "7BEU7": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "decryptCrowdsale", () => a.decrypt), s.export(r, "decryptKeystore", () => o.decrypt), s.export(r, "decryptKeystoreSync", () => o.decryptSync), s.export(r, "encryptKeystore", () => o.encrypt), s.export(r, "isCrowdsaleWallet", () => i.isCrowdsaleWallet), s.export(r, "isKeystoreWallet", () => i.isKeystoreWallet), s.export(r, "getJsonWalletAddress", () => i.getJsonWalletAddress), s.export(r, "decryptJsonWallet", () => l), s.export(r, "decryptJsonWalletSync", () => c);
        "use strict";
        var a = e("./crowdsale"),
            i = e("./inspect"),
            o = e("./keystore");

        function l(e, t, r) {
            if ((0, i.isCrowdsaleWallet)(e)) {
                r && r(0);
                let n = (0, a.decrypt)(e, t);
                return r && r(1), Promise.resolve(n)
            }
            return (0, i.isKeystoreWallet)(e) ? (0, o.decrypt)(e, t, r) : Promise.reject(Error("invalid JSON wallet"))
        }

        function c(e, t) {
            if ((0, i.isCrowdsaleWallet)(e)) return (0, a.decrypt)(e, t);
            if ((0, i.isKeystoreWallet)(e)) return (0, o.decryptSync)(e, t);
            throw Error("invalid JSON wallet")
        }
    }, {
        "./crowdsale": "jecLC",
        "./inspect": "f0RP9",
        "./keystore": "lvmQF",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    jecLC: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "CrowdsaleAccount", () => y), s.export(r, "decrypt", () => b);
        "use strict";
        var a = e("aes-js"),
            i = s.interopDefault(a),
            o = e("@ethersproject/address"),
            l = e("@ethersproject/bytes"),
            c = e("@ethersproject/keccak256"),
            d = e("@ethersproject/pbkdf2"),
            u = e("@ethersproject/strings"),
            f = e("@ethersproject/properties"),
            h = e("@ethersproject/logger"),
            p = e("./_version"),
            g = e("./utils");
        let m = new(0, h.Logger)(p.version);
        class y extends f.Description {
            isCrowdsaleAccount(e) {
                return !!(e && e._isCrowdsaleAccount)
            }
        }

        function b(e, t) {
            let r = JSON.parse(e);
            t = (0, g.getPassword)(t);
            let n = (0, o.getAddress)((0, g.searchPath)(r, "ethaddr")),
                s = (0, g.looseArrayify)((0, g.searchPath)(r, "encseed"));
            s && s.length % 16 == 0 || m.throwArgumentError("invalid encseed", "json", e);
            let a = (0, l.arrayify)((0, d.pbkdf2)(t, t, 2e3, 32, "sha256")).slice(0, 16),
                f = s.slice(0, 16),
                h = s.slice(16),
                p = new i.default.ModeOfOperation.cbc(a, f),
                b = i.default.padding.pkcs7.strip((0, l.arrayify)(p.decrypt(h))),
                x = "";
            for (let e = 0; e < b.length; e++) x += String.fromCharCode(b[e]);
            let v = (0, u.toUtf8Bytes)(x);
            return new y({
                _isCrowdsaleAccount: !0,
                address: n,
                privateKey: (0, c.keccak256)(v)
            })
        }
    }, {
        "aes-js": "1XnEw",
        "@ethersproject/address": "7BZuS",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/keccak256": "eWtzg",
        "@ethersproject/pbkdf2": "53AfG",
        "@ethersproject/strings": "edSy2",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/logger": "6NWvR",
        "./_version": "giv5t",
        "./utils": "fbe9v",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "1XnEw": [function(e, t, r, n) {
        "use strict";
        ! function(e) {
            function r(e) {
                return parseInt(e) === e
            }

            function n(e) {
                if (!r(e.length)) return !1;
                for (var t = 0; t < e.length; t++)
                    if (!r(e[t]) || e[t] < 0 || e[t] > 255) return !1;
                return !0
            }

            function s(e, t) {
                if (e.buffer && ArrayBuffer.isView(e) && "Uint8Array" === e.name) return t && (e = e.slice ? e.slice() : Array.prototype.slice.call(e)), e;
                if (Array.isArray(e)) {
                    if (!n(e)) throw Error("Array contains invalid value: " + e);
                    return new Uint8Array(e)
                }
                if (r(e.length) && n(e)) return new Uint8Array(e);
                throw Error("unsupported array-like object")
            }

            function a(e) {
                return new Uint8Array(e)
            }

            function i(e, t, r, n, s) {
                (null != n || null != s) && (e = e.slice ? e.slice(n, s) : Array.prototype.slice.call(e, n, s)), t.set(e, r)
            }
            var o, l = (o = "0123456789abcdef", {
                    toBytes: function(e) {
                        for (var t = [], r = 0; r < e.length; r += 2) t.push(parseInt(e.substr(r, 2), 16));
                        return t
                    },
                    fromBytes: function(e) {
                        for (var t = [], r = 0; r < e.length; r++) {
                            var n = e[r];
                            t.push(o[(240 & n) >> 4] + o[15 & n])
                        }
                        return t.join("")
                    }
                }),
                c = {
                    16: 10,
                    24: 12,
                    32: 14
                },
                d = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145],
                u = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22],
                f = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125],
                h = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x2010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0xa05050f, 0x2f9a9ab5, 0xe070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x4020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x58f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0xb888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0xc06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x18d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0xd8b8b86, 0xf8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x6030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x78e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x38c8c8f, 0x59a1a1f8, 0x9898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a],
                p = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0xdfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x3020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0xbfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x2f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x8f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0xc080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0xf0a0505, 0xb52f9a9a, 0x90e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x6040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x4f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0xefdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0xa0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x7f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x5060303, 0x1f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616],
                g = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x1030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x40c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x50f0a05, 0x9ab52f9a, 0x7090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x91b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x2060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0xc14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0xb1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0xa1e140a, 0x49db9249, 0x60a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x8181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x3050603, 0xf601f7f6, 0xe121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0xd171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0xf111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16],
                m = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x1010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x4040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x5050f0a, 0x9a9ab52f, 0x707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x9091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x2020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0xc0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0xb0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0xa0a1e14, 0x4949db92, 0x6060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x8081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x3030506, 0xf6f601f7, 0xe0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0xd0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0xf0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c],
                y = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x38f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x2036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x58ae132, 0xa4f6eb75, 0xb83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x7898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0, 0x9808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0xf853856, 0x3daed51e, 0x362d3927, 0xa0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0xc0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0xe090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0xd8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x18c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x80cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742],
                b = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x2c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x7b2eb28, 0x32fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x65e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0xf9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0xae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0xb0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0xd507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x9cd2678, 0xf46e5918, 0x1ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0xe7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x49d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0xcbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857],
                x = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x3934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0xe9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 1047239e3, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x2e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x8a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x63d96dd, 0x5aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0xa47a17c, 0xfe97c42, 0x1ec9f884, 0, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0xd0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x74caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0xb3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x9d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x4dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0xc7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x17139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8],
                v = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x24c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x82b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 679998e3, 0xbfa5b223, 0x36aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x7f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x5bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x6d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0xefffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0xfd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0xa67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x90d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x1269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x4984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0xb412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0xd9541ff, 0xa8017139, 0xcb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0],
                w = [0, 0xe090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x38f5fe7, 0xd8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x58ae132, 0xb83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x605bed5, 0x80cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x9808683, 0x7898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0xa0fd964, 0x406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0xc0a67b1, 0x2036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0xf853856, 0x18c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3],
                E = [0, 0xb0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0xf9357e7, 0x49d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x821bccf, 0x32fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x7b2eb28, 0xcbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x9cd2678, 0x2c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x65e719f, 0xd507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x1ec9ab7, 0xae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0xe7fcd50, 0x571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697],
                A = [0, 0xd0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x3934be3, 0xe9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x5aedd3e, 0x8a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x63d96dd, 0xb3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0xa47a17c, 0x74caf75, 0x1051bd6e, 0x1d5ab367, 1047239e3, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x9d4ea9f, 0x4dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0xfe97c42, 0x2e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0xc7a37a1, 0x17139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46],
                j = [0, 0x90d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0xd9541ff, 0x4984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x82b94f9, 0x1269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x5bed506, 0xcb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 679998e3, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x24c25f5, 0xb412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0xfd9640a, 0x6d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0xa67b10c, 0x36aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x7f2f0f3, 0xefffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];

            function I(e) {
                for (var t = [], r = 0; r < e.length; r += 4) t.push(e[r] << 24 | e[r + 1] << 16 | e[r + 2] << 8 | e[r + 3]);
                return t
            }
            var S = function(e) {
                if (!(this instanceof S)) throw Error("AES must be instanitated with `new`");
                Object.defineProperty(this, "key", {
                    value: s(e, !0)
                }), this._prepare()
            };
            S.prototype._prepare = function() {
                var e = c[this.key.length];
                if (null == e) throw Error("invalid key size (must be 16, 24 or 32 bytes)");
                this._Ke = [], this._Kd = [];
                for (var t = 0; t <= e; t++) this._Ke.push([0, 0, 0, 0]), this._Kd.push([0, 0, 0, 0]);
                for (var r = (e + 1) * 4, n = this.key.length / 4, s = I(this.key), t = 0; t < n; t++) a = t >> 2, this._Ke[a][t % 4] = s[t], this._Kd[e - a][t % 4] = s[t];
                for (var a, i, o = 0, l = n; l < r;) {
                    if (i = s[n - 1], s[0] ^= u[i >> 16 & 255] << 24 ^ u[i >> 8 & 255] << 16 ^ u[255 & i] << 8 ^ u[i >> 24 & 255] ^ d[o] << 24, o += 1, 8 != n)
                        for (var t = 1; t < n; t++) s[t] ^= s[t - 1];
                    else {
                        for (var t = 1; t < n / 2; t++) s[t] ^= s[t - 1];
                        i = s[n / 2 - 1], s[n / 2] ^= u[255 & i] ^ u[i >> 8 & 255] << 8 ^ u[i >> 16 & 255] << 16 ^ u[i >> 24 & 255] << 24;
                        for (var t = n / 2 + 1; t < n; t++) s[t] ^= s[t - 1]
                    }
                    for (var f, h, t = 0; t < n && l < r;) f = l >> 2, h = l % 4, this._Ke[f][h] = s[t], this._Kd[e - f][h] = s[t++], l++
                }
                for (var f = 1; f < e; f++)
                    for (var h = 0; h < 4; h++) i = this._Kd[f][h], this._Kd[f][h] = w[i >> 24 & 255] ^ E[i >> 16 & 255] ^ A[i >> 8 & 255] ^ j[255 & i]
            }, S.prototype.encrypt = function(e) {
                if (16 != e.length) throw Error("invalid plaintext size (must be 16 bytes)");
                for (var t = this._Ke.length - 1, r = [0, 0, 0, 0], n = I(e), s = 0; s < 4; s++) n[s] ^= this._Ke[0][s];
                for (var i = 1; i < t; i++) {
                    for (var s = 0; s < 4; s++) r[s] = h[n[s] >> 24 & 255] ^ p[n[(s + 1) % 4] >> 16 & 255] ^ g[n[(s + 2) % 4] >> 8 & 255] ^ m[255 & n[(s + 3) % 4]] ^ this._Ke[i][s];
                    n = r.slice()
                }
                for (var o, l = a(16), s = 0; s < 4; s++) o = this._Ke[t][s], l[4 * s] = (u[n[s] >> 24 & 255] ^ o >> 24) & 255, l[4 * s + 1] = (u[n[(s + 1) % 4] >> 16 & 255] ^ o >> 16) & 255, l[4 * s + 2] = (u[n[(s + 2) % 4] >> 8 & 255] ^ o >> 8) & 255, l[4 * s + 3] = (u[255 & n[(s + 3) % 4]] ^ o) & 255;
                return l
            }, S.prototype.decrypt = function(e) {
                if (16 != e.length) throw Error("invalid ciphertext size (must be 16 bytes)");
                for (var t = this._Kd.length - 1, r = [0, 0, 0, 0], n = I(e), s = 0; s < 4; s++) n[s] ^= this._Kd[0][s];
                for (var i = 1; i < t; i++) {
                    for (var s = 0; s < 4; s++) r[s] = y[n[s] >> 24 & 255] ^ b[n[(s + 3) % 4] >> 16 & 255] ^ x[n[(s + 2) % 4] >> 8 & 255] ^ v[255 & n[(s + 1) % 4]] ^ this._Kd[i][s];
                    n = r.slice()
                }
                for (var o, l = a(16), s = 0; s < 4; s++) o = this._Kd[t][s], l[4 * s] = (f[n[s] >> 24 & 255] ^ o >> 24) & 255, l[4 * s + 1] = (f[n[(s + 3) % 4] >> 16 & 255] ^ o >> 16) & 255, l[4 * s + 2] = (f[n[(s + 2) % 4] >> 8 & 255] ^ o >> 8) & 255, l[4 * s + 3] = (f[255 & n[(s + 1) % 4]] ^ o) & 255;
                return l
            };
            var R = function(e) {
                if (!(this instanceof R)) throw Error("AES must be instanitated with `new`");
                this.description = "Electronic Code Block", this.name = "ecb", this._aes = new S(e)
            };
            R.prototype.encrypt = function(e) {
                if ((e = s(e)).length % 16 != 0) throw Error("invalid plaintext size (must be multiple of 16 bytes)");
                for (var t = a(e.length), r = a(16), n = 0; n < e.length; n += 16) i(e, r, 0, n, n + 16), i(r = this._aes.encrypt(r), t, n);
                return t
            }, R.prototype.decrypt = function(e) {
                if ((e = s(e)).length % 16 != 0) throw Error("invalid ciphertext size (must be multiple of 16 bytes)");
                for (var t = a(e.length), r = a(16), n = 0; n < e.length; n += 16) i(e, r, 0, n, n + 16), i(r = this._aes.decrypt(r), t, n);
                return t
            };
            var k = function(e, t) {
                if (!(this instanceof k)) throw Error("AES must be instanitated with `new`");
                if (this.description = "Cipher Block Chaining", this.name = "cbc", t) {
                    if (16 != t.length) throw Error("invalid initialation vector size (must be 16 bytes)")
                } else t = a(16);
                this._lastCipherblock = s(t, !0), this._aes = new S(e)
            };
            k.prototype.encrypt = function(e) {
                if ((e = s(e)).length % 16 != 0) throw Error("invalid plaintext size (must be multiple of 16 bytes)");
                for (var t = a(e.length), r = a(16), n = 0; n < e.length; n += 16) {
                    i(e, r, 0, n, n + 16);
                    for (var o = 0; o < 16; o++) r[o] ^= this._lastCipherblock[o];
                    this._lastCipherblock = this._aes.encrypt(r), i(this._lastCipherblock, t, n)
                }
                return t
            }, k.prototype.decrypt = function(e) {
                if ((e = s(e)).length % 16 != 0) throw Error("invalid ciphertext size (must be multiple of 16 bytes)");
                for (var t = a(e.length), r = a(16), n = 0; n < e.length; n += 16) {
                    i(e, r, 0, n, n + 16), r = this._aes.decrypt(r);
                    for (var o = 0; o < 16; o++) t[n + o] = r[o] ^ this._lastCipherblock[o];
                    i(e, this._lastCipherblock, 0, n, n + 16)
                }
                return t
            };
            var _ = function(e, t, r) {
                if (!(this instanceof _)) throw Error("AES must be instanitated with `new`");
                if (this.description = "Cipher Feedback", this.name = "cfb", t) {
                    if (16 != t.length) throw Error("invalid initialation vector size (must be 16 size)")
                } else t = a(16);
                r || (r = 1), this.segmentSize = r, this._shiftRegister = s(t, !0), this._aes = new S(e)
            };
            _.prototype.encrypt = function(e) {
                if (e.length % this.segmentSize != 0) throw Error("invalid plaintext size (must be segmentSize bytes)");
                for (var t, r = s(e, !0), n = 0; n < r.length; n += this.segmentSize) {
                    t = this._aes.encrypt(this._shiftRegister);
                    for (var a = 0; a < this.segmentSize; a++) r[n + a] ^= t[a];
                    i(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), i(r, this._shiftRegister, 16 - this.segmentSize, n, n + this.segmentSize)
                }
                return r
            }, _.prototype.decrypt = function(e) {
                if (e.length % this.segmentSize != 0) throw Error("invalid ciphertext size (must be segmentSize bytes)");
                for (var t, r = s(e, !0), n = 0; n < r.length; n += this.segmentSize) {
                    t = this._aes.encrypt(this._shiftRegister);
                    for (var a = 0; a < this.segmentSize; a++) r[n + a] ^= t[a];
                    i(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), i(e, this._shiftRegister, 16 - this.segmentSize, n, n + this.segmentSize)
                }
                return r
            };
            var T = function(e, t) {
                if (!(this instanceof T)) throw Error("AES must be instanitated with `new`");
                if (this.description = "Output Feedback", this.name = "ofb", t) {
                    if (16 != t.length) throw Error("invalid initialation vector size (must be 16 bytes)")
                } else t = a(16);
                this._lastPrecipher = s(t, !0), this._lastPrecipherIndex = 16, this._aes = new S(e)
            };
            T.prototype.encrypt = function(e) {
                for (var t = s(e, !0), r = 0; r < t.length; r++) 16 === this._lastPrecipherIndex && (this._lastPrecipher = this._aes.encrypt(this._lastPrecipher), this._lastPrecipherIndex = 0), t[r] ^= this._lastPrecipher[this._lastPrecipherIndex++];
                return t
            }, T.prototype.decrypt = T.prototype.encrypt;
            var C = function(e) {
                if (!(this instanceof C)) throw Error("Counter must be instanitated with `new`");
                0 === e || e || (e = 1), "number" == typeof e ? (this._counter = a(16), this.setValue(e)) : this.setBytes(e)
            };
            C.prototype.setValue = function(e) {
                if ("number" != typeof e || parseInt(e) != e) throw Error("invalid counter value (must be an integer)");
                for (var t = 15; t >= 0; --t) this._counter[t] = e % 256, e >>= 8
            }, C.prototype.setBytes = function(e) {
                if (16 != (e = s(e, !0)).length) throw Error("invalid counter bytes size (must be 16 bytes)");
                this._counter = e
            }, C.prototype.increment = function() {
                for (var e = 15; e >= 0; e--)
                    if (255 === this._counter[e]) this._counter[e] = 0;
                    else {
                        this._counter[e]++;
                        break
                    }
            };
            var P = function(e, t) {
                if (!(this instanceof P)) throw Error("AES must be instanitated with `new`");
                this.description = "Counter", this.name = "ctr", t instanceof C || (t = new C(t)), this._counter = t, this._remainingCounter = null, this._remainingCounterIndex = 16, this._aes = new S(e)
            };
            P.prototype.encrypt = function(e) {
                for (var t = s(e, !0), r = 0; r < t.length; r++) 16 === this._remainingCounterIndex && (this._remainingCounter = this._aes.encrypt(this._counter._counter), this._remainingCounterIndex = 0, this._counter.increment()), t[r] ^= this._remainingCounter[this._remainingCounterIndex++];
                return t
            }, P.prototype.decrypt = P.prototype.encrypt, t.exports = {
                AES: S,
                Counter: C,
                ModeOfOperation: {
                    ecb: R,
                    cbc: k,
                    cfb: _,
                    ofb: T,
                    ctr: P
                },
                utils: {
                    hex: l,
                    utf8: {
                        toBytes: function(e) {
                            var t = [],
                                r = 0;
                            for (e = encodeURI(e); r < e.length;) {
                                var n = e.charCodeAt(r++);
                                37 === n ? (t.push(parseInt(e.substr(r, 2), 16)), r += 2) : t.push(n)
                            }
                            return s(t)
                        },
                        fromBytes: function(e) {
                            for (var t = [], r = 0; r < e.length;) {
                                var n = e[r];
                                n < 128 ? (t.push(String.fromCharCode(n)), r++) : n > 191 && n < 224 ? (t.push(String.fromCharCode((31 & n) << 6 | 63 & e[r + 1])), r += 2) : (t.push(String.fromCharCode((15 & n) << 12 | (63 & e[r + 1]) << 6 | 63 & e[r + 2])), r += 3)
                            }
                            return t.join("")
                        }
                    }
                },
                padding: {
                    pkcs7: {
                        pad: function(e) {
                            var t = 16 - (e = s(e, !0)).length % 16,
                                r = a(e.length + t);
                            i(e, r);
                            for (var n = e.length; n < r.length; n++) r[n] = t;
                            return r
                        },
                        strip: function(e) {
                            if ((e = s(e, !0)).length < 16) throw Error("PKCS#7 invalid length");
                            var t = e[e.length - 1];
                            if (t > 16) throw Error("PKCS#7 padding byte out of range");
                            for (var r = e.length - t, n = 0; n < t; n++)
                                if (e[r + n] !== t) throw Error("PKCS#7 invalid padding byte");
                            var o = a(r);
                            return i(e, o, 0, 0, r), o
                        }
                    }
                },
                _arrayTest: {
                    coerceArray: s,
                    createArray: a,
                    copyArray: i
                }
            }
        }(0)
    }, {}],
    giv5t: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "json-wallets/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    fbe9v: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "looseArrayify", () => o), s.export(r, "zpad", () => l), s.export(r, "getPassword", () => c), s.export(r, "searchPath", () => d), s.export(r, "uuidV4", () => u);
        "use strict";
        var a = e("@ethersproject/bytes"),
            i = e("@ethersproject/strings");

        function o(e) {
            return "string" == typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), (0, a.arrayify)(e)
        }

        function l(e, t) {
            for (e = String(e); e.length < t;) e = "0" + e;
            return e
        }

        function c(e) {
            return "string" == typeof e ? (0, i.toUtf8Bytes)(e, i.UnicodeNormalizationForm.NFKC) : (0, a.arrayify)(e)
        }

        function d(e, t) {
            let r = e,
                n = t.toLowerCase().split("/");
            for (let e = 0; e < n.length; e++) {
                let t = null;
                for (let s in r)
                    if (s.toLowerCase() === n[e]) {
                        t = r[s];
                        break
                    } if (null === t) return null;
                r = t
            }
            return r
        }

        function u(e) {
            let t = (0, a.arrayify)(e);
            t[6] = 15 & t[6] | 64, t[8] = 63 & t[8] | 128;
            let r = (0, a.hexlify)(t);
            return [r.substring(2, 10), r.substring(10, 14), r.substring(14, 18), r.substring(18, 22), r.substring(22, 34)].join("-")
        }
    }, {
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/strings": "edSy2",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    f0RP9: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "isCrowdsaleWallet", () => i), s.export(r, "isKeystoreWallet", () => o), s.export(r, "getJsonWalletAddress", () => l);
        var a = e("@ethersproject/address");
        "use strict";

        function i(e) {
            let t = null;
            try {
                t = JSON.parse(e)
            } catch (e) {
                return !1
            }
            return t.encseed && t.ethaddr
        }

        function o(e) {
            let t = null;
            try {
                t = JSON.parse(e)
            } catch (e) {
                return !1
            }
            return !!t.version && parseInt(t.version) === t.version && 3 === parseInt(t.version)
        }

        function l(e) {
            if (i(e)) try {
                return (0, a.getAddress)(JSON.parse(e).ethaddr)
            } catch (e) {
                return null
            }
            if (o(e)) try {
                return (0, a.getAddress)(JSON.parse(e).address)
            } catch (e) {}
            return null
        }
    }, {
        "@ethersproject/address": "7BZuS",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    lvmQF: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "KeystoreAccount", () => E), s.export(r, "decryptSync", () => R), s.export(r, "decrypt", () => k), s.export(r, "encrypt", () => _);
        "use strict";
        var a = e("aes-js"),
            i = s.interopDefault(a),
            o = e("scrypt-js"),
            l = s.interopDefault(o),
            c = e("@ethersproject/address"),
            d = e("@ethersproject/bytes"),
            u = e("@ethersproject/hdnode"),
            f = e("@ethersproject/keccak256"),
            h = e("@ethersproject/pbkdf2"),
            p = e("@ethersproject/random"),
            g = e("@ethersproject/properties"),
            m = e("@ethersproject/transactions"),
            y = e("./utils"),
            b = e("@ethersproject/logger"),
            x = e("./_version");
        let v = new(0, b.Logger)(x.version);

        function w(e) {
            return null != e && e.mnemonic && e.mnemonic.phrase
        }
        class E extends g.Description {
            isKeystoreAccount(e) {
                return !!(e && e._isKeystoreAccount)
            }
        }

        function A(e, t) {
            let r = (0, y.looseArrayify)((0, y.searchPath)(e, "crypto/ciphertext"));
            if ((0, d.hexlify)((0, f.keccak256)((0, d.concat)([t.slice(16, 32), r]))).substring(2) !== (0, y.searchPath)(e, "crypto/mac").toLowerCase()) throw Error("invalid password");
            let n = function(e, t, r) {
                if ("aes-128-ctr" === (0, y.searchPath)(e, "crypto/cipher")) {
                    let n = (0, y.looseArrayify)((0, y.searchPath)(e, "crypto/cipherparams/iv")),
                        s = new i.default.Counter(n),
                        a = new i.default.ModeOfOperation.ctr(t, s);
                    return (0, d.arrayify)(a.decrypt(r))
                }
                return null
            }(e, t.slice(0, 16), r);
            n || v.throwError("unsupported cipher", b.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "decrypt"
            });
            let s = t.slice(32, 64),
                a = (0, m.computeAddress)(n);
            if (e.address) {
                let t = e.address.toLowerCase();
                if ("0x" !== t.substring(0, 2) && (t = "0x" + t), (0, c.getAddress)(t) !== a) throw Error("address mismatch")
            }
            let o = {
                _isKeystoreAccount: !0,
                address: a,
                privateKey: (0, d.hexlify)(n)
            };
            if ("0.1" === (0, y.searchPath)(e, "x-ethers/version")) {
                let t = (0, y.looseArrayify)((0, y.searchPath)(e, "x-ethers/mnemonicCiphertext")),
                    r = (0, y.looseArrayify)((0, y.searchPath)(e, "x-ethers/mnemonicCounter")),
                    n = new i.default.Counter(r),
                    a = new i.default.ModeOfOperation.ctr(s, n),
                    l = (0, y.searchPath)(e, "x-ethers/path") || u.defaultPath,
                    c = (0, y.searchPath)(e, "x-ethers/locale") || "en",
                    f = (0, d.arrayify)(a.decrypt(t));
                try {
                    let e = (0, u.entropyToMnemonic)(f, c),
                        t = u.HDNode.fromMnemonic(e, null, c).derivePath(l);
                    if (t.privateKey != o.privateKey) throw Error("mnemonic mismatch");
                    o.mnemonic = t.mnemonic
                } catch (e) {
                    if (e.code !== b.Logger.errors.INVALID_ARGUMENT || "wordlist" !== e.argument) throw e
                }
            }
            return new E(o)
        }

        function j(e, t, r, n, s) {
            return (0, d.arrayify)((0, h.pbkdf2)(e, t, r, n, s))
        }

        function I(e, t, r, n, s) {
            return Promise.resolve(j(e, t, r, n, s))
        }

        function S(e, t, r, n, s) {
            let a = (0, y.getPassword)(t),
                i = (0, y.searchPath)(e, "crypto/kdf");
            if (i && "string" == typeof i) {
                let t = function(e, t) {
                    return v.throwArgumentError("invalid key-derivation function parameters", e, t)
                };
                if ("scrypt" === i.toLowerCase()) {
                    let r = (0, y.looseArrayify)((0, y.searchPath)(e, "crypto/kdfparams/salt")),
                        o = parseInt((0, y.searchPath)(e, "crypto/kdfparams/n")),
                        l = parseInt((0, y.searchPath)(e, "crypto/kdfparams/r")),
                        c = parseInt((0, y.searchPath)(e, "crypto/kdfparams/p"));
                    o && l && c || t("kdf", i), (o & o - 1) != 0 && t("N", o);
                    let d = parseInt((0, y.searchPath)(e, "crypto/kdfparams/dklen"));
                    return 32 !== d && t("dklen", d), n(a, r, o, l, c, 64, s)
                }
                if ("pbkdf2" === i.toLowerCase()) {
                    let n = (0, y.looseArrayify)((0, y.searchPath)(e, "crypto/kdfparams/salt")),
                        s = null,
                        i = (0, y.searchPath)(e, "crypto/kdfparams/prf");
                    "hmac-sha256" === i ? s = "sha256" : "hmac-sha512" === i ? s = "sha512" : t("prf", i);
                    let o = parseInt((0, y.searchPath)(e, "crypto/kdfparams/c")),
                        l = parseInt((0, y.searchPath)(e, "crypto/kdfparams/dklen"));
                    return 32 !== l && t("dklen", l), r(a, n, o, l, s)
                }
            }
            return v.throwArgumentError("unsupported key-derivation function", "kdf", i)
        }

        function R(e, t) {
            let r = JSON.parse(e),
                n = S(r, t, j, l.default.syncScrypt);
            return A(r, n)
        }

        function k(e, t, r) {
            var n, s, a, i;
            return n = this, s = void 0, a = void 0, i = function*() {
                let n = JSON.parse(e),
                    s = yield S(n, t, I, l.default.scrypt, r);
                return A(n, s)
            }, new(a || (a = Promise))(function(e, t) {
                function r(e) {
                    try {
                        l(i.next(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function o(e) {
                    try {
                        l(i.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }

                function l(t) {
                    var n;
                    t.done ? e(t.value) : ((n = t.value) instanceof a ? n : new a(function(e) {
                        e(n)
                    })).then(r, o)
                }
                l((i = i.apply(n, s || [])).next())
            })
        }

        function _(e, t, r, n) {
            try {
                if ((0, c.getAddress)(e.address) !== (0, m.computeAddress)(e.privateKey)) throw Error("address/privateKey mismatch");
                if (w(e)) {
                    let t = e.mnemonic;
                    if (u.HDNode.fromMnemonic(t.phrase, null, t.locale).derivePath(t.path || u.defaultPath).privateKey != e.privateKey) throw Error("mnemonic mismatch")
                }
            } catch (e) {
                return Promise.reject(e)
            }
            "function" != typeof r || n || (n = r, r = {}), r || (r = {});
            let s = (0, d.arrayify)(e.privateKey),
                a = (0, y.getPassword)(t),
                o = null,
                h = null,
                g = null;
            if (w(e)) {
                let t = e.mnemonic;
                o = (0, d.arrayify)((0, u.mnemonicToEntropy)(t.phrase, t.locale || "en")), h = t.path || u.defaultPath, g = t.locale || "en"
            }
            let b = r.client;
            b || (b = "ethers.js");
            let x = null;
            x = r.salt ? (0, d.arrayify)(r.salt) : (0, p.randomBytes)(32);
            let v = null;
            if (r.iv) {
                if (16 !== (v = (0, d.arrayify)(r.iv)).length) throw Error("invalid iv")
            } else v = (0, p.randomBytes)(16);
            let E = null;
            if (r.uuid) {
                if (16 !== (E = (0, d.arrayify)(r.uuid)).length) throw Error("invalid uuid")
            } else E = (0, p.randomBytes)(16);
            let A = 131072,
                j = 8,
                I = 1;
            return r.scrypt && (r.scrypt.N && (A = r.scrypt.N), r.scrypt.r && (j = r.scrypt.r), r.scrypt.p && (I = r.scrypt.p)), l.default.scrypt(a, x, A, j, I, 64, n).then(t => {
                let r = (t = (0, d.arrayify)(t)).slice(0, 16),
                    n = t.slice(16, 32),
                    a = t.slice(32, 64),
                    l = new i.default.Counter(v),
                    c = new i.default.ModeOfOperation.ctr(r, l),
                    u = (0, d.arrayify)(c.encrypt(s)),
                    m = (0, f.keccak256)((0, d.concat)([n, u])),
                    w = {
                        address: e.address.substring(2).toLowerCase(),
                        id: (0, y.uuidV4)(E),
                        version: 3,
                        crypto: {
                            cipher: "aes-128-ctr",
                            cipherparams: {
                                iv: (0, d.hexlify)(v).substring(2)
                            },
                            ciphertext: (0, d.hexlify)(u).substring(2),
                            kdf: "scrypt",
                            kdfparams: {
                                salt: (0, d.hexlify)(x).substring(2),
                                n: A,
                                dklen: 32,
                                p: I,
                                r: j
                            },
                            mac: m.substring(2)
                        }
                    };
                if (o) {
                    let e = (0, p.randomBytes)(16),
                        t = new i.default.Counter(e),
                        r = new i.default.ModeOfOperation.ctr(a, t),
                        n = (0, d.arrayify)(r.encrypt(o)),
                        s = new Date,
                        l = s.getUTCFullYear() + "-" + (0, y.zpad)(s.getUTCMonth() + 1, 2) + "-" + (0, y.zpad)(s.getUTCDate(), 2) + "T" + (0, y.zpad)(s.getUTCHours(), 2) + "-" + (0, y.zpad)(s.getUTCMinutes(), 2) + "-" + (0, y.zpad)(s.getUTCSeconds(), 2) + ".0Z";
                    w["x-ethers"] = {
                        client: b,
                        gethFilename: "UTC--" + l + "--" + w.address,
                        mnemonicCounter: (0, d.hexlify)(e).substring(2),
                        mnemonicCiphertext: (0, d.hexlify)(n).substring(2),
                        path: h,
                        locale: g,
                        version: "0.1"
                    }
                }
                return JSON.stringify(w)
            })
        }
    }, {
        "aes-js": "1XnEw",
        "scrypt-js": "81Ky2",
        "@ethersproject/address": "7BZuS",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/hdnode": "2zCqF",
        "@ethersproject/keccak256": "eWtzg",
        "@ethersproject/pbkdf2": "53AfG",
        "@ethersproject/random": "5x4el",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/transactions": "ctBdV",
        "./utils": "fbe9v",
        "@ethersproject/logger": "6NWvR",
        "./_version": "giv5t",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "81Ky2": [function(e, t, r, n) {
        "use strict";
        ! function(e) {
            function n(e) {
                let t = new Uint32Array([0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0xfc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x6ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2]),
                    r = 0x6a09e667,
                    n = 0xbb67ae85,
                    s = 0x3c6ef372,
                    a = 0xa54ff53a,
                    i = 0x510e527f,
                    o = 0x9b05688c,
                    l = 0x1f83d9ab,
                    c = 0x5be0cd19,
                    d = new Uint32Array(64);

                function u(e) {
                    let u = 0,
                        f = e.length;
                    for (; f >= 64;) {
                        let h = r,
                            p = n,
                            g = s,
                            m = a,
                            y = i,
                            b = o,
                            x = l,
                            v = c,
                            w, E, A, j, I;
                        for (E = 0; E < 16; E++) A = u + 4 * E, d[E] = (255 & e[A]) << 24 | (255 & e[A + 1]) << 16 | (255 & e[A + 2]) << 8 | 255 & e[A + 3];
                        for (E = 16; E < 64; E++) j = ((w = d[E - 2]) >>> 17 | w << 15) ^ (w >>> 19 | w << 13) ^ w >>> 10, I = ((w = d[E - 15]) >>> 7 | w << 25) ^ (w >>> 18 | w << 14) ^ w >>> 3, d[E] = (j + d[E - 7] | 0) + (I + d[E - 16] | 0) | 0;
                        for (E = 0; E < 64; E++) j = (((y >>> 6 | y << 26) ^ (y >>> 11 | y << 21) ^ (y >>> 25 | y << 7)) + (y & b ^ ~y & x) | 0) + (v + (t[E] + d[E] | 0) | 0) | 0, I = ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + (h & p ^ h & g ^ p & g) | 0, v = x, x = b, b = y, y = m + j | 0, m = g, g = p, p = h, h = j + I | 0;
                        r = r + h | 0, n = n + p | 0, s = s + g | 0, a = a + m | 0, i = i + y | 0, o = o + b | 0, l = l + x | 0, c = c + v | 0, u += 64, f -= 64
                    }
                }
                u(e);
                let f, h = e.length % 64,
                    p = e.length / 0x20000000 | 0,
                    g = e.length << 3,
                    m = h < 56 ? 56 : 120,
                    y = e.slice(e.length - h, e.length);
                for (y.push(128), f = h + 1; f < m; f++) y.push(0);
                return y.push(p >>> 24 & 255), y.push(p >>> 16 & 255), y.push(p >>> 8 & 255), y.push(p >>> 0 & 255), y.push(g >>> 24 & 255), y.push(g >>> 16 & 255), y.push(g >>> 8 & 255), y.push(g >>> 0 & 255), u(y), [r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, r >>> 0 & 255, n >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, n >>> 0 & 255, s >>> 24 & 255, s >>> 16 & 255, s >>> 8 & 255, s >>> 0 & 255, a >>> 24 & 255, a >>> 16 & 255, a >>> 8 & 255, a >>> 0 & 255, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, i >>> 0 & 255, o >>> 24 & 255, o >>> 16 & 255, o >>> 8 & 255, o >>> 0 & 255, l >>> 24 & 255, l >>> 16 & 255, l >>> 8 & 255, l >>> 0 & 255, c >>> 24 & 255, c >>> 16 & 255, c >>> 8 & 255, c >>> 0 & 255]
            }

            function s(e, t, r) {
                let s;
                e = e.length <= 64 ? e : n(e);
                let a = 64 + t.length + 4,
                    i = Array(a),
                    o = Array(64),
                    l = [];
                for (s = 0; s < 64; s++) i[s] = 54;
                for (s = 0; s < e.length; s++) i[s] ^= e[s];
                for (s = 0; s < t.length; s++) i[64 + s] = t[s];
                for (s = a - 4; s < a; s++) i[s] = 0;
                for (s = 0; s < 64; s++) o[s] = 92;
                for (s = 0; s < e.length; s++) o[s] ^= e[s];

                function c() {
                    for (let e = a - 1; e >= a - 4; e--) {
                        if (i[e]++, i[e] <= 255) return;
                        i[e] = 0
                    }
                }
                for (; r >= 32;) c(), l = l.concat(n(o.concat(n(i)))), r -= 32;
                return r > 0 && (c(), l = l.concat(n(o.concat(n(i))).slice(0, r))), l
            }

            function a(e, t, r, n, s) {
                let a;
                for (l(e, (2 * r - 1) * 16, s, 0, 16), a = 0; a < 2 * r; a++) o(e, 16 * a, s, 16),
                    function(e, t) {
                        l(e, 0, t, 0, 16);
                        for (let e = 8; e > 0; e -= 2) t[4] ^= i(t[0] + t[12], 7), t[8] ^= i(t[4] + t[0], 9), t[12] ^= i(t[8] + t[4], 13), t[0] ^= i(t[12] + t[8], 18), t[9] ^= i(t[5] + t[1], 7), t[13] ^= i(t[9] + t[5], 9), t[1] ^= i(t[13] + t[9], 13), t[5] ^= i(t[1] + t[13], 18), t[14] ^= i(t[10] + t[6], 7), t[2] ^= i(t[14] + t[10], 9), t[6] ^= i(t[2] + t[14], 13), t[10] ^= i(t[6] + t[2], 18), t[3] ^= i(t[15] + t[11], 7), t[7] ^= i(t[3] + t[15], 9), t[11] ^= i(t[7] + t[3], 13), t[15] ^= i(t[11] + t[7], 18), t[1] ^= i(t[0] + t[3], 7), t[2] ^= i(t[1] + t[0], 9), t[3] ^= i(t[2] + t[1], 13), t[0] ^= i(t[3] + t[2], 18), t[6] ^= i(t[5] + t[4], 7), t[7] ^= i(t[6] + t[5], 9), t[4] ^= i(t[7] + t[6], 13), t[5] ^= i(t[4] + t[7], 18), t[11] ^= i(t[10] + t[9], 7), t[8] ^= i(t[11] + t[10], 9), t[9] ^= i(t[8] + t[11], 13), t[10] ^= i(t[9] + t[8], 18), t[12] ^= i(t[15] + t[14], 7), t[13] ^= i(t[12] + t[15], 9), t[14] ^= i(t[13] + t[12], 13), t[15] ^= i(t[14] + t[13], 18);
                        for (let r = 0; r < 16; ++r) e[r] += t[r]
                    }(s, n), l(s, 0, e, t + 16 * a, 16);
                for (a = 0; a < r; a++) l(e, t + 32 * a, e, 16 * a, 16);
                for (a = 0; a < r; a++) l(e, t + (2 * a + 1) * 16, e, (a + r) * 16, 16)
            }

            function i(e, t) {
                return e << t | e >>> 32 - t
            }

            function o(e, t, r, n) {
                for (let s = 0; s < n; s++) r[s] ^= e[t + s]
            }

            function l(e, t, r, n, s) {
                for (; s--;) r[n++] = e[t++]
            }

            function c(e) {
                if (!e || "number" != typeof e.length) return !1;
                for (let t = 0; t < e.length; t++) {
                    let r = e[t];
                    if ("number" != typeof r || r % 1 || r < 0 || r >= 256) return !1
                }
                return !0
            }

            function d(e, t) {
                if ("number" != typeof e || e % 1) throw Error("invalid " + t);
                return e
            }

            function u(e, t, r, n, i, u, f) {
                let h;
                if (r = d(r, "N"), n = d(n, "r"), i = d(i, "p"), u = d(u, "dkLen"), 0 === r || (r & r - 1) != 0) throw Error("N must be power of 2");
                if (r > 0x7fffffff / 128 / n) throw Error("N too large");
                if (n > 0x7fffffff / 128 / i) throw Error("r too large");
                if (!c(e)) throw Error("password must be an array or buffer");
                if (e = Array.prototype.slice.call(e), !c(t)) throw Error("salt must be an array or buffer");
                t = Array.prototype.slice.call(t);
                let p = s(e, t, 128 * i * n),
                    g = new Uint32Array(32 * i * n);
                for (let e = 0; e < g.length; e++) {
                    let t = 4 * e;
                    g[e] = (255 & p[t + 3]) << 24 | (255 & p[t + 2]) << 16 | (255 & p[t + 1]) << 8 | 255 & p[t + 0]
                }
                let m = new Uint32Array(64 * n),
                    y = new Uint32Array(32 * n * r),
                    b = 32 * n,
                    x = new Uint32Array(16),
                    v = new Uint32Array(16),
                    w = i * r * 2,
                    E = 0,
                    A = null,
                    j = !1,
                    I = 0,
                    S = 0,
                    R, k = f ? parseInt(1e3 / n) : 0xffffffff,
                    _ = "undefined" != typeof setImmediate ? setImmediate : setTimeout,
                    T = function() {
                        let t;
                        if (j) return f(Error("cancelled"), E / w);
                        switch (I) {
                            case 0:
                                l(g, h = 32 * S * n, m, 0, b), I = 1, R = 0;
                            case 1:
                                (t = r - R) > k && (t = k);
                                for (let e = 0; e < t; e++) l(m, 0, y, (R + e) * b, b), a(m, b, n, x, v);
                                if (R += t, E += t, f) {
                                    let e = parseInt(1e3 * E / w);
                                    if (e !== A) {
                                        if (j = f(null, E / w)) break;
                                        A = e
                                    }
                                }
                                if (R < r) break;
                                R = 0, I = 2;
                            case 2:
                                (t = r - R) > k && (t = k);
                                for (let e = 0; e < t; e++) o(y, (m[(2 * n - 1) * 16] & r - 1) * b, m, b), a(m, b, n, x, v);
                                if (R += t, E += t, f) {
                                    let e = parseInt(1e3 * E / w);
                                    if (e !== A) {
                                        if (j = f(null, E / w)) break;
                                        A = e
                                    }
                                }
                                if (R < r) break;
                                if (l(m, 0, g, h, b), ++S < i) {
                                    I = 0;
                                    break
                                }
                                p = [];
                                for (let e = 0; e < g.length; e++) p.push((0 | g[e]) & 255), p.push(g[e] >> 8 & 255), p.push(g[e] >> 16 & 255), p.push(g[e] >> 24 & 255);
                                let c = s(e, p, u);
                                return f && f(null, 1, c), c
                        }
                        f && _(T)
                    };
                if (!f)
                    for (;;) {
                        let e = T();
                        if (void 0 != e) return e
                    }
                T()
            }
            let f = {
                scrypt: function(e, t, r, n, s, a, i) {
                    return new Promise(function(o, l) {
                        let c = 0;
                        i && i(0), u(e, t, r, n, s, a, function(e, t, r) {
                            if (e) l(e);
                            else if (r) i && 1 !== c && i(1), o(new Uint8Array(r));
                            else if (i && t !== c) return c = t, i(t)
                        })
                    })
                },
                syncScrypt: function(e, t, r, n, s, a) {
                    return new Uint8Array(u(e, t, r, n, s, a))
                }
            };
            void 0 !== r ? t.exports = f : "function" == typeof define && define.amd ? define(f) : e && (e.scrypt && (e._scrypt = e.scrypt), e.scrypt = f)
        }(this)
    }, {}],
    "2nczW": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "wallet/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "7jy5m": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "AbiCoder", () => a.AbiCoder), s.export(r, "defaultAbiCoder", () => a.defaultAbiCoder), s.export(r, "Fragment", () => a.Fragment), s.export(r, "ConstructorFragment", () => a.ConstructorFragment), s.export(r, "ErrorFragment", () => a.ErrorFragment), s.export(r, "EventFragment", () => a.EventFragment), s.export(r, "FunctionFragment", () => a.FunctionFragment), s.export(r, "ParamType", () => a.ParamType), s.export(r, "FormatTypes", () => a.FormatTypes), s.export(r, "checkResultErrors", () => a.checkResultErrors), s.export(r, "Logger", () => p.Logger), s.export(r, "RLP", () => x), s.export(r, "_fetchData", () => I._fetchData), s.export(r, "fetchJson", () => I.fetchJson), s.export(r, "poll", () => I.poll), s.export(r, "checkProperties", () => b.checkProperties), s.export(r, "deepCopy", () => b.deepCopy), s.export(r, "defineReadOnly", () => b.defineReadOnly), s.export(r, "getStatic", () => b.getStatic), s.export(r, "resolveProperties", () => b.resolveProperties), s.export(r, "shallowCopy", () => b.shallowCopy), s.export(r, "arrayify", () => c.arrayify), s.export(r, "concat", () => c.concat), s.export(r, "stripZeros", () => c.stripZeros), s.export(r, "zeroPad", () => c.zeroPad), s.export(r, "isBytes", () => c.isBytes), s.export(r, "isBytesLike", () => c.isBytesLike), s.export(r, "defaultPath", () => u.defaultPath), s.export(r, "HDNode", () => u.HDNode), s.export(r, "SigningKey", () => v.SigningKey), s.export(r, "Interface", () => a.Interface), s.export(r, "LogDescription", () => a.LogDescription), s.export(r, "TransactionDescription", () => a.TransactionDescription), s.export(r, "base58", () => l.Base58), s.export(r, "base64", () => o), s.export(r, "hexlify", () => c.hexlify), s.export(r, "isHexString", () => c.isHexString), s.export(r, "hexConcat", () => c.hexConcat), s.export(r, "hexStripZeros", () => c.hexStripZeros), s.export(r, "hexValue", () => c.hexValue), s.export(r, "hexZeroPad", () => c.hexZeroPad), s.export(r, "hexDataLength", () => c.hexDataLength), s.export(r, "hexDataSlice", () => c.hexDataSlice), s.export(r, "nameprep", () => w.nameprep), s.export(r, "_toEscapedUtf8String", () => w._toEscapedUtf8String), s.export(r, "toUtf8Bytes", () => w.toUtf8Bytes), s.export(r, "toUtf8CodePoints", () => w.toUtf8CodePoints), s.export(r, "toUtf8String", () => w.toUtf8String), s.export(r, "Utf8ErrorFuncs", () => w.Utf8ErrorFuncs), s.export(r, "formatBytes32String", () => w.formatBytes32String), s.export(r, "parseBytes32String", () => w.parseBytes32String), s.export(r, "dnsEncode", () => d.dnsEncode), s.export(r, "hashMessage", () => d.hashMessage), s.export(r, "namehash", () => d.namehash), s.export(r, "isValidName", () => d.isValidName), s.export(r, "id", () => d.id), s.export(r, "_TypedDataEncoder", () => d._TypedDataEncoder), s.export(r, "getAddress", () => i.getAddress), s.export(r, "getIcapAddress", () => i.getIcapAddress), s.export(r, "getContractAddress", () => i.getContractAddress), s.export(r, "getCreate2Address", () => i.getCreate2Address), s.export(r, "isAddress", () => i.isAddress), s.export(r, "formatEther", () => A.formatEther), s.export(r, "parseEther", () => A.parseEther), s.export(r, "formatUnits", () => A.formatUnits), s.export(r, "parseUnits", () => A.parseUnits), s.export(r, "commify", () => A.commify), s.export(r, "computeHmac", () => g.computeHmac), s.export(r, "keccak256", () => h.keccak256), s.export(r, "ripemd160", () => g.ripemd160), s.export(r, "sha256", () => g.sha256), s.export(r, "sha512", () => g.sha512), s.export(r, "randomBytes", () => y.randomBytes), s.export(r, "shuffled", () => y.shuffled), s.export(r, "solidityPack", () => m.pack), s.export(r, "solidityKeccak256", () => m.keccak256), s.export(r, "soliditySha256", () => m.sha256), s.export(r, "splitSignature", () => c.splitSignature), s.export(r, "joinSignature", () => c.joinSignature), s.export(r, "accessListify", () => E.accessListify), s.export(r, "parseTransaction", () => E.parse), s.export(r, "serializeTransaction", () => E.serialize), s.export(r, "TransactionTypes", () => E.TransactionTypes), s.export(r, "getJsonWalletAddress", () => f.getJsonWalletAddress), s.export(r, "computeAddress", () => E.computeAddress), s.export(r, "recoverAddress", () => E.recoverAddress), s.export(r, "computePublicKey", () => v.computePublicKey), s.export(r, "recoverPublicKey", () => v.recoverPublicKey), s.export(r, "verifyMessage", () => j.verifyMessage), s.export(r, "verifyTypedData", () => j.verifyTypedData), s.export(r, "getAccountPath", () => u.getAccountPath), s.export(r, "mnemonicToEntropy", () => u.mnemonicToEntropy), s.export(r, "entropyToMnemonic", () => u.entropyToMnemonic), s.export(r, "isValidMnemonic", () => u.isValidMnemonic), s.export(r, "mnemonicToSeed", () => u.mnemonicToSeed), s.export(r, "SupportedAlgorithm", () => g.SupportedAlgorithm), s.export(r, "UnicodeNormalizationForm", () => w.UnicodeNormalizationForm), s.export(r, "Utf8ErrorReason", () => w.Utf8ErrorReason), s.export(r, "Indexed", () => a.Indexed);
        "use strict";
        var a = e("@ethersproject/abi"),
            i = e("@ethersproject/address"),
            o = e("@ethersproject/base64"),
            l = e("@ethersproject/basex"),
            c = e("@ethersproject/bytes"),
            d = e("@ethersproject/hash"),
            u = e("@ethersproject/hdnode"),
            f = e("@ethersproject/json-wallets"),
            h = e("@ethersproject/keccak256"),
            p = e("@ethersproject/logger"),
            g = e("@ethersproject/sha2"),
            m = e("@ethersproject/solidity"),
            y = e("@ethersproject/random"),
            b = e("@ethersproject/properties"),
            x = e("@ethersproject/rlp"),
            v = e("@ethersproject/signing-key"),
            w = e("@ethersproject/strings"),
            E = e("@ethersproject/transactions"),
            A = e("@ethersproject/units"),
            j = e("@ethersproject/wallet"),
            I = e("@ethersproject/web")
    }, {
        "@ethersproject/abi": "gbtNr",
        "@ethersproject/address": "7BZuS",
        "@ethersproject/base64": "dIiCi",
        "@ethersproject/basex": "Pygpe",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/hash": "jLDfB",
        "@ethersproject/hdnode": "2zCqF",
        "@ethersproject/json-wallets": "7BEU7",
        "@ethersproject/keccak256": "eWtzg",
        "@ethersproject/logger": "6NWvR",
        "@ethersproject/sha2": "bznen",
        "@ethersproject/solidity": "fUvC2",
        "@ethersproject/random": "5x4el",
        "@ethersproject/properties": "dmdV5",
        "@ethersproject/rlp": "1wlks",
        "@ethersproject/signing-key": "a8JOx",
        "@ethersproject/strings": "edSy2",
        "@ethersproject/transactions": "ctBdV",
        "@ethersproject/units": "atzpk",
        "@ethersproject/wallet": "euBMB",
        "@ethersproject/web": "5uH8k",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    fUvC2: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "pack", () => m), s.export(r, "keccak256", () => y), s.export(r, "sha256", () => b);
        "use strict";
        var a = e("@ethersproject/bignumber"),
            i = e("@ethersproject/bytes"),
            o = e("@ethersproject/keccak256"),
            l = e("@ethersproject/sha2"),
            c = e("@ethersproject/strings"),
            d = e("@ethersproject/logger"),
            u = e("./_version");
        let f = RegExp("^bytes([0-9]+)$"),
            h = RegExp("^(u?int)([0-9]*)$"),
            p = RegExp("^(.*)\\[([0-9]*)\\]$"),
            g = new(0, d.Logger)(u.version);

        function m(e, t) {
            e.length != t.length && g.throwArgumentError("wrong number of values; expected ${ types.length }", "values", t);
            let r = [];
            return e.forEach(function(e, n) {
                r.push(function e(t, r, n) {
                    switch (t) {
                        case "address":
                            if (n) return (0, i.zeroPad)(r, 32);
                            return (0, i.arrayify)(r);
                        case "string":
                            return (0, c.toUtf8Bytes)(r);
                        case "bytes":
                            return (0, i.arrayify)(r);
                        case "bool":
                            if (r = r ? "0x01" : "0x00", n) return (0, i.zeroPad)(r, 32);
                            return (0, i.arrayify)(r)
                    }
                    let s = t.match(h);
                    if (s) {
                        let e = parseInt(s[2] || "256");
                        return (s[2] && String(e) !== s[2] || e % 8 != 0 || 0 === e || e > 256) && g.throwArgumentError("invalid number type", "type", t), n && (e = 256), r = a.BigNumber.from(r).toTwos(e), (0, i.zeroPad)(r, e / 8)
                    }
                    if (s = t.match(f)) {
                        let e = parseInt(s[1]);
                        return ((String(e) !== s[1] || 0 === e || e > 32) && g.throwArgumentError("invalid bytes type", "type", t), (0, i.arrayify)(r).byteLength !== e && g.throwArgumentError(`invalid value for ${t}`, "value", r), n) ? (0, i.arrayify)((r + "0000000000000000000000000000000000000000000000000000000000000000").substring(0, 66)) : r
                    }
                    if ((s = t.match(p)) && Array.isArray(r)) {
                        let n = s[1];
                        parseInt(s[2] || String(r.length)) != r.length && g.throwArgumentError(`invalid array length for ${t}`, "value", r);
                        let a = [];
                        return r.forEach(function(t) {
                            a.push(e(n, t, !0))
                        }), (0, i.concat)(a)
                    }
                    return g.throwArgumentError("invalid type", "type", t)
                }(e, t[n]))
            }), (0, i.hexlify)((0, i.concat)(r))
        }

        function y(e, t) {
            return (0, o.keccak256)(m(e, t))
        }

        function b(e, t) {
            return (0, l.sha256)(m(e, t))
        }
    }, {
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/bytes": "19SwW",
        "@ethersproject/keccak256": "eWtzg",
        "@ethersproject/sha2": "bznen",
        "@ethersproject/strings": "edSy2",
        "@ethersproject/logger": "6NWvR",
        "./_version": "csbL3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    csbL3: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "solidity/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    atzpk: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "commify", () => d), s.export(r, "formatUnits", () => u), s.export(r, "parseUnits", () => f), s.export(r, "formatEther", () => h), s.export(r, "parseEther", () => p);
        "use strict";
        var a = e("@ethersproject/bignumber"),
            i = e("@ethersproject/logger"),
            o = e("./_version");
        let l = new(0, i.Logger)(o.version),
            c = ["wei", "kwei", "mwei", "gwei", "szabo", "finney", "ether"];

        function d(e) {
            let t = String(e).split(".");
            (t.length > 2 || !t[0].match(/^-?[0-9]*$/) || t[1] && !t[1].match(/^[0-9]*$/) || "." === e || "-." === e) && l.throwArgumentError("invalid value", "value", e);
            let r = t[0],
                n = "";
            for ("-" === r.substring(0, 1) && (n = "-", r = r.substring(1));
                "0" === r.substring(0, 1);) r = r.substring(1);
            "" === r && (r = "0");
            let s = "";
            for (2 === t.length && (s = "." + (t[1] || "0")); s.length > 2 && "0" === s[s.length - 1];) s = s.substring(0, s.length - 1);
            let a = [];
            for (; r.length;)
                if (r.length <= 3) {
                    a.unshift(r);
                    break
                } else {
                    let e = r.length - 3;
                    a.unshift(r.substring(e)), r = r.substring(0, e)
                } return n + a.join(",") + s
        }

        function u(e, t) {
            if ("string" == typeof t) {
                let e = c.indexOf(t); - 1 !== e && (t = 3 * e)
            }
            return (0, a.formatFixed)(e, null != t ? t : 18)
        }

        function f(e, t) {
            if ("string" != typeof e && l.throwArgumentError("value must be a string", "value", e), "string" == typeof t) {
                let e = c.indexOf(t); - 1 !== e && (t = 3 * e)
            }
            return (0, a.parseFixed)(e, null != t ? t : 18)
        }

        function h(e) {
            return u(e, 18)
        }

        function p(e) {
            return f(e, 18)
        }
    }, {
        "@ethersproject/bignumber": "hIcBX",
        "@ethersproject/logger": "6NWvR",
        "./_version": "fmwkF",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    fmwkF: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "units/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    lHxZw: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "version", () => a);
        let a = "ethers/5.8.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    gddYA: [function(e, t, r, n) {
        "use strict";
        var s = Object.prototype.hasOwnProperty,
            a = "~";

        function i() {}

        function o(e, t, r) {
            this.fn = e, this.context = t, this.once = r || !1
        }

        function l(e, t, r, n, s) {
            if ("function" != typeof r) throw TypeError("The listener must be a function");
            var i = new o(r, n || e, s),
                l = a ? a + t : t;
            return e._events[l] ? e._events[l].fn ? e._events[l] = [e._events[l], i] : e._events[l].push(i) : (e._events[l] = i, e._eventsCount++), e
        }

        function c(e, t) {
            0 == --e._eventsCount ? e._events = new i : delete e._events[t]
        }

        function d() {
            this._events = new i, this._eventsCount = 0
        }
        Object.create && (i.prototype = Object.create(null), new i().__proto__ || (a = !1)), d.prototype.eventNames = function() {
            var e, t, r = [];
            if (0 === this._eventsCount) return r;
            for (t in e = this._events) s.call(e, t) && r.push(a ? t.slice(1) : t);
            return Object.getOwnPropertySymbols ? r.concat(Object.getOwnPropertySymbols(e)) : r
        }, d.prototype.listeners = function(e) {
            var t = a ? a + e : e,
                r = this._events[t];
            if (!r) return [];
            if (r.fn) return [r.fn];
            for (var n = 0, s = r.length, i = Array(s); n < s; n++) i[n] = r[n].fn;
            return i
        }, d.prototype.listenerCount = function(e) {
            var t = a ? a + e : e,
                r = this._events[t];
            return r ? r.fn ? 1 : r.length : 0
        }, d.prototype.emit = function(e, t, r, n, s, i) {
            var o = a ? a + e : e;
            if (!this._events[o]) return !1;
            var l, c, d = this._events[o],
                u = arguments.length;
            if (d.fn) {
                switch (d.once && this.removeListener(e, d.fn, void 0, !0), u) {
                    case 1:
                        return d.fn.call(d.context), !0;
                    case 2:
                        return d.fn.call(d.context, t), !0;
                    case 3:
                        return d.fn.call(d.context, t, r), !0;
                    case 4:
                        return d.fn.call(d.context, t, r, n), !0;
                    case 5:
                        return d.fn.call(d.context, t, r, n, s), !0;
                    case 6:
                        return d.fn.call(d.context, t, r, n, s, i), !0
                }
                for (c = 1, l = Array(u - 1); c < u; c++) l[c - 1] = arguments[c];
                d.fn.apply(d.context, l)
            } else {
                var f, h = d.length;
                for (c = 0; c < h; c++) switch (d[c].once && this.removeListener(e, d[c].fn, void 0, !0), u) {
                    case 1:
                        d[c].fn.call(d[c].context);
                        break;
                    case 2:
                        d[c].fn.call(d[c].context, t);
                        break;
                    case 3:
                        d[c].fn.call(d[c].context, t, r);
                        break;
                    case 4:
                        d[c].fn.call(d[c].context, t, r, n);
                        break;
                    default:
                        if (!l)
                            for (f = 1, l = Array(u - 1); f < u; f++) l[f - 1] = arguments[f];
                        d[c].fn.apply(d[c].context, l)
                }
            }
            return !0
        }, d.prototype.on = function(e, t, r) {
            return l(this, e, t, r, !1)
        }, d.prototype.once = function(e, t, r) {
            return l(this, e, t, r, !0)
        }, d.prototype.removeListener = function(e, t, r, n) {
            var s = a ? a + e : e;
            if (!this._events[s]) return this;
            if (!t) return c(this, s), this;
            var i = this._events[s];
            if (i.fn) i.fn !== t || n && !i.once || r && i.context !== r || c(this, s);
            else {
                for (var o = 0, l = [], d = i.length; o < d; o++)(i[o].fn !== t || n && !i[o].once || r && i[o].context !== r) && l.push(i[o]);
                l.length ? this._events[s] = 1 === l.length ? l[0] : l : c(this, s)
            }
            return this
        }, d.prototype.removeAllListeners = function(e) {
            var t;
            return e ? (t = a ? a + e : e, this._events[t] && c(this, t)) : (this._events = new i, this._eventsCount = 0), this
        }, d.prototype.off = d.prototype.removeListener, d.prototype.addListener = d.prototype.on, d.prefixed = a, d.EventEmitter = d, t.exports = d
    }, {}],
    kXgGE: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "compactDecrypt", () => a.compactDecrypt), s.export(r, "flattenedDecrypt", () => i.flattenedDecrypt), s.export(r, "generalDecrypt", () => o.generalDecrypt), s.export(r, "GeneralEncrypt", () => l.GeneralEncrypt), s.export(r, "compactVerify", () => c.compactVerify), s.export(r, "flattenedVerify", () => d.flattenedVerify), s.export(r, "generalVerify", () => u.generalVerify), s.export(r, "jwtVerify", () => f.jwtVerify), s.export(r, "jwtDecrypt", () => h.jwtDecrypt), s.export(r, "CompactEncrypt", () => p.CompactEncrypt), s.export(r, "FlattenedEncrypt", () => g.FlattenedEncrypt), s.export(r, "CompactSign", () => m.CompactSign), s.export(r, "FlattenedSign", () => y.FlattenedSign), s.export(r, "GeneralSign", () => b.GeneralSign), s.export(r, "SignJWT", () => x.SignJWT), s.export(r, "EncryptJWT", () => v.EncryptJWT), s.export(r, "calculateJwkThumbprint", () => w.calculateJwkThumbprint), s.export(r, "calculateJwkThumbprintUri", () => w.calculateJwkThumbprintUri), s.export(r, "EmbeddedJWK", () => E.EmbeddedJWK), s.export(r, "createLocalJWKSet", () => A.createLocalJWKSet), s.export(r, "createRemoteJWKSet", () => j.createRemoteJWKSet), s.export(r, "jwksCache", () => j.jwksCache), s.export(r, "experimental_jwksCache", () => j.experimental_jwksCache), s.export(r, "UnsecuredJWT", () => I.UnsecuredJWT), s.export(r, "exportPKCS8", () => S.exportPKCS8), s.export(r, "exportSPKI", () => S.exportSPKI), s.export(r, "exportJWK", () => S.exportJWK), s.export(r, "importSPKI", () => R.importSPKI), s.export(r, "importPKCS8", () => R.importPKCS8), s.export(r, "importX509", () => R.importX509), s.export(r, "importJWK", () => R.importJWK), s.export(r, "decodeProtectedHeader", () => k.decodeProtectedHeader), s.export(r, "decodeJwt", () => _.decodeJwt), s.export(r, "errors", () => T), s.export(r, "generateKeyPair", () => C.generateKeyPair), s.export(r, "generateSecret", () => P.generateSecret), s.export(r, "base64url", () => O), s.export(r, "cryptoRuntime", () => M.default);
        var a = e("./jwe/compact/decrypt.js"),
            i = e("./jwe/flattened/decrypt.js"),
            o = e("./jwe/general/decrypt.js"),
            l = e("./jwe/general/encrypt.js"),
            c = e("./jws/compact/verify.js"),
            d = e("./jws/flattened/verify.js"),
            u = e("./jws/general/verify.js"),
            f = e("./jwt/verify.js"),
            h = e("./jwt/decrypt.js"),
            p = e("./jwe/compact/encrypt.js"),
            g = e("./jwe/flattened/encrypt.js"),
            m = e("./jws/compact/sign.js"),
            y = e("./jws/flattened/sign.js"),
            b = e("./jws/general/sign.js"),
            x = e("./jwt/sign.js"),
            v = e("./jwt/encrypt.js"),
            w = e("./jwk/thumbprint.js"),
            E = e("./jwk/embedded.js"),
            A = e("./jwks/local.js"),
            j = e("./jwks/remote.js"),
            I = e("./jwt/unsecured.js"),
            S = e("./key/export.js"),
            R = e("./key/import.js"),
            k = e("./util/decode_protected_header.js"),
            _ = e("./util/decode_jwt.js"),
            T = e("./util/errors.js"),
            C = e("./key/generate_key_pair.js"),
            P = e("./key/generate_secret.js"),
            O = e("./util/base64url.js"),
            N = e("./util/runtime.js"),
            M = s.interopDefault(N)
    }, {
        "./jwe/compact/decrypt.js": "7DFBy",
        "./jwe/flattened/decrypt.js": "luo4b",
        "./jwe/general/decrypt.js": "8zfCc",
        "./jwe/general/encrypt.js": "3SkdU",
        "./jws/compact/verify.js": "dqf6f",
        "./jws/flattened/verify.js": "dx6in",
        "./jws/general/verify.js": "dUaF5",
        "./jwt/verify.js": "kEUL7",
        "./jwt/decrypt.js": "2hBcA",
        "./jwe/compact/encrypt.js": "3oyTC",
        "./jwe/flattened/encrypt.js": "38HbS",
        "./jws/compact/sign.js": "fw8ji",
        "./jws/flattened/sign.js": "1BlEG",
        "./jws/general/sign.js": "5keNb",
        "./jwt/sign.js": "6ZXe2",
        "./jwt/encrypt.js": "4bdxA",
        "./jwk/thumbprint.js": "hlmFr",
        "./jwk/embedded.js": "bAeYV",
        "./jwks/local.js": "ljm8x",
        "./jwks/remote.js": "fONdD",
        "./jwt/unsecured.js": "TdmmA",
        "./key/export.js": "fy0WI",
        "./key/import.js": "azICy",
        "./util/decode_protected_header.js": "7jXGQ",
        "./util/decode_jwt.js": "eIcG3",
        "./util/errors.js": "2MROB",
        "./key/generate_key_pair.js": "ktMh4",
        "./key/generate_secret.js": "1pU2l",
        "./util/base64url.js": "gHZ5h",
        "./util/runtime.js": "bIO4P",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "7DFBy": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "compactDecrypt", () => l);
        var a = e("../flattened/decrypt.js"),
            i = e("../../util/errors.js"),
            o = e("../../lib/buffer_utils.js");
        async function l(e, t, r) {
            if (e instanceof Uint8Array && (e = o.decoder.decode(e)), "string" != typeof e) throw new(0, i.JWEInvalid)("Compact JWE must be a string or Uint8Array");
            let {
                0: n,
                1: s,
                2: l,
                3: c,
                4: d,
                length: u
            } = e.split(".");
            if (5 !== u) throw new(0, i.JWEInvalid)("Invalid Compact JWE");
            let f = await (0, a.flattenedDecrypt)({
                    ciphertext: c,
                    iv: l || void 0,
                    protected: n,
                    tag: d || void 0,
                    encrypted_key: s || void 0
                }, t, r),
                h = {
                    plaintext: f.plaintext,
                    protectedHeader: f.protectedHeader
                };
            return "function" == typeof t ? {
                ...h,
                key: f.key
            } : h
        }
    }, {
        "../flattened/decrypt.js": "luo4b",
        "../../util/errors.js": "2MROB",
        "../../lib/buffer_utils.js": "3OSXK",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    luo4b: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "flattenedDecrypt", () => E);
        var a = e("../../runtime/base64url.js"),
            i = e("../../runtime/decrypt.js"),
            o = s.interopDefault(i),
            l = e("../../util/errors.js"),
            c = e("../../lib/is_disjoint.js"),
            d = s.interopDefault(c),
            u = e("../../lib/is_object.js"),
            f = s.interopDefault(u),
            h = e("../../lib/decrypt_key_management.js"),
            p = s.interopDefault(h),
            g = e("../../lib/buffer_utils.js"),
            m = e("../../lib/cek.js"),
            y = s.interopDefault(m),
            b = e("../../lib/validate_crit.js"),
            x = s.interopDefault(b),
            v = e("../../lib/validate_algorithms.js"),
            w = s.interopDefault(v);
        async function E(e, t, r) {
            let n, s, i, c, u, h, m;
            if (!(0, f.default)(e)) throw new(0, l.JWEInvalid)("Flattened JWE must be an object");
            if (void 0 === e.protected && void 0 === e.header && void 0 === e.unprotected) throw new(0, l.JWEInvalid)("JOSE Header missing");
            if (void 0 !== e.iv && "string" != typeof e.iv) throw new(0, l.JWEInvalid)("JWE Initialization Vector incorrect type");
            if ("string" != typeof e.ciphertext) throw new(0, l.JWEInvalid)("JWE Ciphertext missing or incorrect type");
            if (void 0 !== e.tag && "string" != typeof e.tag) throw new(0, l.JWEInvalid)("JWE Authentication Tag incorrect type");
            if (void 0 !== e.protected && "string" != typeof e.protected) throw new(0, l.JWEInvalid)("JWE Protected Header incorrect type");
            if (void 0 !== e.encrypted_key && "string" != typeof e.encrypted_key) throw new(0, l.JWEInvalid)("JWE Encrypted Key incorrect type");
            if (void 0 !== e.aad && "string" != typeof e.aad) throw new(0, l.JWEInvalid)("JWE AAD incorrect type");
            if (void 0 !== e.header && !(0, f.default)(e.header)) throw new(0, l.JWEInvalid)("JWE Shared Unprotected Header incorrect type");
            if (void 0 !== e.unprotected && !(0, f.default)(e.unprotected)) throw new(0, l.JWEInvalid)("JWE Per-Recipient Unprotected Header incorrect type");
            if (e.protected) try {
                let t = (0, a.decode)(e.protected);
                n = JSON.parse(g.decoder.decode(t))
            } catch {
                throw new(0, l.JWEInvalid)("JWE Protected Header is invalid")
            }
            if (!(0, d.default)(n, e.header, e.unprotected)) throw new(0, l.JWEInvalid)("JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint");
            let b = {
                ...n,
                ...e.header,
                ...e.unprotected
            };
            if ((0, x.default)(l.JWEInvalid, new Map, r?.crit, n, b), void 0 !== b.zip) throw new(0, l.JOSENotSupported)('JWE "zip" (Compression Algorithm) Header Parameter is not supported.');
            let {
                alg: v,
                enc: E
            } = b;
            if ("string" != typeof v || !v) throw new(0, l.JWEInvalid)("missing JWE Algorithm (alg) in JWE Header");
            if ("string" != typeof E || !E) throw new(0, l.JWEInvalid)("missing JWE Encryption Algorithm (enc) in JWE Header");
            let A = r && (0, w.default)("keyManagementAlgorithms", r.keyManagementAlgorithms),
                j = r && (0, w.default)("contentEncryptionAlgorithms", r.contentEncryptionAlgorithms);
            if (A && !A.has(v) || !A && v.startsWith("PBES2")) throw new(0, l.JOSEAlgNotAllowed)('"alg" (Algorithm) Header Parameter value not allowed');
            if (j && !j.has(E)) throw new(0, l.JOSEAlgNotAllowed)('"enc" (Encryption Algorithm) Header Parameter value not allowed');
            if (void 0 !== e.encrypted_key) try {
                s = (0, a.decode)(e.encrypted_key)
            } catch {
                throw new(0, l.JWEInvalid)("Failed to base64url decode the encrypted_key")
            }
            let I = !1;
            "function" == typeof t && (t = await t(n, e), I = !0);
            try {
                i = await (0, p.default)(v, t, s, b, r)
            } catch (e) {
                if (e instanceof TypeError || e instanceof l.JWEInvalid || e instanceof l.JOSENotSupported) throw e;
                i = (0, y.default)(E)
            }
            if (void 0 !== e.iv) try {
                c = (0, a.decode)(e.iv)
            } catch {
                throw new(0, l.JWEInvalid)("Failed to base64url decode the iv")
            }
            if (void 0 !== e.tag) try {
                u = (0, a.decode)(e.tag)
            } catch {
                throw new(0, l.JWEInvalid)("Failed to base64url decode the tag")
            }
            let S = g.encoder.encode(e.protected ?? "");
            h = void 0 !== e.aad ? (0, g.concat)(S, g.encoder.encode("."), g.encoder.encode(e.aad)) : S;
            try {
                m = (0, a.decode)(e.ciphertext)
            } catch {
                throw new(0, l.JWEInvalid)("Failed to base64url decode the ciphertext")
            }
            let R = {
                plaintext: await (0, o.default)(E, i, m, c, u, h)
            };
            if (void 0 !== e.protected && (R.protectedHeader = n), void 0 !== e.aad) try {
                R.additionalAuthenticatedData = (0, a.decode)(e.aad)
            } catch {
                throw new(0, l.JWEInvalid)("Failed to base64url decode the aad")
            }
            return (void 0 !== e.unprotected && (R.sharedUnprotectedHeader = e.unprotected), void 0 !== e.header && (R.unprotectedHeader = e.header), I) ? {
                ...R,
                key: t
            } : R
        }
    }, {
        "../../runtime/base64url.js": "By2uJ",
        "../../runtime/decrypt.js": "iJrMx",
        "../../util/errors.js": "2MROB",
        "../../lib/is_disjoint.js": "kFS6o",
        "../../lib/is_object.js": "kQMV3",
        "../../lib/decrypt_key_management.js": "jBn3k",
        "../../lib/buffer_utils.js": "3OSXK",
        "../../lib/cek.js": "bsH55",
        "../../lib/validate_crit.js": "6XGo3",
        "../../lib/validate_algorithms.js": "6NazR",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    By2uJ: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "encodeBase64", () => i), s.export(r, "encode", () => o), s.export(r, "decodeBase64", () => l), s.export(r, "decode", () => c);
        var a = e("../lib/buffer_utils.js");
        let i = e => {
                let t = e;
                "string" == typeof t && (t = a.encoder.encode(t));
                let r = [];
                for (let e = 0; e < t.length; e += 32768) r.push(String.fromCharCode.apply(null, t.subarray(e, e + 32768)));
                return btoa(r.join(""))
            },
            o = e => i(e).replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_"),
            l = e => {
                let t = atob(e),
                    r = new Uint8Array(t.length);
                for (let e = 0; e < t.length; e++) r[e] = t.charCodeAt(e);
                return r
            },
            c = e => {
                let t = e;
                t instanceof Uint8Array && (t = a.decoder.decode(t)), t = t.replace(/-/g, "+").replace(/_/g, "/").replace(/\s/g, "");
                try {
                    return l(t)
                } catch {
                    throw TypeError("The input to be decoded is not correctly encoded.")
                }
            }
    }, {
        "../lib/buffer_utils.js": "3OSXK",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "3OSXK": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "encoder", () => o), s.export(r, "decoder", () => l), s.export(r, "concat", () => c), s.export(r, "p2s", () => d), s.export(r, "uint64be", () => f), s.export(r, "uint32be", () => h), s.export(r, "lengthAndInput", () => p), s.export(r, "concatKdf", () => g);
        var a = e("../runtime/digest.js"),
            i = s.interopDefault(a);
        let o = new TextEncoder,
            l = new TextDecoder;

        function c(...e) {
            let t = new Uint8Array(e.reduce((e, {
                    length: t
                }) => e + t, 0)),
                r = 0;
            for (let n of e) t.set(n, r), r += n.length;
            return t
        }

        function d(e, t) {
            return c(o.encode(e), new Uint8Array([0]), t)
        }

        function u(e, t, r) {
            if (t < 0 || t >= 0x100000000) throw RangeError(`value must be >= 0 and <= ${0x100000000-1}. Received ${t}`);
            e.set([t >>> 24, t >>> 16, t >>> 8, 255 & t], r)
        }

        function f(e) {
            let t = Math.floor(e / 0x100000000),
                r = new Uint8Array(8);
            return u(r, t, 0), u(r, e % 0x100000000, 4), r
        }

        function h(e) {
            let t = new Uint8Array(4);
            return u(t, e), t
        }

        function p(e) {
            return c(h(e.length), e)
        }
        async function g(e, t, r) {
            let n = Math.ceil((t >> 3) / 32),
                s = new Uint8Array(32 * n);
            for (let t = 0; t < n; t++) {
                let n = new Uint8Array(4 + e.length + r.length);
                n.set(h(t + 1)), n.set(e, 4), n.set(r, 4 + e.length), s.set(await (0, i.default)("sha256", n), 32 * t)
            }
            return s.slice(0, t >> 3)
        }
    }, {
        "../runtime/digest.js": "fpkwe",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    fpkwe: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("./webcrypto.js"),
            i = s.interopDefault(a);
        r.default = async (e, t) => {
            let r = `SHA-${e.slice(-3)}`;
            return new Uint8Array(await i.default.subtle.digest(r, t))
        }
    }, {
        "./webcrypto.js": "8W0ZQ",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "8W0ZQ": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "isCryptoKey", () => a), r.default = crypto;
        let a = e => e instanceof CryptoKey
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    iJrMx: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("../lib/buffer_utils.js"),
            i = e("../lib/check_iv_length.js"),
            o = s.interopDefault(i),
            l = e("./check_cek_length.js"),
            c = s.interopDefault(l),
            d = e("./timing_safe_equal.js"),
            u = s.interopDefault(d),
            f = e("../util/errors.js"),
            h = e("./webcrypto.js"),
            p = s.interopDefault(h),
            g = e("../lib/crypto_key.js"),
            m = e("../lib/invalid_key_input.js"),
            y = s.interopDefault(m),
            b = e("./is_key_like.js");
        async function x(e, t, r, n, s, i) {
            let o, l;
            if (!(t instanceof Uint8Array)) throw TypeError((0, y.default)(t, "Uint8Array"));
            let c = parseInt(e.slice(1, 4), 10),
                d = await p.default.subtle.importKey("raw", t.subarray(c >> 3), "AES-CBC", !1, ["decrypt"]),
                h = await p.default.subtle.importKey("raw", t.subarray(0, c >> 3), {
                    hash: `SHA-${c<<1}`,
                    name: "HMAC"
                }, !1, ["sign"]),
                g = (0, a.concat)(i, n, r, (0, a.uint64be)(i.length << 3)),
                m = new Uint8Array((await p.default.subtle.sign("HMAC", h, g)).slice(0, c >> 3));
            try {
                o = (0, u.default)(s, m)
            } catch {}
            if (!o) throw new(0, f.JWEDecryptionFailed);
            try {
                l = new Uint8Array(await p.default.subtle.decrypt({
                    iv: n,
                    name: "AES-CBC"
                }, d, r))
            } catch {}
            if (!l) throw new(0, f.JWEDecryptionFailed);
            return l
        }
        async function v(e, t, r, n, s, i) {
            let o;
            t instanceof Uint8Array ? o = await p.default.subtle.importKey("raw", t, "AES-GCM", !1, ["decrypt"]) : ((0, g.checkEncCryptoKey)(t, e, "decrypt"), o = t);
            try {
                return new Uint8Array(await p.default.subtle.decrypt({
                    additionalData: i,
                    iv: n,
                    name: "AES-GCM",
                    tagLength: 128
                }, o, (0, a.concat)(r, s)))
            } catch {
                throw new(0, f.JWEDecryptionFailed)
            }
        }
        r.default = async (e, t, r, n, s, a) => {
            if (!(0, h.isCryptoKey)(t) && !(t instanceof Uint8Array)) throw TypeError((0, y.default)(t, ...b.types, "Uint8Array"));
            if (!n) throw new(0, f.JWEInvalid)("JWE Initialization Vector missing");
            if (!s) throw new(0, f.JWEInvalid)("JWE Authentication Tag missing");
            switch ((0, o.default)(e, n), e) {
                case "A128CBC-HS256":
                case "A192CBC-HS384":
                case "A256CBC-HS512":
                    return t instanceof Uint8Array && (0, c.default)(t, parseInt(e.slice(-3), 10)), x(e, t, r, n, s, a);
                case "A128GCM":
                case "A192GCM":
                case "A256GCM":
                    return t instanceof Uint8Array && (0, c.default)(t, parseInt(e.slice(1, 4), 10)), v(e, t, r, n, s, a);
                default:
                    throw new(0, f.JOSENotSupported)("Unsupported JWE Content Encryption Algorithm")
            }
        }
    }, {
        "../lib/buffer_utils.js": "3OSXK",
        "../lib/check_iv_length.js": "f0OE0",
        "./check_cek_length.js": "nQ7SI",
        "./timing_safe_equal.js": "9YoIW",
        "../util/errors.js": "2MROB",
        "./webcrypto.js": "8W0ZQ",
        "../lib/crypto_key.js": "8E2Zq",
        "../lib/invalid_key_input.js": "hv0bb",
        "./is_key_like.js": "nxGhD",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    f0OE0: [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r);
        var s = e("../util/errors.js"),
            a = e("./iv.js");
        r.default = (e, t) => {
            if (t.length << 3 !== (0, a.bitLength)(e)) throw new(0, s.JWEInvalid)("Invalid Initialization Vector length")
        }
    }, {
        "../util/errors.js": "2MROB",
        "./iv.js": "931z5",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "2MROB": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "JOSEError", () => a), s.export(r, "JWTClaimValidationFailed", () => i), s.export(r, "JWTExpired", () => o), s.export(r, "JOSEAlgNotAllowed", () => l), s.export(r, "JOSENotSupported", () => c), s.export(r, "JWEDecryptionFailed", () => d), s.export(r, "JWEInvalid", () => u), s.export(r, "JWSInvalid", () => f), s.export(r, "JWTInvalid", () => h), s.export(r, "JWKInvalid", () => p), s.export(r, "JWKSInvalid", () => g), s.export(r, "JWKSNoMatchingKey", () => m), s.export(r, "JWKSMultipleMatchingKeys", () => y), s.export(r, "JWKSTimeout", () => b), s.export(r, "JWSSignatureVerificationFailed", () => x);
        class a extends Error {
            constructor(e, t) {
                super(e, t), this.code = "ERR_JOSE_GENERIC", this.name = this.constructor.name, Error.captureStackTrace?.(this, this.constructor)
            }
        }
        a.code = "ERR_JOSE_GENERIC";
        class i extends a {
            constructor(e, t, r = "unspecified", n = "unspecified") {
                super(e, {
                    cause: {
                        claim: r,
                        reason: n,
                        payload: t
                    }
                }), this.code = "ERR_JWT_CLAIM_VALIDATION_FAILED", this.claim = r, this.reason = n, this.payload = t
            }
        }
        i.code = "ERR_JWT_CLAIM_VALIDATION_FAILED";
        class o extends a {
            constructor(e, t, r = "unspecified", n = "unspecified") {
                super(e, {
                    cause: {
                        claim: r,
                        reason: n,
                        payload: t
                    }
                }), this.code = "ERR_JWT_EXPIRED", this.claim = r, this.reason = n, this.payload = t
            }
        }
        o.code = "ERR_JWT_EXPIRED";
        class l extends a {
            constructor() {
                super(...arguments), this.code = "ERR_JOSE_ALG_NOT_ALLOWED"
            }
        }
        l.code = "ERR_JOSE_ALG_NOT_ALLOWED";
        class c extends a {
            constructor() {
                super(...arguments), this.code = "ERR_JOSE_NOT_SUPPORTED"
            }
        }
        c.code = "ERR_JOSE_NOT_SUPPORTED";
        class d extends a {
            constructor(e = "decryption operation failed", t) {
                super(e, t), this.code = "ERR_JWE_DECRYPTION_FAILED"
            }
        }
        d.code = "ERR_JWE_DECRYPTION_FAILED";
        class u extends a {
            constructor() {
                super(...arguments), this.code = "ERR_JWE_INVALID"
            }
        }
        u.code = "ERR_JWE_INVALID";
        class f extends a {
            constructor() {
                super(...arguments), this.code = "ERR_JWS_INVALID"
            }
        }
        f.code = "ERR_JWS_INVALID";
        class h extends a {
            constructor() {
                super(...arguments), this.code = "ERR_JWT_INVALID"
            }
        }
        h.code = "ERR_JWT_INVALID";
        class p extends a {
            constructor() {
                super(...arguments), this.code = "ERR_JWK_INVALID"
            }
        }
        p.code = "ERR_JWK_INVALID";
        class g extends a {
            constructor() {
                super(...arguments), this.code = "ERR_JWKS_INVALID"
            }
        }
        g.code = "ERR_JWKS_INVALID";
        class m extends a {
            constructor(e = "no applicable key found in the JSON Web Key Set", t) {
                super(e, t), this.code = "ERR_JWKS_NO_MATCHING_KEY"
            }
        }
        m.code = "ERR_JWKS_NO_MATCHING_KEY";
        class y extends a {
            constructor(e = "multiple matching keys found in the JSON Web Key Set", t) {
                super(e, t), this.code = "ERR_JWKS_MULTIPLE_MATCHING_KEYS"
            }
        }
        y.code = "ERR_JWKS_MULTIPLE_MATCHING_KEYS";
        class b extends a {
            constructor(e = "request timed out", t) {
                super(e, t), this.code = "ERR_JWKS_TIMEOUT"
            }
        }
        b.code = "ERR_JWKS_TIMEOUT";
        class x extends a {
            constructor(e = "signature verification failed", t) {
                super(e, t), this.code = "ERR_JWS_SIGNATURE_VERIFICATION_FAILED"
            }
        }
        x.code = "ERR_JWS_SIGNATURE_VERIFICATION_FAILED"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "931z5": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "bitLength", () => l);
        var a = e("../util/errors.js"),
            i = e("../runtime/random.js"),
            o = s.interopDefault(i);

        function l(e) {
            switch (e) {
                case "A128GCM":
                case "A128GCMKW":
                case "A192GCM":
                case "A192GCMKW":
                case "A256GCM":
                case "A256GCMKW":
                    return 96;
                case "A128CBC-HS256":
                case "A192CBC-HS384":
                case "A256CBC-HS512":
                    return 128;
                default:
                    throw new(0, a.JOSENotSupported)(`Unsupported JWE Algorithm: ${e}`)
            }
        }
        r.default = e => (0, o.default)(new Uint8Array(l(e) >> 3))
    }, {
        "../util/errors.js": "2MROB",
        "../runtime/random.js": "eG44V",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    eG44V: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("./webcrypto.js"),
            i = s.interopDefault(a);
        r.default = i.default.getRandomValues.bind(i.default)
    }, {
        "./webcrypto.js": "8W0ZQ",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    nQ7SI: [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r);
        var s = e("../util/errors.js");
        r.default = (e, t) => {
            let r = e.byteLength << 3;
            if (r !== t) throw new(0, s.JWEInvalid)(`Invalid Content Encryption Key length. Expected ${t} bits, got ${r} bits`)
        }
    }, {
        "../util/errors.js": "2MROB",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "9YoIW": [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r), r.default = (e, t) => {
            if (!(e instanceof Uint8Array)) throw TypeError("First argument must be a buffer");
            if (!(t instanceof Uint8Array)) throw TypeError("Second argument must be a buffer");
            if (e.length !== t.length) throw TypeError("Input buffers must have the same length");
            let r = e.length,
                n = 0,
                s = -1;
            for (; ++s < r;) n |= e[s] ^ t[s];
            return 0 === n
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "8E2Zq": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");

        function a(e, t = "algorithm.name") {
            return TypeError(`CryptoKey does not support this operation, its ${t} must be ${e}`)
        }

        function i(e, t) {
            return e.name === t
        }

        function o(e) {
            return parseInt(e.name.slice(4), 10)
        }

        function l(e, t) {
            if (t.length && !t.some(t => e.usages.includes(t))) {
                let e = "CryptoKey does not support this operation, its usages must include ";
                if (t.length > 2) {
                    let r = t.pop();
                    e += `one of ${t.join(", ")}, or ${r}.`
                } else 2 === t.length ? e += `one of ${t[0]} or ${t[1]}.` : e += `${t[0]}.`;
                throw TypeError(e)
            }
        }

        function c(e, t, ...r) {
            switch (t) {
                case "HS256":
                case "HS384":
                case "HS512": {
                    if (!i(e.algorithm, "HMAC")) throw a("HMAC");
                    let r = parseInt(t.slice(2), 10);
                    if (o(e.algorithm.hash) !== r) throw a(`SHA-${r}`, "algorithm.hash");
                    break
                }
                case "RS256":
                case "RS384":
                case "RS512": {
                    if (!i(e.algorithm, "RSASSA-PKCS1-v1_5")) throw a("RSASSA-PKCS1-v1_5");
                    let r = parseInt(t.slice(2), 10);
                    if (o(e.algorithm.hash) !== r) throw a(`SHA-${r}`, "algorithm.hash");
                    break
                }
                case "PS256":
                case "PS384":
                case "PS512": {
                    if (!i(e.algorithm, "RSA-PSS")) throw a("RSA-PSS");
                    let r = parseInt(t.slice(2), 10);
                    if (o(e.algorithm.hash) !== r) throw a(`SHA-${r}`, "algorithm.hash");
                    break
                }
                case "EdDSA":
                    if ("Ed25519" !== e.algorithm.name && "Ed448" !== e.algorithm.name) throw a("Ed25519 or Ed448");
                    break;
                case "Ed25519":
                    if (!i(e.algorithm, "Ed25519")) throw a("Ed25519");
                    break;
                case "ES256":
                case "ES384":
                case "ES512": {
                    if (!i(e.algorithm, "ECDSA")) throw a("ECDSA");
                    let r = function(e) {
                        switch (e) {
                            case "ES256":
                                return "P-256";
                            case "ES384":
                                return "P-384";
                            case "ES512":
                                return "P-521";
                            default:
                                throw Error("unreachable")
                        }
                    }(t);
                    if (e.algorithm.namedCurve !== r) throw a(r, "algorithm.namedCurve");
                    break
                }
                default:
                    throw TypeError("CryptoKey does not support this operation")
            }
            l(e, r)
        }

        function d(e, t, ...r) {
            switch (t) {
                case "A128GCM":
                case "A192GCM":
                case "A256GCM": {
                    if (!i(e.algorithm, "AES-GCM")) throw a("AES-GCM");
                    let r = parseInt(t.slice(1, 4), 10);
                    if (e.algorithm.length !== r) throw a(r, "algorithm.length");
                    break
                }
                case "A128KW":
                case "A192KW":
                case "A256KW": {
                    if (!i(e.algorithm, "AES-KW")) throw a("AES-KW");
                    let r = parseInt(t.slice(1, 4), 10);
                    if (e.algorithm.length !== r) throw a(r, "algorithm.length");
                    break
                }
                case "ECDH":
                    switch (e.algorithm.name) {
                        case "ECDH":
                        case "X25519":
                        case "X448":
                            break;
                        default:
                            throw a("ECDH, X25519, or X448")
                    }
                    break;
                case "PBES2-HS256+A128KW":
                case "PBES2-HS384+A192KW":
                case "PBES2-HS512+A256KW":
                    if (!i(e.algorithm, "PBKDF2")) throw a("PBKDF2");
                    break;
                case "RSA-OAEP":
                case "RSA-OAEP-256":
                case "RSA-OAEP-384":
                case "RSA-OAEP-512": {
                    if (!i(e.algorithm, "RSA-OAEP")) throw a("RSA-OAEP");
                    let r = parseInt(t.slice(9), 10) || 1;
                    if (o(e.algorithm.hash) !== r) throw a(`SHA-${r}`, "algorithm.hash");
                    break
                }
                default:
                    throw TypeError("CryptoKey does not support this operation")
            }
            l(e, r)
        }
        s.defineInteropFlag(r), s.export(r, "checkSigCryptoKey", () => c), s.export(r, "checkEncCryptoKey", () => d)
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    hv0bb: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");

        function a(e, t, ...r) {
            if ((r = r.filter(Boolean)).length > 2) {
                let t = r.pop();
                e += `one of type ${r.join(", ")}, or ${t}.`
            } else 2 === r.length ? e += `one of type ${r[0]} or ${r[1]}.` : e += `of type ${r[0]}.`;
            return null == t ? e += ` Received ${t}` : "function" == typeof t && t.name ? e += ` Received function ${t.name}` : "object" == typeof t && null != t && t.constructor?.name && (e += ` Received an instance of ${t.constructor.name}`), e
        }

        function i(e, t, ...r) {
            return a(`Key for the ${e} algorithm must be `, t, ...r)
        }
        s.defineInteropFlag(r), s.export(r, "withAlg", () => i), r.default = (e, ...t) => a("Key must be ", e, ...t)
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    nxGhD: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "types", () => i);
        var a = e("./webcrypto.js");
        r.default = e => !!(0, a.isCryptoKey)(e) || e?.[Symbol.toStringTag] === "KeyObject";
        let i = ["CryptoKey"]
    }, {
        "./webcrypto.js": "8W0ZQ",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    kFS6o: [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r), r.default = (...e) => {
            let t, r = e.filter(Boolean);
            if (0 === r.length || 1 === r.length) return !0;
            for (let e of r) {
                let r = Object.keys(e);
                if (!t || 0 === t.size) {
                    t = new Set(r);
                    continue
                }
                for (let e of r) {
                    if (t.has(e)) return !1;
                    t.add(e)
                }
            }
            return !0
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    kQMV3: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");

        function a(e) {
            if ("object" != typeof e || null === e || "[object Object]" !== Object.prototype.toString.call(e)) return !1;
            if (null === Object.getPrototypeOf(e)) return !0;
            let t = e;
            for (; null !== Object.getPrototypeOf(t);) t = Object.getPrototypeOf(t);
            return Object.getPrototypeOf(e) === t
        }
        s.defineInteropFlag(r), s.export(r, "default", () => a)
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    jBn3k: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("../runtime/aeskw.js"),
            i = e("../runtime/ecdhes.js"),
            o = e("../runtime/pbes2kw.js"),
            l = e("../runtime/rsaes.js"),
            c = e("../runtime/base64url.js"),
            d = e("../runtime/normalize_key.js"),
            u = s.interopDefault(d),
            f = e("../util/errors.js"),
            h = e("../lib/cek.js"),
            p = e("../key/import.js"),
            g = e("./check_key_type.js"),
            m = s.interopDefault(g),
            y = e("./is_object.js"),
            b = s.interopDefault(y),
            x = e("./aesgcmkw.js");
        r.default = async function(e, t, r, n, s) {
            switch ((0, m.default)(e, t, "decrypt"), t = await u.default.normalizePrivateKey?.(t, e) || t, e) {
                case "dir":
                    if (void 0 !== r) throw new(0, f.JWEInvalid)("Encountered unexpected JWE Encrypted Key");
                    return t;
                case "ECDH-ES":
                    if (void 0 !== r) throw new(0, f.JWEInvalid)("Encountered unexpected JWE Encrypted Key");
                case "ECDH-ES+A128KW":
                case "ECDH-ES+A192KW":
                case "ECDH-ES+A256KW": {
                    let s, o;
                    if (!(0, b.default)(n.epk)) throw new(0, f.JWEInvalid)('JOSE Header "epk" (Ephemeral Public Key) missing or invalid');
                    if (!i.ecdhAllowed(t)) throw new(0, f.JOSENotSupported)("ECDH with the provided key is not allowed or not supported by your javascript runtime");
                    let l = await (0, p.importJWK)(n.epk, e);
                    if (void 0 !== n.apu) {
                        if ("string" != typeof n.apu) throw new(0, f.JWEInvalid)('JOSE Header "apu" (Agreement PartyUInfo) invalid');
                        try {
                            s = (0, c.decode)(n.apu)
                        } catch {
                            throw new(0, f.JWEInvalid)("Failed to base64url decode the apu")
                        }
                    }
                    if (void 0 !== n.apv) {
                        if ("string" != typeof n.apv) throw new(0, f.JWEInvalid)('JOSE Header "apv" (Agreement PartyVInfo) invalid');
                        try {
                            o = (0, c.decode)(n.apv)
                        } catch {
                            throw new(0, f.JWEInvalid)("Failed to base64url decode the apv")
                        }
                    }
                    let d = await i.deriveKey(l, t, "ECDH-ES" === e ? n.enc : e, "ECDH-ES" === e ? (0, h.bitLength)(n.enc) : parseInt(e.slice(-5, -2), 10), s, o);
                    if ("ECDH-ES" === e) return d;
                    if (void 0 === r) throw new(0, f.JWEInvalid)("JWE Encrypted Key missing");
                    return (0, a.unwrap)(e.slice(-6), d, r)
                }
                case "RSA1_5":
                case "RSA-OAEP":
                case "RSA-OAEP-256":
                case "RSA-OAEP-384":
                case "RSA-OAEP-512":
                    if (void 0 === r) throw new(0, f.JWEInvalid)("JWE Encrypted Key missing");
                    return (0, l.decrypt)(e, t, r);
                case "PBES2-HS256+A128KW":
                case "PBES2-HS384+A192KW":
                case "PBES2-HS512+A256KW": {
                    let a;
                    if (void 0 === r) throw new(0, f.JWEInvalid)("JWE Encrypted Key missing");
                    if ("number" != typeof n.p2c) throw new(0, f.JWEInvalid)('JOSE Header "p2c" (PBES2 Count) missing or invalid');
                    let i = s?.maxPBES2Count || 1e4;
                    if (n.p2c > i) throw new(0, f.JWEInvalid)('JOSE Header "p2c" (PBES2 Count) out is of acceptable bounds');
                    if ("string" != typeof n.p2s) throw new(0, f.JWEInvalid)('JOSE Header "p2s" (PBES2 Salt) missing or invalid');
                    try {
                        a = (0, c.decode)(n.p2s)
                    } catch {
                        throw new(0, f.JWEInvalid)("Failed to base64url decode the p2s")
                    }
                    return (0, o.decrypt)(e, t, r, n.p2c, a)
                }
                case "A128KW":
                case "A192KW":
                case "A256KW":
                    if (void 0 === r) throw new(0, f.JWEInvalid)("JWE Encrypted Key missing");
                    return (0, a.unwrap)(e, t, r);
                case "A128GCMKW":
                case "A192GCMKW":
                case "A256GCMKW": {
                    let s, a;
                    if (void 0 === r) throw new(0, f.JWEInvalid)("JWE Encrypted Key missing");
                    if ("string" != typeof n.iv) throw new(0, f.JWEInvalid)('JOSE Header "iv" (Initialization Vector) missing or invalid');
                    if ("string" != typeof n.tag) throw new(0, f.JWEInvalid)('JOSE Header "tag" (Authentication Tag) missing or invalid');
                    try {
                        s = (0, c.decode)(n.iv)
                    } catch {
                        throw new(0, f.JWEInvalid)("Failed to base64url decode the iv")
                    }
                    try {
                        a = (0, c.decode)(n.tag)
                    } catch {
                        throw new(0, f.JWEInvalid)("Failed to base64url decode the tag")
                    }
                    return (0, x.unwrap)(e, t, r, s, a)
                }
                default:
                    throw new(0, f.JOSENotSupported)('Invalid or unsupported "alg" (JWE Algorithm) header value')
            }
        }
    }, {
        "../runtime/aeskw.js": "pUGmP",
        "../runtime/ecdhes.js": "aTdif",
        "../runtime/pbes2kw.js": "6uLsN",
        "../runtime/rsaes.js": "6nFVi",
        "../runtime/base64url.js": "By2uJ",
        "../runtime/normalize_key.js": "2snrQ",
        "../util/errors.js": "2MROB",
        "../lib/cek.js": "bsH55",
        "../key/import.js": "azICy",
        "./check_key_type.js": "fyQAE",
        "./is_object.js": "kQMV3",
        "./aesgcmkw.js": "ugaG7",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    pUGmP: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "wrap", () => g), s.export(r, "unwrap", () => m);
        var a = e("./bogus.js"),
            i = s.interopDefault(a),
            o = e("./webcrypto.js"),
            l = s.interopDefault(o),
            c = e("../lib/crypto_key.js"),
            d = e("../lib/invalid_key_input.js"),
            u = s.interopDefault(d),
            f = e("./is_key_like.js");

        function h(e, t) {
            if (e.algorithm.length !== parseInt(t.slice(1, 4), 10)) throw TypeError(`Invalid key size for alg: ${t}`)
        }

        function p(e, t, r) {
            if ((0, o.isCryptoKey)(e)) return (0, c.checkEncCryptoKey)(e, t, r), e;
            if (e instanceof Uint8Array) return l.default.subtle.importKey("raw", e, "AES-KW", !0, [r]);
            throw TypeError((0, u.default)(e, ...f.types, "Uint8Array"))
        }
        let g = async (e, t, r) => {
            let n = await p(t, e, "wrapKey");
            h(n, e);
            let s = await l.default.subtle.importKey("raw", r, ...i.default);
            return new Uint8Array(await l.default.subtle.wrapKey("raw", s, n, "AES-KW"))
        }, m = async (e, t, r) => {
            let n = await p(t, e, "unwrapKey");
            h(n, e);
            let s = await l.default.subtle.unwrapKey("raw", r, n, "AES-KW", ...i.default);
            return new Uint8Array(await l.default.subtle.exportKey("raw", s))
        }
    }, {
        "./bogus.js": "82XGp",
        "./webcrypto.js": "8W0ZQ",
        "../lib/crypto_key.js": "8E2Zq",
        "../lib/invalid_key_input.js": "hv0bb",
        "./is_key_like.js": "nxGhD",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "82XGp": [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r), r.default = [{
            hash: "SHA-256",
            name: "HMAC"
        }, !0, ["sign"]]
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    aTdif: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "deriveKey", () => f), s.export(r, "generateEpk", () => h), s.export(r, "ecdhAllowed", () => p);
        var a = e("../lib/buffer_utils.js"),
            i = e("./webcrypto.js"),
            o = s.interopDefault(i),
            l = e("../lib/crypto_key.js"),
            c = e("../lib/invalid_key_input.js"),
            d = s.interopDefault(c),
            u = e("./is_key_like.js");
        async function f(e, t, r, n, s = new Uint8Array(0), c = new Uint8Array(0)) {
            let h;
            if (!(0, i.isCryptoKey)(e)) throw TypeError((0, d.default)(e, ...u.types));
            if ((0, l.checkEncCryptoKey)(e, "ECDH"), !(0, i.isCryptoKey)(t)) throw TypeError((0, d.default)(t, ...u.types));
            (0, l.checkEncCryptoKey)(t, "ECDH", "deriveBits");
            let p = (0, a.concat)((0, a.lengthAndInput)(a.encoder.encode(r)), (0, a.lengthAndInput)(s), (0, a.lengthAndInput)(c), (0, a.uint32be)(n));
            h = "X25519" === e.algorithm.name ? 256 : "X448" === e.algorithm.name ? 448 : Math.ceil(parseInt(e.algorithm.namedCurve.substr(-3), 10) / 8) << 3;
            let g = new Uint8Array(await o.default.subtle.deriveBits({
                name: e.algorithm.name,
                public: e
            }, t, h));
            return (0, a.concatKdf)(g, n, p)
        }
        async function h(e) {
            if (!(0, i.isCryptoKey)(e)) throw TypeError((0, d.default)(e, ...u.types));
            return o.default.subtle.generateKey(e.algorithm, !0, ["deriveBits"])
        }

        function p(e) {
            if (!(0, i.isCryptoKey)(e)) throw TypeError((0, d.default)(e, ...u.types));
            return ["P-256", "P-384", "P-521"].includes(e.algorithm.namedCurve) || "X25519" === e.algorithm.name || "X448" === e.algorithm.name
        }
    }, {
        "../lib/buffer_utils.js": "3OSXK",
        "./webcrypto.js": "8W0ZQ",
        "../lib/crypto_key.js": "8E2Zq",
        "../lib/invalid_key_input.js": "hv0bb",
        "./is_key_like.js": "nxGhD",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "6uLsN": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "encrypt", () => x), s.export(r, "decrypt", () => v);
        var a = e("./random.js"),
            i = s.interopDefault(a),
            o = e("../lib/buffer_utils.js"),
            l = e("./base64url.js"),
            c = e("./aeskw.js"),
            d = e("../lib/check_p2s.js"),
            u = s.interopDefault(d),
            f = e("./webcrypto.js"),
            h = s.interopDefault(f),
            p = e("../lib/crypto_key.js"),
            g = e("../lib/invalid_key_input.js"),
            m = s.interopDefault(g),
            y = e("./is_key_like.js");
        async function b(e, t, r, n) {
            (0, u.default)(e);
            let s = (0, o.p2s)(t, e),
                a = parseInt(t.slice(13, 16), 10),
                i = {
                    hash: `SHA-${t.slice(8,11)}`,
                    iterations: r,
                    name: "PBKDF2",
                    salt: s
                },
                l = await
            function(e, t) {
                if (e instanceof Uint8Array) return h.default.subtle.importKey("raw", e, "PBKDF2", !1, ["deriveBits"]);
                if ((0, f.isCryptoKey)(e)) return (0, p.checkEncCryptoKey)(e, t, "deriveBits", "deriveKey"), e;
                throw TypeError((0, m.default)(e, ...y.types, "Uint8Array"))
            }(n, t);
            if (l.usages.includes("deriveBits")) return new Uint8Array(await h.default.subtle.deriveBits(i, l, a));
            if (l.usages.includes("deriveKey")) return h.default.subtle.deriveKey(i, l, {
                length: a,
                name: "AES-KW"
            }, !1, ["wrapKey", "unwrapKey"]);
            throw TypeError('PBKDF2 key "usages" must include "deriveBits" or "deriveKey"')
        }
        let x = async (e, t, r, n = 2048, s = (0, i.default)(new Uint8Array(16))) => {
            let a = await b(s, e, n, t);
            return {
                encryptedKey: await (0, c.wrap)(e.slice(-6), a, r),
                p2c: n,
                p2s: (0, l.encode)(s)
            }
        }, v = async (e, t, r, n, s) => {
            let a = await b(s, e, n, t);
            return (0, c.unwrap)(e.slice(-6), a, r)
        }
    }, {
        "./random.js": "eG44V",
        "../lib/buffer_utils.js": "3OSXK",
        "./base64url.js": "By2uJ",
        "./aeskw.js": "pUGmP",
        "../lib/check_p2s.js": "6deeA",
        "./webcrypto.js": "8W0ZQ",
        "../lib/crypto_key.js": "8E2Zq",
        "../lib/invalid_key_input.js": "hv0bb",
        "./is_key_like.js": "nxGhD",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "6deeA": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => i);
        var a = e("../util/errors.js");

        function i(e) {
            if (!(e instanceof Uint8Array) || e.length < 8) throw new(0, a.JWEInvalid)("PBES2 Salt Input must be 8 or more octets")
        }
    }, {
        "../util/errors.js": "2MROB",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "6nFVi": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "encrypt", () => y), s.export(r, "decrypt", () => b);
        var a = e("./subtle_rsaes.js"),
            i = s.interopDefault(a),
            o = e("./bogus.js"),
            l = s.interopDefault(o),
            c = e("./webcrypto.js"),
            d = s.interopDefault(c),
            u = e("../lib/crypto_key.js"),
            f = e("./check_key_length.js"),
            h = s.interopDefault(f),
            p = e("../lib/invalid_key_input.js"),
            g = s.interopDefault(p),
            m = e("./is_key_like.js");
        let y = async (e, t, r) => {
            if (!(0, c.isCryptoKey)(t)) throw TypeError((0, g.default)(t, ...m.types));
            if ((0, u.checkEncCryptoKey)(t, e, "encrypt", "wrapKey"), (0, h.default)(e, t), t.usages.includes("encrypt")) return new Uint8Array(await d.default.subtle.encrypt((0, i.default)(e), t, r));
            if (t.usages.includes("wrapKey")) {
                let n = await d.default.subtle.importKey("raw", r, ...l.default);
                return new Uint8Array(await d.default.subtle.wrapKey("raw", n, t, (0, i.default)(e)))
            }
            throw TypeError('RSA-OAEP key "usages" must include "encrypt" or "wrapKey" for this operation')
        }, b = async (e, t, r) => {
            if (!(0, c.isCryptoKey)(t)) throw TypeError((0, g.default)(t, ...m.types));
            if ((0, u.checkEncCryptoKey)(t, e, "decrypt", "unwrapKey"), (0, h.default)(e, t), t.usages.includes("decrypt")) return new Uint8Array(await d.default.subtle.decrypt((0, i.default)(e), t, r));
            if (t.usages.includes("unwrapKey")) {
                let n = await d.default.subtle.unwrapKey("raw", r, t, (0, i.default)(e), ...l.default);
                return new Uint8Array(await d.default.subtle.exportKey("raw", n))
            }
            throw TypeError('RSA-OAEP key "usages" must include "decrypt" or "unwrapKey" for this operation')
        }
    }, {
        "./subtle_rsaes.js": "aJk2b",
        "./bogus.js": "82XGp",
        "./webcrypto.js": "8W0ZQ",
        "../lib/crypto_key.js": "8E2Zq",
        "./check_key_length.js": "c7se2",
        "../lib/invalid_key_input.js": "hv0bb",
        "./is_key_like.js": "nxGhD",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    aJk2b: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => i);
        var a = e("../util/errors.js");

        function i(e) {
            switch (e) {
                case "RSA-OAEP":
                case "RSA-OAEP-256":
                case "RSA-OAEP-384":
                case "RSA-OAEP-512":
                    return "RSA-OAEP";
                default:
                    throw new(0, a.JOSENotSupported)(`alg ${e} is not supported either by JOSE or your javascript runtime`)
            }
        }
    }, {
        "../util/errors.js": "2MROB",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    c7se2: [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r), r.default = (e, t) => {
            if (e.startsWith("RS") || e.startsWith("PS")) {
                let {
                    modulusLength: r
                } = t.algorithm;
                if ("number" != typeof r || r < 2048) throw TypeError(`${e} requires key modulusLength to be 2048 bits or larger`)
            }
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "2snrQ": [function(e, t, r, n) {
        let s, a;
        var i = e("@parcel/transformer-js/src/esmodule-helpers.js");
        i.defineInteropFlag(r);
        var o = e("../lib/is_jwk.js"),
            l = e("./base64url.js"),
            c = e("./jwk_to_key.js"),
            d = i.interopDefault(c);
        let u = e => (0, l.decode)(e),
            f = e => e?.[Symbol.toStringTag] === "KeyObject",
            h = async (e, t, r, n, s = !1) => {
                let a = e.get(t);
                if (a?.[n]) return a[n];
                let i = await (0, d.default)({
                    ...r,
                    alg: n
                });
                return s && Object.freeze(t), a ? a[n] = i : e.set(t, {
                    [n]: i
                }), i
            };
        r.default = {
            normalizePublicKey: (e, t) => {
                if (f(e)) {
                    let r = e.export({
                        format: "jwk"
                    });
                    return (delete r.d, delete r.dp, delete r.dq, delete r.p, delete r.q, delete r.qi, r.k) ? u(r.k) : (a || (a = new WeakMap), h(a, e, r, t))
                }
                return (0, o.isJWK)(e) ? e.k ? (0, l.decode)(e.k) : (a || (a = new WeakMap), h(a, e, e, t, !0)) : e
            },
            normalizePrivateKey: (e, t) => {
                if (f(e)) {
                    let r = e.export({
                        format: "jwk"
                    });
                    return r.k ? u(r.k) : (s || (s = new WeakMap), h(s, e, r, t))
                }
                return (0, o.isJWK)(e) ? e.k ? (0, l.decode)(e.k) : (s || (s = new WeakMap), h(s, e, e, t, !0)) : e
            }
        }
    }, {
        "../lib/is_jwk.js": "2dmgx",
        "./base64url.js": "By2uJ",
        "./jwk_to_key.js": "ayvt7",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "2dmgx": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "isJWK", () => o), s.export(r, "isPrivateJWK", () => l), s.export(r, "isPublicJWK", () => c), s.export(r, "isSecretJWK", () => d);
        var a = e("./is_object.js"),
            i = s.interopDefault(a);

        function o(e) {
            return (0, i.default)(e) && "string" == typeof e.kty
        }

        function l(e) {
            return "oct" !== e.kty && "string" == typeof e.d
        }

        function c(e) {
            return "oct" !== e.kty && void 0 === e.d
        }

        function d(e) {
            return o(e) && "oct" === e.kty && "string" == typeof e.k
        }
    }, {
        "./is_object.js": "kQMV3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    ayvt7: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("./webcrypto.js"),
            i = s.interopDefault(a),
            o = e("../util/errors.js");
        r.default = async e => {
            if (!e.alg) throw TypeError('"alg" argument is required when "jwk.alg" is not present');
            let {
                algorithm: t,
                keyUsages: r
            } = function(e) {
                let t, r;
                switch (e.kty) {
                    case "RSA":
                        switch (e.alg) {
                            case "PS256":
                            case "PS384":
                            case "PS512":
                                t = {
                                    name: "RSA-PSS",
                                    hash: `SHA-${e.alg.slice(-3)}`
                                }, r = e.d ? ["sign"] : ["verify"];
                                break;
                            case "RS256":
                            case "RS384":
                            case "RS512":
                                t = {
                                    name: "RSASSA-PKCS1-v1_5",
                                    hash: `SHA-${e.alg.slice(-3)}`
                                }, r = e.d ? ["sign"] : ["verify"];
                                break;
                            case "RSA-OAEP":
                            case "RSA-OAEP-256":
                            case "RSA-OAEP-384":
                            case "RSA-OAEP-512":
                                t = {
                                    name: "RSA-OAEP",
                                    hash: `SHA-${parseInt(e.alg.slice(-3),10)||1}`
                                }, r = e.d ? ["decrypt", "unwrapKey"] : ["encrypt", "wrapKey"];
                                break;
                            default:
                                throw new(0, o.JOSENotSupported)('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')
                        }
                        break;
                    case "EC":
                        switch (e.alg) {
                            case "ES256":
                                t = {
                                    name: "ECDSA",
                                    namedCurve: "P-256"
                                }, r = e.d ? ["sign"] : ["verify"];
                                break;
                            case "ES384":
                                t = {
                                    name: "ECDSA",
                                    namedCurve: "P-384"
                                }, r = e.d ? ["sign"] : ["verify"];
                                break;
                            case "ES512":
                                t = {
                                    name: "ECDSA",
                                    namedCurve: "P-521"
                                }, r = e.d ? ["sign"] : ["verify"];
                                break;
                            case "ECDH-ES":
                            case "ECDH-ES+A128KW":
                            case "ECDH-ES+A192KW":
                            case "ECDH-ES+A256KW":
                                t = {
                                    name: "ECDH",
                                    namedCurve: e.crv
                                }, r = e.d ? ["deriveBits"] : [];
                                break;
                            default:
                                throw new(0, o.JOSENotSupported)('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')
                        }
                        break;
                    case "OKP":
                        switch (e.alg) {
                            case "Ed25519":
                                t = {
                                    name: "Ed25519"
                                }, r = e.d ? ["sign"] : ["verify"];
                                break;
                            case "EdDSA":
                                t = {
                                    name: e.crv
                                }, r = e.d ? ["sign"] : ["verify"];
                                break;
                            case "ECDH-ES":
                            case "ECDH-ES+A128KW":
                            case "ECDH-ES+A192KW":
                            case "ECDH-ES+A256KW":
                                t = {
                                    name: e.crv
                                }, r = e.d ? ["deriveBits"] : [];
                                break;
                            default:
                                throw new(0, o.JOSENotSupported)('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')
                        }
                        break;
                    default:
                        throw new(0, o.JOSENotSupported)('Invalid or unsupported JWK "kty" (Key Type) Parameter value')
                }
                return {
                    algorithm: t,
                    keyUsages: r
                }
            }(e), n = [t, e.ext ?? !1, e.key_ops ?? r], s = {
                ...e
            };
            return delete s.alg, delete s.use, i.default.subtle.importKey("jwk", s, ...n)
        }
    }, {
        "./webcrypto.js": "8W0ZQ",
        "../util/errors.js": "2MROB",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    bsH55: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "bitLength", () => l);
        var a = e("../util/errors.js"),
            i = e("../runtime/random.js"),
            o = s.interopDefault(i);

        function l(e) {
            switch (e) {
                case "A128GCM":
                    return 128;
                case "A192GCM":
                    return 192;
                case "A256GCM":
                case "A128CBC-HS256":
                    return 256;
                case "A192CBC-HS384":
                    return 384;
                case "A256CBC-HS512":
                    return 512;
                default:
                    throw new(0, a.JOSENotSupported)(`Unsupported JWE Algorithm: ${e}`)
            }
        }
        r.default = e => (0, o.default)(new Uint8Array(l(e) >> 3))
    }, {
        "../util/errors.js": "2MROB",
        "../runtime/random.js": "eG44V",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    azICy: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "importSPKI", () => f), s.export(r, "importX509", () => h), s.export(r, "importPKCS8", () => p), s.export(r, "importJWK", () => g);
        var a = e("../runtime/base64url.js"),
            i = e("../runtime/asn1.js"),
            o = e("../runtime/jwk_to_key.js"),
            l = s.interopDefault(o),
            c = e("../util/errors.js"),
            d = e("../lib/is_object.js"),
            u = s.interopDefault(d);
        async function f(e, t, r) {
            if ("string" != typeof e || 0 !== e.indexOf("-----BEGIN PUBLIC KEY-----")) throw TypeError('"spki" must be SPKI formatted string');
            return (0, i.fromSPKI)(e, t, r)
        }
        async function h(e, t, r) {
            if ("string" != typeof e || 0 !== e.indexOf("-----BEGIN CERTIFICATE-----")) throw TypeError('"x509" must be X.509 formatted string');
            return (0, i.fromX509)(e, t, r)
        }
        async function p(e, t, r) {
            if ("string" != typeof e || 0 !== e.indexOf("-----BEGIN PRIVATE KEY-----")) throw TypeError('"pkcs8" must be PKCS#8 formatted string');
            return (0, i.fromPKCS8)(e, t, r)
        }
        async function g(e, t) {
            if (!(0, u.default)(e)) throw TypeError("JWK must be an object");
            switch (t || (t = e.alg), e.kty) {
                case "oct":
                    if ("string" != typeof e.k || !e.k) throw TypeError('missing "k" (Key Value) Parameter value');
                    return (0, a.decode)(e.k);
                case "RSA":
                    if ("oth" in e && void 0 !== e.oth) throw new(0, c.JOSENotSupported)('RSA JWK "oth" (Other Primes Info) Parameter value is not supported');
                case "EC":
                case "OKP":
                    return (0, l.default)({
                        ...e,
                        alg: t
                    });
                default:
                    throw new(0, c.JOSENotSupported)('Unsupported "kty" (Key Type) Parameter value')
            }
        }
    }, {
        "../runtime/base64url.js": "By2uJ",
        "../runtime/asn1.js": "16Zke",
        "../runtime/jwk_to_key.js": "ayvt7",
        "../util/errors.js": "2MROB",
        "../lib/is_object.js": "kQMV3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "16Zke": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "toSPKI", () => g), s.export(r, "toPKCS8", () => m), s.export(r, "fromPKCS8", () => v), s.export(r, "fromSPKI", () => w), s.export(r, "fromX509", () => j);
        var a = e("./webcrypto.js"),
            i = s.interopDefault(a),
            o = e("../lib/invalid_key_input.js"),
            l = s.interopDefault(o),
            c = e("./base64url.js"),
            d = e("../lib/format_pem.js"),
            u = s.interopDefault(d),
            f = e("../util/errors.js"),
            h = e("./is_key_like.js");
        let p = async (e, t, r) => {
            if (!(0, a.isCryptoKey)(r)) throw TypeError((0, l.default)(r, ...h.types));
            if (!r.extractable) throw TypeError("CryptoKey is not extractable");
            if (r.type !== e) throw TypeError(`key is not a ${e} key`);
            return (0, u.default)((0, c.encodeBase64)(new Uint8Array(await i.default.subtle.exportKey(t, r))), `${e.toUpperCase()} KEY`)
        }, g = e => p("public", "spki", e), m = e => p("private", "pkcs8", e), y = (e, t, r = 0) => {
            0 === r && (t.unshift(t.length), t.unshift(6));
            let n = e.indexOf(t[0], r);
            if (-1 === n) return !1;
            let s = e.subarray(n, n + t.length);
            return s.length === t.length && (s.every((e, r) => e === t[r]) || y(e, t, n + 1))
        }, b = e => {
            switch (!0) {
                case y(e, [42, 134, 72, 206, 61, 3, 1, 7]):
                    return "P-256";
                case y(e, [43, 129, 4, 0, 34]):
                    return "P-384";
                case y(e, [43, 129, 4, 0, 35]):
                    return "P-521";
                case y(e, [43, 101, 110]):
                    return "X25519";
                case y(e, [43, 101, 111]):
                    return "X448";
                case y(e, [43, 101, 112]):
                    return "Ed25519";
                case y(e, [43, 101, 113]):
                    return "Ed448";
                default:
                    throw new(0, f.JOSENotSupported)("Invalid or unsupported EC Key Curve or OKP Key Sub Type")
            }
        }, x = async (e, t, r, n, s) => {
            let a, o, l = new Uint8Array(atob(r.replace(e, "")).split("").map(e => e.charCodeAt(0))),
                c = "spki" === t;
            switch (n) {
                case "PS256":
                case "PS384":
                case "PS512":
                    a = {
                        name: "RSA-PSS",
                        hash: `SHA-${n.slice(-3)}`
                    }, o = c ? ["verify"] : ["sign"];
                    break;
                case "RS256":
                case "RS384":
                case "RS512":
                    a = {
                        name: "RSASSA-PKCS1-v1_5",
                        hash: `SHA-${n.slice(-3)}`
                    }, o = c ? ["verify"] : ["sign"];
                    break;
                case "RSA-OAEP":
                case "RSA-OAEP-256":
                case "RSA-OAEP-384":
                case "RSA-OAEP-512":
                    a = {
                        name: "RSA-OAEP",
                        hash: `SHA-${parseInt(n.slice(-3),10)||1}`
                    }, o = c ? ["encrypt", "wrapKey"] : ["decrypt", "unwrapKey"];
                    break;
                case "ES256":
                    a = {
                        name: "ECDSA",
                        namedCurve: "P-256"
                    }, o = c ? ["verify"] : ["sign"];
                    break;
                case "ES384":
                    a = {
                        name: "ECDSA",
                        namedCurve: "P-384"
                    }, o = c ? ["verify"] : ["sign"];
                    break;
                case "ES512":
                    a = {
                        name: "ECDSA",
                        namedCurve: "P-521"
                    }, o = c ? ["verify"] : ["sign"];
                    break;
                case "ECDH-ES":
                case "ECDH-ES+A128KW":
                case "ECDH-ES+A192KW":
                case "ECDH-ES+A256KW": {
                    let e = b(l);
                    a = e.startsWith("P-") ? {
                        name: "ECDH",
                        namedCurve: e
                    } : {
                        name: e
                    }, o = c ? [] : ["deriveBits"];
                    break
                }
                case "Ed25519":
                    a = {
                        name: "Ed25519"
                    }, o = c ? ["verify"] : ["sign"];
                    break;
                case "EdDSA":
                    a = {
                        name: b(l)
                    }, o = c ? ["verify"] : ["sign"];
                    break;
                default:
                    throw new(0, f.JOSENotSupported)('Invalid or unsupported "alg" (Algorithm) value')
            }
            return i.default.subtle.importKey(t, l, a, s?.extractable ?? !1, o)
        }, v = (e, t, r) => x(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\s)/g, "pkcs8", e, t, r), w = (e, t, r) => x(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\s)/g, "spki", e, t, r);

        function E(e) {
            let t = [],
                r = 0;
            for (; r < e.length;) {
                let n = A(e.subarray(r));
                t.push(n), r += n.byteLength
            }
            return t
        }

        function A(e) {
            let t = 0,
                r = 31 & e[0];
            if (t++, 31 === r) {
                for (r = 0; e[t] >= 128;) r = 128 * r + e[t] - 128, t++;
                r = 128 * r + e[t] - 128, t++
            }
            let n = 0;
            if (e[t] < 128) n = e[t], t++;
            else if (128 === n) {
                for (n = 0; 0 !== e[t + n] || 0 !== e[t + n + 1];) {
                    if (n > e.byteLength) throw TypeError("invalid indefinite form length");
                    n++
                }
                let r = t + n + 2;
                return {
                    byteLength: r,
                    contents: e.subarray(t, t + n),
                    raw: e.subarray(0, r)
                }
            } else {
                let r = 127 & e[t];
                t++, n = 0;
                for (let s = 0; s < r; s++) n = 256 * n + e[t], t++
            }
            let s = t + n;
            return {
                byteLength: s,
                contents: e.subarray(t, s),
                raw: e.subarray(0, s)
            }
        }
        let j = (e, t, r) => {
            let n;
            try {
                n = function(e) {
                    let t = e.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\s)/g, ""),
                        r = (0, c.decodeBase64)(t);
                    return (0, u.default)(function(e) {
                        let t = E(E(A(e).contents)[0].contents);
                        return (0, c.encodeBase64)(t[160 === t[0].raw[0] ? 6 : 5].raw)
                    }(r), "PUBLIC KEY")
                }(e)
            } catch (e) {
                throw TypeError("Failed to parse the X.509 certificate", {
                    cause: e
                })
            }
            return w(n, t, r)
        }
    }, {
        "./webcrypto.js": "8W0ZQ",
        "../lib/invalid_key_input.js": "hv0bb",
        "./base64url.js": "By2uJ",
        "../lib/format_pem.js": "kmo3m",
        "../util/errors.js": "2MROB",
        "./is_key_like.js": "nxGhD",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    kmo3m: [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r), r.default = (e, t) => {
            let r = (e.match(/.{1,64}/g) || []).join("\n");
            return `-----BEGIN ${t}-----
${r}
-----END ${t}-----`
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    fyQAE: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "checkKeyTypeWithJwk", () => f);
        var a = e("./invalid_key_input.js"),
            i = e("../runtime/is_key_like.js"),
            o = s.interopDefault(i),
            l = e("./is_jwk.js");
        let c = e => e?.[Symbol.toStringTag],
            d = (e, t, r) => {
                if (void 0 !== t.use && "sig" !== t.use) throw TypeError("Invalid key for this operation, when present its use must be sig");
                if (void 0 !== t.key_ops && t.key_ops.includes?.(r) !== !0) throw TypeError(`Invalid key for this operation, when present its key_ops must include ${r}`);
                if (void 0 !== t.alg && t.alg !== e) throw TypeError(`Invalid key for this operation, when present its alg must be ${e}`);
                return !0
            };

        function u(e, t, r, n) {
            t.startsWith("HS") || "dir" === t || t.startsWith("PBES2") || /^A\d{3}(?:GCM)?KW$/.test(t) ? ((e, t, r, n) => {
                if (!(t instanceof Uint8Array)) {
                    if (n && l.isJWK(t)) {
                        if (l.isSecretJWK(t) && d(e, t, r)) return;
                        throw TypeError('JSON Web Key for symmetric algorithms must have JWK "kty" (Key Type) equal to "oct" and the JWK "k" (Key Value) present')
                    }
                    if (!(0, o.default)(t)) throw TypeError((0, a.withAlg)(e, t, ...i.types, "Uint8Array", n ? "JSON Web Key" : null));
                    if ("secret" !== t.type) throw TypeError(`${c(t)} instances for symmetric algorithms must be of type "secret"`)
                }
            })(t, r, n, e) : ((e, t, r, n) => {
                if (n && l.isJWK(t)) switch (r) {
                    case "sign":
                        if (l.isPrivateJWK(t) && d(e, t, r)) return;
                        throw TypeError("JSON Web Key for this operation be a private JWK");
                    case "verify":
                        if (l.isPublicJWK(t) && d(e, t, r)) return;
                        throw TypeError("JSON Web Key for this operation be a public JWK")
                }
                if (!(0, o.default)(t)) throw TypeError((0, a.withAlg)(e, t, ...i.types, n ? "JSON Web Key" : null));
                if ("secret" === t.type) throw TypeError(`${c(t)} instances for asymmetric algorithms must not be of type "secret"`);
                if ("sign" === r && "public" === t.type) throw TypeError(`${c(t)} instances for asymmetric algorithm signing must be of type "private"`);
                if ("decrypt" === r && "public" === t.type) throw TypeError(`${c(t)} instances for asymmetric algorithm decryption must be of type "private"`);
                if (t.algorithm && "verify" === r && "private" === t.type) throw TypeError(`${c(t)} instances for asymmetric algorithm verifying must be of type "public"`);
                if (t.algorithm && "encrypt" === r && "private" === t.type) throw TypeError(`${c(t)} instances for asymmetric algorithm encryption must be of type "public"`)
            })(t, r, n, e)
        }
        r.default = u.bind(void 0, !1);
        let f = u.bind(void 0, !0)
    }, {
        "./invalid_key_input.js": "hv0bb",
        "../runtime/is_key_like.js": "nxGhD",
        "./is_jwk.js": "2dmgx",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    ugaG7: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "wrap", () => d), s.export(r, "unwrap", () => u);
        var a = e("../runtime/encrypt.js"),
            i = s.interopDefault(a),
            o = e("../runtime/decrypt.js"),
            l = s.interopDefault(o),
            c = e("../runtime/base64url.js");
        async function d(e, t, r, n) {
            let s = e.slice(0, 7),
                a = await (0, i.default)(s, r, t, n, new Uint8Array(0));
            return {
                encryptedKey: a.ciphertext,
                iv: (0, c.encode)(a.iv),
                tag: (0, c.encode)(a.tag)
            }
        }
        async function u(e, t, r, n, s) {
            let a = e.slice(0, 7);
            return (0, l.default)(a, t, r, n, s, new Uint8Array(0))
        }
    }, {
        "../runtime/encrypt.js": "fvDiv",
        "../runtime/decrypt.js": "iJrMx",
        "../runtime/base64url.js": "By2uJ",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    fvDiv: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("../lib/buffer_utils.js"),
            i = e("../lib/check_iv_length.js"),
            o = s.interopDefault(i),
            l = e("./check_cek_length.js"),
            c = s.interopDefault(l),
            d = e("./webcrypto.js"),
            u = s.interopDefault(d),
            f = e("../lib/crypto_key.js"),
            h = e("../lib/invalid_key_input.js"),
            p = s.interopDefault(h),
            g = e("../lib/iv.js"),
            m = s.interopDefault(g),
            y = e("../util/errors.js"),
            b = e("./is_key_like.js");
        async function x(e, t, r, n, s) {
            if (!(r instanceof Uint8Array)) throw TypeError((0, p.default)(r, "Uint8Array"));
            let i = parseInt(e.slice(1, 4), 10),
                o = await u.default.subtle.importKey("raw", r.subarray(i >> 3), "AES-CBC", !1, ["encrypt"]),
                l = await u.default.subtle.importKey("raw", r.subarray(0, i >> 3), {
                    hash: `SHA-${i<<1}`,
                    name: "HMAC"
                }, !1, ["sign"]),
                c = new Uint8Array(await u.default.subtle.encrypt({
                    iv: n,
                    name: "AES-CBC"
                }, o, t)),
                d = (0, a.concat)(s, n, c, (0, a.uint64be)(s.length << 3));
            return {
                ciphertext: c,
                tag: new Uint8Array((await u.default.subtle.sign("HMAC", l, d)).slice(0, i >> 3)),
                iv: n
            }
        }
        async function v(e, t, r, n, s) {
            let a;
            r instanceof Uint8Array ? a = await u.default.subtle.importKey("raw", r, "AES-GCM", !1, ["encrypt"]) : ((0, f.checkEncCryptoKey)(r, e, "encrypt"), a = r);
            let i = new Uint8Array(await u.default.subtle.encrypt({
                    additionalData: s,
                    iv: n,
                    name: "AES-GCM",
                    tagLength: 128
                }, a, t)),
                o = i.slice(-16);
            return {
                ciphertext: i.slice(0, -16),
                tag: o,
                iv: n
            }
        }
        r.default = async (e, t, r, n, s) => {
            if (!(0, d.isCryptoKey)(r) && !(r instanceof Uint8Array)) throw TypeError((0, p.default)(r, ...b.types, "Uint8Array"));
            switch (n ? (0, o.default)(e, n) : n = (0, m.default)(e), e) {
                case "A128CBC-HS256":
                case "A192CBC-HS384":
                case "A256CBC-HS512":
                    return r instanceof Uint8Array && (0, c.default)(r, parseInt(e.slice(-3), 10)), x(e, t, r, n, s);
                case "A128GCM":
                case "A192GCM":
                case "A256GCM":
                    return r instanceof Uint8Array && (0, c.default)(r, parseInt(e.slice(1, 4), 10)), v(e, t, r, n, s);
                default:
                    throw new(0, y.JOSENotSupported)("Unsupported JWE Content Encryption Algorithm")
            }
        }
    }, {
        "../lib/buffer_utils.js": "3OSXK",
        "../lib/check_iv_length.js": "f0OE0",
        "./check_cek_length.js": "nQ7SI",
        "./webcrypto.js": "8W0ZQ",
        "../lib/crypto_key.js": "8E2Zq",
        "../lib/invalid_key_input.js": "hv0bb",
        "../lib/iv.js": "931z5",
        "../util/errors.js": "2MROB",
        "./is_key_like.js": "nxGhD",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "6XGo3": [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r);
        var s = e("../util/errors.js");
        r.default = function(e, t, r, n, a) {
            let i;
            if (void 0 !== a.crit && n?.crit === void 0) throw new e('"crit" (Critical) Header Parameter MUST be integrity protected');
            if (!n || void 0 === n.crit) return new Set;
            if (!Array.isArray(n.crit) || 0 === n.crit.length || n.crit.some(e => "string" != typeof e || 0 === e.length)) throw new e('"crit" (Critical) Header Parameter MUST be an array of non-empty strings when present');
            for (let o of (i = void 0 !== r ? new Map([...Object.entries(r), ...t.entries()]) : t, n.crit)) {
                if (!i.has(o)) throw new(0, s.JOSENotSupported)(`Extension Header Parameter "${o}" is not recognized`);
                if (void 0 === a[o]) throw new e(`Extension Header Parameter "${o}" is missing`);
                if (i.get(o) && void 0 === n[o]) throw new e(`Extension Header Parameter "${o}" MUST be integrity protected`)
            }
            return new Set(n.crit)
        }
    }, {
        "../util/errors.js": "2MROB",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "6NazR": [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r), r.default = (e, t) => {
            if (void 0 !== t && (!Array.isArray(t) || t.some(e => "string" != typeof e))) throw TypeError(`"${e}" option must be an array of strings`);
            if (t) return new Set(t)
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "8zfCc": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "generalDecrypt", () => c);
        var a = e("../flattened/decrypt.js"),
            i = e("../../util/errors.js"),
            o = e("../../lib/is_object.js"),
            l = s.interopDefault(o);
        async function c(e, t, r) {
            if (!(0, l.default)(e)) throw new(0, i.JWEInvalid)("General JWE must be an object");
            if (!Array.isArray(e.recipients) || !e.recipients.every(l.default)) throw new(0, i.JWEInvalid)("JWE Recipients missing or incorrect type");
            if (!e.recipients.length) throw new(0, i.JWEInvalid)("JWE Recipients has no members");
            for (let n of e.recipients) try {
                return await (0, a.flattenedDecrypt)({
                    aad: e.aad,
                    ciphertext: e.ciphertext,
                    encrypted_key: n.encrypted_key,
                    header: n.header,
                    iv: e.iv,
                    protected: e.protected,
                    tag: e.tag,
                    unprotected: e.unprotected
                }, t, r)
            } catch {}
            throw new(0, i.JWEDecryptionFailed)
        }
    }, {
        "../flattened/decrypt.js": "luo4b",
        "../../util/errors.js": "2MROB",
        "../../lib/is_object.js": "kQMV3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "3SkdU": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "GeneralEncrypt", () => b);
        var a = e("../flattened/encrypt.js"),
            i = e("../../lib/private_symbols.js"),
            o = e("../../util/errors.js"),
            l = e("../../lib/cek.js"),
            c = s.interopDefault(l),
            d = e("../../lib/is_disjoint.js"),
            u = s.interopDefault(d),
            f = e("../../lib/encrypt_key_management.js"),
            h = s.interopDefault(f),
            p = e("../../runtime/base64url.js"),
            g = e("../../lib/validate_crit.js"),
            m = s.interopDefault(g);
        class y {
            constructor(e, t, r) {
                this.parent = e, this.key = t, this.options = r
            }
            setUnprotectedHeader(e) {
                if (this.unprotectedHeader) throw TypeError("setUnprotectedHeader can only be called once");
                return this.unprotectedHeader = e, this
            }
            addRecipient(...e) {
                return this.parent.addRecipient(...e)
            }
            encrypt(...e) {
                return this.parent.encrypt(...e)
            }
            done() {
                return this.parent
            }
        }
        class b {
            constructor(e) {
                this._recipients = [], this._plaintext = e
            }
            addRecipient(e, t) {
                let r = new y(this, e, {
                    crit: t?.crit
                });
                return this._recipients.push(r), r
            }
            setProtectedHeader(e) {
                if (this._protectedHeader) throw TypeError("setProtectedHeader can only be called once");
                return this._protectedHeader = e, this
            }
            setSharedUnprotectedHeader(e) {
                if (this._unprotectedHeader) throw TypeError("setSharedUnprotectedHeader can only be called once");
                return this._unprotectedHeader = e, this
            }
            setAdditionalAuthenticatedData(e) {
                return this._aad = e, this
            }
            async encrypt() {
                let e;
                if (!this._recipients.length) throw new(0, o.JWEInvalid)("at least one recipient must be added");
                if (1 === this._recipients.length) {
                    let [e] = this._recipients, t = await new(0, a.FlattenedEncrypt)(this._plaintext).setAdditionalAuthenticatedData(this._aad).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(e.unprotectedHeader).encrypt(e.key, {
                        ...e.options
                    }), r = {
                        ciphertext: t.ciphertext,
                        iv: t.iv,
                        recipients: [{}],
                        tag: t.tag
                    };
                    return t.aad && (r.aad = t.aad), t.protected && (r.protected = t.protected), t.unprotected && (r.unprotected = t.unprotected), t.encrypted_key && (r.recipients[0].encrypted_key = t.encrypted_key), t.header && (r.recipients[0].header = t.header), r
                }
                for (let t = 0; t < this._recipients.length; t++) {
                    let r = this._recipients[t];
                    if (!(0, u.default)(this._protectedHeader, this._unprotectedHeader, r.unprotectedHeader)) throw new(0, o.JWEInvalid)("JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint");
                    let n = {
                            ...this._protectedHeader,
                            ...this._unprotectedHeader,
                            ...r.unprotectedHeader
                        },
                        {
                            alg: s
                        } = n;
                    if ("string" != typeof s || !s) throw new(0, o.JWEInvalid)('JWE "alg" (Algorithm) Header Parameter missing or invalid');
                    if ("dir" === s || "ECDH-ES" === s) throw new(0, o.JWEInvalid)('"dir" and "ECDH-ES" alg may only be used with a single recipient');
                    if ("string" != typeof n.enc || !n.enc) throw new(0, o.JWEInvalid)('JWE "enc" (Encryption Algorithm) Header Parameter missing or invalid');
                    if (e) {
                        if (e !== n.enc) throw new(0, o.JWEInvalid)('JWE "enc" (Encryption Algorithm) Header Parameter must be the same for all recipients')
                    } else e = n.enc;
                    if ((0, m.default)(o.JWEInvalid, new Map, r.options.crit, this._protectedHeader, n), void 0 !== n.zip) throw new(0, o.JOSENotSupported)('JWE "zip" (Compression Algorithm) Header Parameter is not supported.')
                }
                let t = (0, c.default)(e),
                    r = {
                        ciphertext: "",
                        iv: "",
                        recipients: [],
                        tag: ""
                    };
                for (let n = 0; n < this._recipients.length; n++) {
                    let s = this._recipients[n],
                        o = {};
                    r.recipients.push(o);
                    let l = ({
                        ...this._protectedHeader,
                        ...this._unprotectedHeader,
                        ...s.unprotectedHeader
                    }).alg.startsWith("PBES2") ? 2048 + n : void 0;
                    if (0 === n) {
                        let e = await new(0, a.FlattenedEncrypt)(this._plaintext).setAdditionalAuthenticatedData(this._aad).setContentEncryptionKey(t).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(s.unprotectedHeader).setKeyManagementParameters({
                            p2c: l
                        }).encrypt(s.key, {
                            ...s.options,
                            [i.unprotected]: !0
                        });
                        r.ciphertext = e.ciphertext, r.iv = e.iv, r.tag = e.tag, e.aad && (r.aad = e.aad), e.protected && (r.protected = e.protected), e.unprotected && (r.unprotected = e.unprotected), o.encrypted_key = e.encrypted_key, e.header && (o.header = e.header);
                        continue
                    }
                    let {
                        encryptedKey: c,
                        parameters: d
                    } = await (0, h.default)(s.unprotectedHeader?.alg || this._protectedHeader?.alg || this._unprotectedHeader?.alg, e, s.key, t, {
                        p2c: l
                    });
                    o.encrypted_key = (0, p.encode)(c), (s.unprotectedHeader || d) && (o.header = {
                        ...s.unprotectedHeader,
                        ...d
                    })
                }
                return r
            }
        }
    }, {
        "../flattened/encrypt.js": "38HbS",
        "../../lib/private_symbols.js": "27qIB",
        "../../util/errors.js": "2MROB",
        "../../lib/cek.js": "bsH55",
        "../../lib/is_disjoint.js": "kFS6o",
        "../../lib/encrypt_key_management.js": "d7HOV",
        "../../runtime/base64url.js": "By2uJ",
        "../../lib/validate_crit.js": "6XGo3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "38HbS": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "FlattenedEncrypt", () => y);
        var a = e("../../runtime/base64url.js"),
            i = e("../../lib/private_symbols.js"),
            o = e("../../runtime/encrypt.js"),
            l = s.interopDefault(o),
            c = e("../../lib/encrypt_key_management.js"),
            d = s.interopDefault(c),
            u = e("../../util/errors.js"),
            f = e("../../lib/is_disjoint.js"),
            h = s.interopDefault(f),
            p = e("../../lib/buffer_utils.js"),
            g = e("../../lib/validate_crit.js"),
            m = s.interopDefault(g);
        class y {
            constructor(e) {
                if (!(e instanceof Uint8Array)) throw TypeError("plaintext must be an instance of Uint8Array");
                this._plaintext = e
            }
            setKeyManagementParameters(e) {
                if (this._keyManagementParameters) throw TypeError("setKeyManagementParameters can only be called once");
                return this._keyManagementParameters = e, this
            }
            setProtectedHeader(e) {
                if (this._protectedHeader) throw TypeError("setProtectedHeader can only be called once");
                return this._protectedHeader = e, this
            }
            setSharedUnprotectedHeader(e) {
                if (this._sharedUnprotectedHeader) throw TypeError("setSharedUnprotectedHeader can only be called once");
                return this._sharedUnprotectedHeader = e, this
            }
            setUnprotectedHeader(e) {
                if (this._unprotectedHeader) throw TypeError("setUnprotectedHeader can only be called once");
                return this._unprotectedHeader = e, this
            }
            setAdditionalAuthenticatedData(e) {
                return this._aad = e, this
            }
            setContentEncryptionKey(e) {
                if (this._cek) throw TypeError("setContentEncryptionKey can only be called once");
                return this._cek = e, this
            }
            setInitializationVector(e) {
                if (this._iv) throw TypeError("setInitializationVector can only be called once");
                return this._iv = e, this
            }
            async encrypt(e, t) {
                let r, n, s, o, c;
                if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) throw new(0, u.JWEInvalid)("either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()");
                if (!(0, h.default)(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) throw new(0, u.JWEInvalid)("JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint");
                let f = {
                    ...this._protectedHeader,
                    ...this._unprotectedHeader,
                    ...this._sharedUnprotectedHeader
                };
                if ((0, m.default)(u.JWEInvalid, new Map, t?.crit, this._protectedHeader, f), void 0 !== f.zip) throw new(0, u.JOSENotSupported)('JWE "zip" (Compression Algorithm) Header Parameter is not supported.');
                let {
                    alg: g,
                    enc: y
                } = f;
                if ("string" != typeof g || !g) throw new(0, u.JWEInvalid)('JWE "alg" (Algorithm) Header Parameter missing or invalid');
                if ("string" != typeof y || !y) throw new(0, u.JWEInvalid)('JWE "enc" (Encryption Algorithm) Header Parameter missing or invalid');
                if (this._cek && ("dir" === g || "ECDH-ES" === g)) throw TypeError(`setContentEncryptionKey cannot be called with JWE "alg" (Algorithm) Header ${g}`);
                {
                    let s;
                    ({
                        cek: n,
                        encryptedKey: r,
                        parameters: s
                    } = await (0, d.default)(g, y, e, this._cek, this._keyManagementParameters)), s && (t && i.unprotected in t ? this._unprotectedHeader ? this._unprotectedHeader = {
                        ...this._unprotectedHeader,
                        ...s
                    } : this.setUnprotectedHeader(s) : this._protectedHeader ? this._protectedHeader = {
                        ...this._protectedHeader,
                        ...s
                    } : this.setProtectedHeader(s))
                }
                o = this._protectedHeader ? p.encoder.encode((0, a.encode)(JSON.stringify(this._protectedHeader))) : p.encoder.encode(""), this._aad ? (c = (0, a.encode)(this._aad), s = (0, p.concat)(o, p.encoder.encode("."), p.encoder.encode(c))) : s = o;
                let {
                    ciphertext: b,
                    tag: x,
                    iv: v
                } = await (0, l.default)(y, this._plaintext, n, this._iv, s), w = {
                    ciphertext: (0, a.encode)(b)
                };
                return v && (w.iv = (0, a.encode)(v)), x && (w.tag = (0, a.encode)(x)), r && (w.encrypted_key = (0, a.encode)(r)), c && (w.aad = c), this._protectedHeader && (w.protected = p.decoder.decode(o)), this._sharedUnprotectedHeader && (w.unprotected = this._sharedUnprotectedHeader), this._unprotectedHeader && (w.header = this._unprotectedHeader), w
            }
        }
    }, {
        "../../runtime/base64url.js": "By2uJ",
        "../../lib/private_symbols.js": "27qIB",
        "../../runtime/encrypt.js": "fvDiv",
        "../../lib/encrypt_key_management.js": "d7HOV",
        "../../util/errors.js": "2MROB",
        "../../lib/is_disjoint.js": "kFS6o",
        "../../lib/buffer_utils.js": "3OSXK",
        "../../lib/validate_crit.js": "6XGo3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "27qIB": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "unprotected", () => a);
        let a = Symbol()
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    d7HOV: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("../runtime/aeskw.js"),
            i = e("../runtime/ecdhes.js"),
            o = e("../runtime/pbes2kw.js"),
            l = e("../runtime/rsaes.js"),
            c = e("../runtime/base64url.js"),
            d = e("../runtime/normalize_key.js"),
            u = s.interopDefault(d),
            f = e("../lib/cek.js"),
            h = s.interopDefault(f),
            p = e("../util/errors.js"),
            g = e("../key/export.js"),
            m = e("./check_key_type.js"),
            y = s.interopDefault(m),
            b = e("./aesgcmkw.js");
        r.default = async function(e, t, r, n, s = {}) {
            let d, m, x;
            switch ((0, y.default)(e, r, "encrypt"), r = await u.default.normalizePublicKey?.(r, e) || r, e) {
                case "dir":
                    x = r;
                    break;
                case "ECDH-ES":
                case "ECDH-ES+A128KW":
                case "ECDH-ES+A192KW":
                case "ECDH-ES+A256KW": {
                    if (!i.ecdhAllowed(r)) throw new(0, p.JOSENotSupported)("ECDH with the provided key is not allowed or not supported by your javascript runtime");
                    let {
                        apu: o,
                        apv: l
                    } = s, {
                        epk: u
                    } = s;
                    u || (u = (await i.generateEpk(r)).privateKey);
                    let {
                        x: y,
                        y: b,
                        crv: v,
                        kty: w
                    } = await (0, g.exportJWK)(u), E = await i.deriveKey(r, u, "ECDH-ES" === e ? t : e, "ECDH-ES" === e ? (0, f.bitLength)(t) : parseInt(e.slice(-5, -2), 10), o, l);
                    if (m = {
                            epk: {
                                x: y,
                                crv: v,
                                kty: w
                            }
                        }, "EC" === w && (m.epk.y = b), o && (m.apu = (0, c.encode)(o)), l && (m.apv = (0, c.encode)(l)), "ECDH-ES" === e) {
                        x = E;
                        break
                    }
                    x = n || (0, h.default)(t);
                    let A = e.slice(-6);
                    d = await (0, a.wrap)(A, E, x);
                    break
                }
                case "RSA1_5":
                case "RSA-OAEP":
                case "RSA-OAEP-256":
                case "RSA-OAEP-384":
                case "RSA-OAEP-512":
                    x = n || (0, h.default)(t), d = await (0, l.encrypt)(e, r, x);
                    break;
                case "PBES2-HS256+A128KW":
                case "PBES2-HS384+A192KW":
                case "PBES2-HS512+A256KW": {
                    x = n || (0, h.default)(t);
                    let {
                        p2c: a,
                        p2s: i
                    } = s;
                    ({
                        encryptedKey: d,
                        ...m
                    } = await (0, o.encrypt)(e, r, x, a, i));
                    break
                }
                case "A128KW":
                case "A192KW":
                case "A256KW":
                    x = n || (0, h.default)(t), d = await (0, a.wrap)(e, r, x);
                    break;
                case "A128GCMKW":
                case "A192GCMKW":
                case "A256GCMKW": {
                    x = n || (0, h.default)(t);
                    let {
                        iv: a
                    } = s;
                    ({
                        encryptedKey: d,
                        ...m
                    } = await (0, b.wrap)(e, r, x, a));
                    break
                }
                default:
                    throw new(0, p.JOSENotSupported)('Invalid or unsupported "alg" (JWE Algorithm) header value')
            }
            return {
                cek: x,
                encryptedKey: d,
                parameters: m
            }
        }
    }, {
        "../runtime/aeskw.js": "pUGmP",
        "../runtime/ecdhes.js": "aTdif",
        "../runtime/pbes2kw.js": "6uLsN",
        "../runtime/rsaes.js": "6nFVi",
        "../runtime/base64url.js": "By2uJ",
        "../runtime/normalize_key.js": "2snrQ",
        "../lib/cek.js": "bsH55",
        "../util/errors.js": "2MROB",
        "../key/export.js": "fy0WI",
        "./check_key_type.js": "fyQAE",
        "./aesgcmkw.js": "ugaG7",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    fy0WI: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "exportSPKI", () => l), s.export(r, "exportPKCS8", () => c), s.export(r, "exportJWK", () => d);
        var a = e("../runtime/asn1.js"),
            i = e("../runtime/key_to_jwk.js"),
            o = s.interopDefault(i);
        async function l(e) {
            return (0, a.toSPKI)(e)
        }
        async function c(e) {
            return (0, a.toPKCS8)(e)
        }
        async function d(e) {
            return (0, o.default)(e)
        }
    }, {
        "../runtime/asn1.js": "16Zke",
        "../runtime/key_to_jwk.js": "9A3Mz",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "9A3Mz": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("./webcrypto.js"),
            i = s.interopDefault(a),
            o = e("../lib/invalid_key_input.js"),
            l = s.interopDefault(o),
            c = e("./base64url.js"),
            d = e("./is_key_like.js");
        r.default = async e => {
            if (e instanceof Uint8Array) return {
                kty: "oct",
                k: (0, c.encode)(e)
            };
            if (!(0, a.isCryptoKey)(e)) throw TypeError((0, l.default)(e, ...d.types, "Uint8Array"));
            if (!e.extractable) throw TypeError("non-extractable CryptoKey cannot be exported as a JWK");
            let {
                ext: t,
                key_ops: r,
                alg: n,
                use: s,
                ...o
            } = await i.default.subtle.exportKey("jwk", e);
            return o
        }
    }, {
        "./webcrypto.js": "8W0ZQ",
        "../lib/invalid_key_input.js": "hv0bb",
        "./base64url.js": "By2uJ",
        "./is_key_like.js": "nxGhD",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    dqf6f: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "compactVerify", () => l);
        var a = e("../flattened/verify.js"),
            i = e("../../util/errors.js"),
            o = e("../../lib/buffer_utils.js");
        async function l(e, t, r) {
            if (e instanceof Uint8Array && (e = o.decoder.decode(e)), "string" != typeof e) throw new(0, i.JWSInvalid)("Compact JWS must be a string or Uint8Array");
            let {
                0: n,
                1: s,
                2: l,
                length: c
            } = e.split(".");
            if (3 !== c) throw new(0, i.JWSInvalid)("Invalid Compact JWS");
            let d = await (0, a.flattenedVerify)({
                    payload: s,
                    protected: n,
                    signature: l
                }, t, r),
                u = {
                    payload: d.payload,
                    protectedHeader: d.protectedHeader
                };
            return "function" == typeof t ? {
                ...u,
                key: d.key
            } : u
        }
    }, {
        "../flattened/verify.js": "dx6in",
        "../../util/errors.js": "2MROB",
        "../../lib/buffer_utils.js": "3OSXK",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    dx6in: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "flattenedVerify", () => w);
        var a = e("../../runtime/base64url.js"),
            i = e("../../runtime/verify.js"),
            o = s.interopDefault(i),
            l = e("../../util/errors.js"),
            c = e("../../lib/buffer_utils.js"),
            d = e("../../lib/is_disjoint.js"),
            u = s.interopDefault(d),
            f = e("../../lib/is_object.js"),
            h = s.interopDefault(f),
            p = e("../../lib/check_key_type.js"),
            g = e("../../lib/validate_crit.js"),
            m = s.interopDefault(g),
            y = e("../../lib/validate_algorithms.js"),
            b = s.interopDefault(y),
            x = e("../../lib/is_jwk.js"),
            v = e("../../key/import.js");
        async function w(e, t, r) {
            let n, s;
            if (!(0, h.default)(e)) throw new(0, l.JWSInvalid)("Flattened JWS must be an object");
            if (void 0 === e.protected && void 0 === e.header) throw new(0, l.JWSInvalid)('Flattened JWS must have either of the "protected" or "header" members');
            if (void 0 !== e.protected && "string" != typeof e.protected) throw new(0, l.JWSInvalid)("JWS Protected Header incorrect type");
            if (void 0 === e.payload) throw new(0, l.JWSInvalid)("JWS Payload missing");
            if ("string" != typeof e.signature) throw new(0, l.JWSInvalid)("JWS Signature missing or incorrect type");
            if (void 0 !== e.header && !(0, h.default)(e.header)) throw new(0, l.JWSInvalid)("JWS Unprotected Header incorrect type");
            let i = {};
            if (e.protected) try {
                let t = (0, a.decode)(e.protected);
                i = JSON.parse(c.decoder.decode(t))
            } catch {
                throw new(0, l.JWSInvalid)("JWS Protected Header is invalid")
            }
            if (!(0, u.default)(i, e.header)) throw new(0, l.JWSInvalid)("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");
            let d = {
                    ...i,
                    ...e.header
                },
                f = (0, m.default)(l.JWSInvalid, new Map([
                    ["b64", !0]
                ]), r?.crit, i, d),
                g = !0;
            if (f.has("b64") && "boolean" != typeof(g = i.b64)) throw new(0, l.JWSInvalid)('The "b64" (base64url-encode payload) Header Parameter must be a boolean');
            let {
                alg: y
            } = d;
            if ("string" != typeof y || !y) throw new(0, l.JWSInvalid)('JWS "alg" (Algorithm) Header Parameter missing or invalid');
            let w = r && (0, b.default)("algorithms", r.algorithms);
            if (w && !w.has(y)) throw new(0, l.JOSEAlgNotAllowed)('"alg" (Algorithm) Header Parameter value not allowed');
            if (g) {
                if ("string" != typeof e.payload) throw new(0, l.JWSInvalid)("JWS Payload must be a string")
            } else if ("string" != typeof e.payload && !(e.payload instanceof Uint8Array)) throw new(0, l.JWSInvalid)("JWS Payload must be a string or an Uint8Array instance");
            let E = !1;
            "function" == typeof t ? (t = await t(i, e), E = !0, (0, p.checkKeyTypeWithJwk)(y, t, "verify"), (0, x.isJWK)(t) && (t = await (0, v.importJWK)(t, y))) : (0, p.checkKeyTypeWithJwk)(y, t, "verify");
            let A = (0, c.concat)(c.encoder.encode(e.protected ?? ""), c.encoder.encode("."), "string" == typeof e.payload ? c.encoder.encode(e.payload) : e.payload);
            try {
                n = (0, a.decode)(e.signature)
            } catch {
                throw new(0, l.JWSInvalid)("Failed to base64url decode the signature")
            }
            if (!await (0, o.default)(y, t, n, A)) throw new(0, l.JWSSignatureVerificationFailed);
            if (g) try {
                s = (0, a.decode)(e.payload)
            } catch {
                throw new(0, l.JWSInvalid)("Failed to base64url decode the payload")
            } else s = "string" == typeof e.payload ? c.encoder.encode(e.payload) : e.payload;
            let j = {
                payload: s
            };
            return (void 0 !== e.protected && (j.protectedHeader = i), void 0 !== e.header && (j.unprotectedHeader = e.header), E) ? {
                ...j,
                key: t
            } : j
        }
    }, {
        "../../runtime/base64url.js": "By2uJ",
        "../../runtime/verify.js": "1F76X",
        "../../util/errors.js": "2MROB",
        "../../lib/buffer_utils.js": "3OSXK",
        "../../lib/is_disjoint.js": "kFS6o",
        "../../lib/is_object.js": "kQMV3",
        "../../lib/check_key_type.js": "fyQAE",
        "../../lib/validate_crit.js": "6XGo3",
        "../../lib/validate_algorithms.js": "6NazR",
        "../../lib/is_jwk.js": "2dmgx",
        "../../key/import.js": "azICy",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "1F76X": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("./subtle_dsa.js"),
            i = s.interopDefault(a),
            o = e("./webcrypto.js"),
            l = s.interopDefault(o),
            c = e("./check_key_length.js"),
            d = s.interopDefault(c),
            u = e("./get_sign_verify_key.js"),
            f = s.interopDefault(u);
        r.default = async (e, t, r, n) => {
            let s = await (0, f.default)(e, t, "verify");
            (0, d.default)(e, s);
            let a = (0, i.default)(e, s.algorithm);
            try {
                return await l.default.subtle.verify(a, s, r, n)
            } catch {
                return !1
            }
        }
    }, {
        "./subtle_dsa.js": "Wuc1m",
        "./webcrypto.js": "8W0ZQ",
        "./check_key_length.js": "c7se2",
        "./get_sign_verify_key.js": "ip1IO",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    Wuc1m: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => i);
        var a = e("../util/errors.js");

        function i(e, t) {
            let r = `SHA-${e.slice(-3)}`;
            switch (e) {
                case "HS256":
                case "HS384":
                case "HS512":
                    return {
                        hash: r, name: "HMAC"
                    };
                case "PS256":
                case "PS384":
                case "PS512":
                    return {
                        hash: r, name: "RSA-PSS", saltLength: e.slice(-3) >> 3
                    };
                case "RS256":
                case "RS384":
                case "RS512":
                    return {
                        hash: r, name: "RSASSA-PKCS1-v1_5"
                    };
                case "ES256":
                case "ES384":
                case "ES512":
                    return {
                        hash: r, name: "ECDSA", namedCurve: t.namedCurve
                    };
                case "Ed25519":
                    return {
                        name: "Ed25519"
                    };
                case "EdDSA":
                    return {
                        name: t.name
                    };
                default:
                    throw new(0, a.JOSENotSupported)(`alg ${e} is not supported either by JOSE or your javascript runtime`)
            }
        }
    }, {
        "../util/errors.js": "2MROB",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    ip1IO: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => h);
        var a = e("./webcrypto.js"),
            i = s.interopDefault(a),
            o = e("../lib/crypto_key.js"),
            l = e("../lib/invalid_key_input.js"),
            c = s.interopDefault(l),
            d = e("./is_key_like.js"),
            u = e("./normalize_key.js"),
            f = s.interopDefault(u);
        async function h(e, t, r) {
            if ("sign" === r && (t = await f.default.normalizePrivateKey(t, e)), "verify" === r && (t = await f.default.normalizePublicKey(t, e)), (0, a.isCryptoKey)(t)) return (0, o.checkSigCryptoKey)(t, e, r), t;
            if (t instanceof Uint8Array) {
                if (!e.startsWith("HS")) throw TypeError((0, c.default)(t, ...d.types));
                return i.default.subtle.importKey("raw", t, {
                    hash: `SHA-${e.slice(-3)}`,
                    name: "HMAC"
                }, !1, [r])
            }
            throw TypeError((0, c.default)(t, ...d.types, "Uint8Array", "JSON Web Key"))
        }
    }, {
        "./webcrypto.js": "8W0ZQ",
        "../lib/crypto_key.js": "8E2Zq",
        "../lib/invalid_key_input.js": "hv0bb",
        "./is_key_like.js": "nxGhD",
        "./normalize_key.js": "2snrQ",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    dUaF5: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "generalVerify", () => c);
        var a = e("../flattened/verify.js"),
            i = e("../../util/errors.js"),
            o = e("../../lib/is_object.js"),
            l = s.interopDefault(o);
        async function c(e, t, r) {
            if (!(0, l.default)(e)) throw new(0, i.JWSInvalid)("General JWS must be an object");
            if (!Array.isArray(e.signatures) || !e.signatures.every(l.default)) throw new(0, i.JWSInvalid)("JWS Signatures missing or incorrect type");
            for (let n of e.signatures) try {
                return await (0, a.flattenedVerify)({
                    header: n.header,
                    payload: e.payload,
                    protected: n.protected,
                    signature: n.signature
                }, t, r)
            } catch {}
            throw new(0, i.JWSSignatureVerificationFailed)
        }
    }, {
        "../flattened/verify.js": "dx6in",
        "../../util/errors.js": "2MROB",
        "../../lib/is_object.js": "kQMV3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    kEUL7: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "jwtVerify", () => c);
        var a = e("../jws/compact/verify.js"),
            i = e("../lib/jwt_claims_set.js"),
            o = s.interopDefault(i),
            l = e("../util/errors.js");
        async function c(e, t, r) {
            let n = await (0, a.compactVerify)(e, t, r);
            if (n.protectedHeader.crit?.includes("b64") && !1 === n.protectedHeader.b64) throw new(0, l.JWTInvalid)("JWTs MUST NOT use unencoded payload");
            let s = {
                payload: (0, o.default)(n.protectedHeader, n.payload, r),
                protectedHeader: n.protectedHeader
            };
            return "function" == typeof t ? {
                ...s,
                key: n.key
            } : s
        }
    }, {
        "../jws/compact/verify.js": "dqf6f",
        "../lib/jwt_claims_set.js": "1CtcQ",
        "../util/errors.js": "2MROB",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "1CtcQ": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("../util/errors.js"),
            i = e("./buffer_utils.js"),
            o = e("./epoch.js"),
            l = s.interopDefault(o),
            c = e("./secs.js"),
            d = s.interopDefault(c),
            u = e("./is_object.js"),
            f = s.interopDefault(u);
        let h = e => e.toLowerCase().replace(/^application\//, "");
        r.default = (e, t, r = {}) => {
            var n, s;
            let o, c;
            try {
                o = JSON.parse(i.decoder.decode(t))
            } catch {}
            if (!(0, f.default)(o)) throw new(0, a.JWTInvalid)("JWT Claims Set must be a top-level JSON object");
            let {
                typ: u
            } = r;
            if (u && ("string" != typeof e.typ || h(e.typ) !== h(u))) throw new(0, a.JWTClaimValidationFailed)('unexpected "typ" JWT header value', o, "typ", "check_failed");
            let {
                requiredClaims: p = [],
                issuer: g,
                subject: m,
                audience: y,
                maxTokenAge: b
            } = r, x = [...p];
            for (let e of (void 0 !== b && x.push("iat"), void 0 !== y && x.push("aud"), void 0 !== m && x.push("sub"), void 0 !== g && x.push("iss"), new Set(x.reverse())))
                if (!(e in o)) throw new(0, a.JWTClaimValidationFailed)(`missing required "${e}" claim`, o, e, "missing");
            if (g && !(Array.isArray(g) ? g : [g]).includes(o.iss)) throw new(0, a.JWTClaimValidationFailed)('unexpected "iss" claim value', o, "iss", "check_failed");
            if (m && o.sub !== m) throw new(0, a.JWTClaimValidationFailed)('unexpected "sub" claim value', o, "sub", "check_failed");
            if (y && (n = o.aud, s = "string" == typeof y ? [y] : y, "string" == typeof n ? !s.includes(n) : !(Array.isArray(n) && s.some(Set.prototype.has.bind(new Set(n)))))) throw new(0, a.JWTClaimValidationFailed)('unexpected "aud" claim value', o, "aud", "check_failed");
            switch (typeof r.clockTolerance) {
                case "string":
                    c = (0, d.default)(r.clockTolerance);
                    break;
                case "number":
                    c = r.clockTolerance;
                    break;
                case "undefined":
                    c = 0;
                    break;
                default:
                    throw TypeError("Invalid clockTolerance option type")
            }
            let {
                currentDate: v
            } = r, w = (0, l.default)(v || new Date);
            if ((void 0 !== o.iat || b) && "number" != typeof o.iat) throw new(0, a.JWTClaimValidationFailed)('"iat" claim must be a number', o, "iat", "invalid");
            if (void 0 !== o.nbf) {
                if ("number" != typeof o.nbf) throw new(0, a.JWTClaimValidationFailed)('"nbf" claim must be a number', o, "nbf", "invalid");
                if (o.nbf > w + c) throw new(0, a.JWTClaimValidationFailed)('"nbf" claim timestamp check failed', o, "nbf", "check_failed")
            }
            if (void 0 !== o.exp) {
                if ("number" != typeof o.exp) throw new(0, a.JWTClaimValidationFailed)('"exp" claim must be a number', o, "exp", "invalid");
                if (o.exp <= w - c) throw new(0, a.JWTExpired)('"exp" claim timestamp check failed', o, "exp", "check_failed")
            }
            if (b) {
                let e = w - o.iat;
                if (e - c > ("number" == typeof b ? b : (0, d.default)(b))) throw new(0, a.JWTExpired)('"iat" claim timestamp check failed (too far in the past)', o, "iat", "check_failed");
                if (e < 0 - c) throw new(0, a.JWTClaimValidationFailed)('"iat" claim timestamp check failed (it should be in the past)', o, "iat", "check_failed")
            }
            return o
        }
    }, {
        "../util/errors.js": "2MROB",
        "./buffer_utils.js": "3OSXK",
        "./epoch.js": "cq2Hv",
        "./secs.js": "kWq7m",
        "./is_object.js": "kQMV3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    cq2Hv: [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r), r.default = e => Math.floor(e.getTime() / 1e3)
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    kWq7m: [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r);
        let s = /^(\+|\-)? ?(\d+|\d+\.\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;
        r.default = e => {
            let t, r = s.exec(e);
            if (!r || r[4] && r[1]) throw TypeError("Invalid time period format");
            let n = parseFloat(r[2]);
            switch (r[3].toLowerCase()) {
                case "sec":
                case "secs":
                case "second":
                case "seconds":
                case "s":
                    t = Math.round(n);
                    break;
                case "minute":
                case "minutes":
                case "min":
                case "mins":
                case "m":
                    t = Math.round(60 * n);
                    break;
                case "hour":
                case "hours":
                case "hr":
                case "hrs":
                case "h":
                    t = Math.round(3600 * n);
                    break;
                case "day":
                case "days":
                case "d":
                    t = Math.round(86400 * n);
                    break;
                case "week":
                case "weeks":
                case "w":
                    t = Math.round(604800 * n);
                    break;
                default:
                    t = Math.round(0x1e187e0 * n)
            }
            return "-" === r[1] || "ago" === r[4] ? -t : t
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "2hBcA": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "jwtDecrypt", () => c);
        var a = e("../jwe/compact/decrypt.js"),
            i = e("../lib/jwt_claims_set.js"),
            o = s.interopDefault(i),
            l = e("../util/errors.js");
        async function c(e, t, r) {
            let n = await (0, a.compactDecrypt)(e, t, r),
                s = (0, o.default)(n.protectedHeader, n.plaintext, r),
                {
                    protectedHeader: i
                } = n;
            if (void 0 !== i.iss && i.iss !== s.iss) throw new(0, l.JWTClaimValidationFailed)('replicated "iss" claim header parameter mismatch', s, "iss", "mismatch");
            if (void 0 !== i.sub && i.sub !== s.sub) throw new(0, l.JWTClaimValidationFailed)('replicated "sub" claim header parameter mismatch', s, "sub", "mismatch");
            if (void 0 !== i.aud && JSON.stringify(i.aud) !== JSON.stringify(s.aud)) throw new(0, l.JWTClaimValidationFailed)('replicated "aud" claim header parameter mismatch', s, "aud", "mismatch");
            let c = {
                payload: s,
                protectedHeader: i
            };
            return "function" == typeof t ? {
                ...c,
                key: n.key
            } : c
        }
    }, {
        "../jwe/compact/decrypt.js": "7DFBy",
        "../lib/jwt_claims_set.js": "1CtcQ",
        "../util/errors.js": "2MROB",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "3oyTC": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "CompactEncrypt", () => i);
        var a = e("../flattened/encrypt.js");
        class i {
            constructor(e) {
                this._flattened = new(0, a.FlattenedEncrypt)(e)
            }
            setContentEncryptionKey(e) {
                return this._flattened.setContentEncryptionKey(e), this
            }
            setInitializationVector(e) {
                return this._flattened.setInitializationVector(e), this
            }
            setProtectedHeader(e) {
                return this._flattened.setProtectedHeader(e), this
            }
            setKeyManagementParameters(e) {
                return this._flattened.setKeyManagementParameters(e), this
            }
            async encrypt(e, t) {
                let r = await this._flattened.encrypt(e, t);
                return [r.protected, r.encrypted_key, r.iv, r.ciphertext, r.tag].join(".")
            }
        }
    }, {
        "../flattened/encrypt.js": "38HbS",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    fw8ji: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "CompactSign", () => i);
        var a = e("../flattened/sign.js");
        class i {
            constructor(e) {
                this._flattened = new(0, a.FlattenedSign)(e)
            }
            setProtectedHeader(e) {
                return this._flattened.setProtectedHeader(e), this
            }
            async sign(e, t) {
                let r = await this._flattened.sign(e, t);
                if (void 0 === r.payload) throw TypeError("use the flattened module for creating JWS with b64: false");
                return `${r.protected}.${r.payload}.${r.signature}`
            }
        }
    }, {
        "../flattened/sign.js": "1BlEG",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "1BlEG": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "FlattenedSign", () => g);
        var a = e("../../runtime/base64url.js"),
            i = e("../../runtime/sign.js"),
            o = s.interopDefault(i),
            l = e("../../lib/is_disjoint.js"),
            c = s.interopDefault(l),
            d = e("../../util/errors.js"),
            u = e("../../lib/buffer_utils.js"),
            f = e("../../lib/check_key_type.js"),
            h = e("../../lib/validate_crit.js"),
            p = s.interopDefault(h);
        class g {
            constructor(e) {
                if (!(e instanceof Uint8Array)) throw TypeError("payload must be an instance of Uint8Array");
                this._payload = e
            }
            setProtectedHeader(e) {
                if (this._protectedHeader) throw TypeError("setProtectedHeader can only be called once");
                return this._protectedHeader = e, this
            }
            setUnprotectedHeader(e) {
                if (this._unprotectedHeader) throw TypeError("setUnprotectedHeader can only be called once");
                return this._unprotectedHeader = e, this
            }
            async sign(e, t) {
                let r;
                if (!this._protectedHeader && !this._unprotectedHeader) throw new(0, d.JWSInvalid)("either setProtectedHeader or setUnprotectedHeader must be called before #sign()");
                if (!(0, c.default)(this._protectedHeader, this._unprotectedHeader)) throw new(0, d.JWSInvalid)("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");
                let n = {
                        ...this._protectedHeader,
                        ...this._unprotectedHeader
                    },
                    s = (0, p.default)(d.JWSInvalid, new Map([
                        ["b64", !0]
                    ]), t?.crit, this._protectedHeader, n),
                    i = !0;
                if (s.has("b64") && "boolean" != typeof(i = this._protectedHeader.b64)) throw new(0, d.JWSInvalid)('The "b64" (base64url-encode payload) Header Parameter must be a boolean');
                let {
                    alg: l
                } = n;
                if ("string" != typeof l || !l) throw new(0, d.JWSInvalid)('JWS "alg" (Algorithm) Header Parameter missing or invalid');
                (0, f.checkKeyTypeWithJwk)(l, e, "sign");
                let h = this._payload;
                i && (h = u.encoder.encode((0, a.encode)(h))), r = this._protectedHeader ? u.encoder.encode((0, a.encode)(JSON.stringify(this._protectedHeader))) : u.encoder.encode("");
                let g = (0, u.concat)(r, u.encoder.encode("."), h),
                    m = await (0, o.default)(l, e, g),
                    y = {
                        signature: (0, a.encode)(m),
                        payload: ""
                    };
                return i && (y.payload = u.decoder.decode(h)), this._unprotectedHeader && (y.header = this._unprotectedHeader), this._protectedHeader && (y.protected = u.decoder.decode(r)), y
            }
        }
    }, {
        "../../runtime/base64url.js": "By2uJ",
        "../../runtime/sign.js": "1rtpN",
        "../../lib/is_disjoint.js": "kFS6o",
        "../../util/errors.js": "2MROB",
        "../../lib/buffer_utils.js": "3OSXK",
        "../../lib/check_key_type.js": "fyQAE",
        "../../lib/validate_crit.js": "6XGo3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "1rtpN": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("./subtle_dsa.js"),
            i = s.interopDefault(a),
            o = e("./webcrypto.js"),
            l = s.interopDefault(o),
            c = e("./check_key_length.js"),
            d = s.interopDefault(c),
            u = e("./get_sign_verify_key.js"),
            f = s.interopDefault(u);
        r.default = async (e, t, r) => {
            let n = await (0, f.default)(e, t, "sign");
            return (0, d.default)(e, n), new Uint8Array(await l.default.subtle.sign((0, i.default)(e, n.algorithm), n, r))
        }
    }, {
        "./subtle_dsa.js": "Wuc1m",
        "./webcrypto.js": "8W0ZQ",
        "./check_key_length.js": "c7se2",
        "./get_sign_verify_key.js": "ip1IO",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "5keNb": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "GeneralSign", () => l);
        var a = e("../flattened/sign.js"),
            i = e("../../util/errors.js");
        class o {
            constructor(e, t, r) {
                this.parent = e, this.key = t, this.options = r
            }
            setProtectedHeader(e) {
                if (this.protectedHeader) throw TypeError("setProtectedHeader can only be called once");
                return this.protectedHeader = e, this
            }
            setUnprotectedHeader(e) {
                if (this.unprotectedHeader) throw TypeError("setUnprotectedHeader can only be called once");
                return this.unprotectedHeader = e, this
            }
            addSignature(...e) {
                return this.parent.addSignature(...e)
            }
            sign(...e) {
                return this.parent.sign(...e)
            }
            done() {
                return this.parent
            }
        }
        class l {
            constructor(e) {
                this._signatures = [], this._payload = e
            }
            addSignature(e, t) {
                let r = new o(this, e, t);
                return this._signatures.push(r), r
            }
            async sign() {
                if (!this._signatures.length) throw new(0, i.JWSInvalid)("at least one signature must be added");
                let e = {
                    signatures: [],
                    payload: ""
                };
                for (let t = 0; t < this._signatures.length; t++) {
                    let r = this._signatures[t],
                        n = new(0, a.FlattenedSign)(this._payload);
                    n.setProtectedHeader(r.protectedHeader), n.setUnprotectedHeader(r.unprotectedHeader);
                    let {
                        payload: s,
                        ...o
                    } = await n.sign(r.key, r.options);
                    if (0 === t) e.payload = s;
                    else if (e.payload !== s) throw new(0, i.JWSInvalid)("inconsistent use of JWS Unencoded Payload (RFC7797)");
                    e.signatures.push(o)
                }
                return e
            }
        }
    }, {
        "../flattened/sign.js": "1BlEG",
        "../../util/errors.js": "2MROB",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "6ZXe2": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "SignJWT", () => c);
        var a = e("../jws/compact/sign.js"),
            i = e("../util/errors.js"),
            o = e("../lib/buffer_utils.js"),
            l = e("./produce.js");
        class c extends l.ProduceJWT {
            setProtectedHeader(e) {
                return this._protectedHeader = e, this
            }
            async sign(e, t) {
                let r = new(0, a.CompactSign)(o.encoder.encode(JSON.stringify(this._payload)));
                if (r.setProtectedHeader(this._protectedHeader), Array.isArray(this._protectedHeader?.crit) && this._protectedHeader.crit.includes("b64") && !1 === this._protectedHeader.b64) throw new(0, i.JWTInvalid)("JWTs MUST NOT use unencoded payload");
                return r.sign(e, t)
            }
        }
    }, {
        "../jws/compact/sign.js": "fw8ji",
        "../util/errors.js": "2MROB",
        "../lib/buffer_utils.js": "3OSXK",
        "./produce.js": "6ZTKR",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "6ZTKR": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "ProduceJWT", () => f);
        var a = e("../lib/epoch.js"),
            i = s.interopDefault(a),
            o = e("../lib/is_object.js"),
            l = s.interopDefault(o),
            c = e("../lib/secs.js"),
            d = s.interopDefault(c);

        function u(e, t) {
            if (!Number.isFinite(t)) throw TypeError(`Invalid ${e} input`);
            return t
        }
        class f {
            constructor(e = {}) {
                if (!(0, l.default)(e)) throw TypeError("JWT Claims Set MUST be an object");
                this._payload = e
            }
            setIssuer(e) {
                return this._payload = {
                    ...this._payload,
                    iss: e
                }, this
            }
            setSubject(e) {
                return this._payload = {
                    ...this._payload,
                    sub: e
                }, this
            }
            setAudience(e) {
                return this._payload = {
                    ...this._payload,
                    aud: e
                }, this
            }
            setJti(e) {
                return this._payload = {
                    ...this._payload,
                    jti: e
                }, this
            }
            setNotBefore(e) {
                return "number" == typeof e ? this._payload = {
                    ...this._payload,
                    nbf: u("setNotBefore", e)
                } : e instanceof Date ? this._payload = {
                    ...this._payload,
                    nbf: u("setNotBefore", (0, i.default)(e))
                } : this._payload = {
                    ...this._payload,
                    nbf: (0, i.default)(new Date) + (0, d.default)(e)
                }, this
            }
            setExpirationTime(e) {
                return "number" == typeof e ? this._payload = {
                    ...this._payload,
                    exp: u("setExpirationTime", e)
                } : e instanceof Date ? this._payload = {
                    ...this._payload,
                    exp: u("setExpirationTime", (0, i.default)(e))
                } : this._payload = {
                    ...this._payload,
                    exp: (0, i.default)(new Date) + (0, d.default)(e)
                }, this
            }
            setIssuedAt(e) {
                return void 0 === e ? this._payload = {
                    ...this._payload,
                    iat: (0, i.default)(new Date)
                } : e instanceof Date ? this._payload = {
                    ...this._payload,
                    iat: u("setIssuedAt", (0, i.default)(e))
                } : "string" == typeof e ? this._payload = {
                    ...this._payload,
                    iat: u("setIssuedAt", (0, i.default)(new Date) + (0, d.default)(e))
                } : this._payload = {
                    ...this._payload,
                    iat: u("setIssuedAt", e)
                }, this
            }
        }
    }, {
        "../lib/epoch.js": "cq2Hv",
        "../lib/is_object.js": "kQMV3",
        "../lib/secs.js": "kWq7m",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "4bdxA": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "EncryptJWT", () => l);
        var a = e("../jwe/compact/encrypt.js"),
            i = e("../lib/buffer_utils.js"),
            o = e("./produce.js");
        class l extends o.ProduceJWT {
            setProtectedHeader(e) {
                if (this._protectedHeader) throw TypeError("setProtectedHeader can only be called once");
                return this._protectedHeader = e, this
            }
            setKeyManagementParameters(e) {
                if (this._keyManagementParameters) throw TypeError("setKeyManagementParameters can only be called once");
                return this._keyManagementParameters = e, this
            }
            setContentEncryptionKey(e) {
                if (this._cek) throw TypeError("setContentEncryptionKey can only be called once");
                return this._cek = e, this
            }
            setInitializationVector(e) {
                if (this._iv) throw TypeError("setInitializationVector can only be called once");
                return this._iv = e, this
            }
            replicateIssuerAsHeader() {
                return this._replicateIssuerAsHeader = !0, this
            }
            replicateSubjectAsHeader() {
                return this._replicateSubjectAsHeader = !0, this
            }
            replicateAudienceAsHeader() {
                return this._replicateAudienceAsHeader = !0, this
            }
            async encrypt(e, t) {
                let r = new(0, a.CompactEncrypt)(i.encoder.encode(JSON.stringify(this._payload)));
                return this._replicateIssuerAsHeader && (this._protectedHeader = {
                    ...this._protectedHeader,
                    iss: this._payload.iss
                }), this._replicateSubjectAsHeader && (this._protectedHeader = {
                    ...this._protectedHeader,
                    sub: this._payload.sub
                }), this._replicateAudienceAsHeader && (this._protectedHeader = {
                    ...this._protectedHeader,
                    aud: this._payload.aud
                }), r.setProtectedHeader(this._protectedHeader), this._iv && r.setInitializationVector(this._iv), this._cek && r.setContentEncryptionKey(this._cek), this._keyManagementParameters && r.setKeyManagementParameters(this._keyManagementParameters), r.encrypt(e, t)
            }
        }
    }, {
        "../jwe/compact/encrypt.js": "3oyTC",
        "../lib/buffer_utils.js": "3OSXK",
        "./produce.js": "6ZTKR",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    hlmFr: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "calculateJwkThumbprint", () => h), s.export(r, "calculateJwkThumbprintUri", () => p);
        var a = e("../runtime/digest.js"),
            i = s.interopDefault(a),
            o = e("../runtime/base64url.js"),
            l = e("../util/errors.js"),
            c = e("../lib/buffer_utils.js"),
            d = e("../lib/is_object.js"),
            u = s.interopDefault(d);
        let f = (e, t) => {
            if ("string" != typeof e || !e) throw new(0, l.JWKInvalid)(`${t} missing or invalid`)
        };
        async function h(e, t) {
            let r;
            if (!(0, u.default)(e)) throw TypeError("JWK must be an object");
            if (t ?? (t = "sha256"), "sha256" !== t && "sha384" !== t && "sha512" !== t) throw TypeError('digestAlgorithm must one of "sha256", "sha384", or "sha512"');
            switch (e.kty) {
                case "EC":
                    f(e.crv, '"crv" (Curve) Parameter'), f(e.x, '"x" (X Coordinate) Parameter'), f(e.y, '"y" (Y Coordinate) Parameter'), r = {
                        crv: e.crv,
                        kty: e.kty,
                        x: e.x,
                        y: e.y
                    };
                    break;
                case "OKP":
                    f(e.crv, '"crv" (Subtype of Key Pair) Parameter'), f(e.x, '"x" (Public Key) Parameter'), r = {
                        crv: e.crv,
                        kty: e.kty,
                        x: e.x
                    };
                    break;
                case "RSA":
                    f(e.e, '"e" (Exponent) Parameter'), f(e.n, '"n" (Modulus) Parameter'), r = {
                        e: e.e,
                        kty: e.kty,
                        n: e.n
                    };
                    break;
                case "oct":
                    f(e.k, '"k" (Key Value) Parameter'), r = {
                        k: e.k,
                        kty: e.kty
                    };
                    break;
                default:
                    throw new(0, l.JOSENotSupported)('"kty" (Key Type) Parameter missing or unsupported')
            }
            let n = c.encoder.encode(JSON.stringify(r));
            return (0, o.encode)(await (0, i.default)(t, n))
        }
        async function p(e, t) {
            t ?? (t = "sha256");
            let r = await h(e, t);
            return `urn:ietf:params:oauth:jwk-thumbprint:sha-${t.slice(-3)}:${r}`
        }
    }, {
        "../runtime/digest.js": "fpkwe",
        "../runtime/base64url.js": "By2uJ",
        "../util/errors.js": "2MROB",
        "../lib/buffer_utils.js": "3OSXK",
        "../lib/is_object.js": "kQMV3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    bAeYV: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "EmbeddedJWK", () => c);
        var a = e("../key/import.js"),
            i = e("../lib/is_object.js"),
            o = s.interopDefault(i),
            l = e("../util/errors.js");
        async function c(e, t) {
            let r = {
                ...e,
                ...t?.header
            };
            if (!(0, o.default)(r.jwk)) throw new(0, l.JWSInvalid)('"jwk" (JSON Web Key) Header Parameter must be a JSON object');
            let n = await (0, a.importJWK)({
                ...r.jwk,
                ext: !0
            }, r.alg);
            if (n instanceof Uint8Array || "public" !== n.type) throw new(0, l.JWSInvalid)('"jwk" (JSON Web Key) Header Parameter must be a public key');
            return n
        }
    }, {
        "../key/import.js": "azICy",
        "../lib/is_object.js": "kQMV3",
        "../util/errors.js": "2MROB",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    ljm8x: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "createLocalJWKSet", () => h);
        var a = e("../key/import.js"),
            i = e("../util/errors.js"),
            o = e("../lib/is_object.js"),
            l = s.interopDefault(o);

        function c(e) {
            return (0, l.default)(e)
        }

        function d(e) {
            return "function" == typeof structuredClone ? structuredClone(e) : JSON.parse(JSON.stringify(e))
        }
        class u {
            constructor(e) {
                if (this._cached = new WeakMap, !(e && "object" == typeof e && Array.isArray(e.keys) && e.keys.every(c))) throw new(0, i.JWKSInvalid)("JSON Web Key Set malformed");
                this._jwks = d(e)
            }
            async getKey(e, t) {
                let {
                    alg: r,
                    kid: n
                } = {
                    ...e,
                    ...t?.header
                }, s = function(e) {
                    switch ("string" == typeof e && e.slice(0, 2)) {
                        case "RS":
                        case "PS":
                            return "RSA";
                        case "ES":
                            return "EC";
                        case "Ed":
                            return "OKP";
                        default:
                            throw new(0, i.JOSENotSupported)('Unsupported "alg" value for a JSON Web Key Set')
                    }
                }(r), a = this._jwks.keys.filter(e => {
                    let t = s === e.kty;
                    if (t && "string" == typeof n && (t = n === e.kid), t && "string" == typeof e.alg && (t = r === e.alg), t && "string" == typeof e.use && (t = "sig" === e.use), t && Array.isArray(e.key_ops) && (t = e.key_ops.includes("verify")), t) switch (r) {
                        case "ES256":
                            t = "P-256" === e.crv;
                            break;
                        case "ES256K":
                            t = "secp256k1" === e.crv;
                            break;
                        case "ES384":
                            t = "P-384" === e.crv;
                            break;
                        case "ES512":
                            t = "P-521" === e.crv;
                            break;
                        case "Ed25519":
                            t = "Ed25519" === e.crv;
                            break;
                        case "EdDSA":
                            t = "Ed25519" === e.crv || "Ed448" === e.crv
                    }
                    return t
                }), {
                    0: o,
                    length: l
                } = a;
                if (0 === l) throw new(0, i.JWKSNoMatchingKey);
                if (1 !== l) {
                    let e = new(0, i.JWKSMultipleMatchingKeys),
                        {
                            _cached: t
                        } = this;
                    throw e[Symbol.asyncIterator] = async function*() {
                        for (let e of a) try {
                            yield await f(t, e, r)
                        } catch {}
                    }, e
                }
                return f(this._cached, o, r)
            }
        }
        async function f(e, t, r) {
            let n = e.get(t) || e.set(t, {}).get(t);
            if (void 0 === n[r]) {
                let e = await (0, a.importJWK)({
                    ...t,
                    ext: !0
                }, r);
                if (e instanceof Uint8Array || "public" !== e.type) throw new(0, i.JWKSInvalid)("JSON Web Key Set members must be public keys");
                n[r] = e
            }
            return n[r]
        }

        function h(e) {
            let t = new u(e),
                r = async (e, r) => t.getKey(e, r);
            return Object.defineProperties(r, {
                jwks: {
                    value: () => d(t._jwks),
                    enumerable: !0,
                    configurable: !1,
                    writable: !1
                }
            }), r
        }
    }, {
        "../key/import.js": "azICy",
        "../util/errors.js": "2MROB",
        "../lib/is_object.js": "kQMV3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    fONdD: [function(e, t, r, n) {
        let s;
        var a = e("@parcel/transformer-js/src/esmodule-helpers.js");
        a.defineInteropFlag(r), a.export(r, "jwksCache", () => f), a.export(r, "createRemoteJWKSet", () => p), a.export(r, "experimental_jwksCache", () => g);
        var i = e("../runtime/fetch_jwks.js"),
            o = a.interopDefault(i),
            l = e("../util/errors.js"),
            c = e("./local.js"),
            d = e("../lib/is_object.js"),
            u = a.interopDefault(d);
        "undefined" != typeof navigator && navigator.userAgent?.startsWith?.("Mozilla/5.0 ") || (s = "jose/v5.10.0");
        let f = Symbol();
        class h {
            constructor(e, t) {
                if (!(e instanceof URL)) throw TypeError("url must be an instance of URL");
                if (this._url = new URL(e.href), this._options = {
                        agent: t?.agent,
                        headers: t?.headers
                    }, this._timeoutDuration = "number" == typeof t?.timeoutDuration ? t?.timeoutDuration : 5e3, this._cooldownDuration = "number" == typeof t?.cooldownDuration ? t?.cooldownDuration : 3e4, this._cacheMaxAge = "number" == typeof t?.cacheMaxAge ? t?.cacheMaxAge : 6e5, t?.[f] !== void 0) {
                    var r, n;
                    this._cache = t?.[f], r = t?.[f], n = this._cacheMaxAge, !("object" != typeof r || null === r || !("uat" in r) || "number" != typeof r.uat || Date.now() - r.uat >= n) && "jwks" in r && (0, u.default)(r.jwks) && Array.isArray(r.jwks.keys) && Array.prototype.every.call(r.jwks.keys, u.default) && 1 && (this._jwksTimestamp = this._cache.uat, this._local = (0, c.createLocalJWKSet)(this._cache.jwks))
                }
            }
            coolingDown() {
                return "number" == typeof this._jwksTimestamp && Date.now() < this._jwksTimestamp + this._cooldownDuration
            }
            fresh() {
                return "number" == typeof this._jwksTimestamp && Date.now() < this._jwksTimestamp + this._cacheMaxAge
            }
            async getKey(e, t) {
                this._local && this.fresh() || await this.reload();
                try {
                    return await this._local(e, t)
                } catch (r) {
                    if (r instanceof l.JWKSNoMatchingKey && !1 === this.coolingDown()) return await this.reload(), this._local(e, t);
                    throw r
                }
            }
            async reload() {
                this._pendingFetch && ("undefined" != typeof WebSocketPair || "undefined" != typeof navigator && "Cloudflare-Workers" === navigator.userAgent || "undefined" != typeof EdgeRuntime && "vercel" === EdgeRuntime) && (this._pendingFetch = void 0);
                let e = new Headers(this._options.headers);
                s && !e.has("User-Agent") && (e.set("User-Agent", s), this._options.headers = Object.fromEntries(e.entries())), this._pendingFetch || (this._pendingFetch = (0, o.default)(this._url, this._timeoutDuration, this._options).then(e => {
                    this._local = (0, c.createLocalJWKSet)(e), this._cache && (this._cache.uat = Date.now(), this._cache.jwks = e), this._jwksTimestamp = Date.now(), this._pendingFetch = void 0
                }).catch(e => {
                    throw this._pendingFetch = void 0, e
                })), await this._pendingFetch
            }
        }

        function p(e, t) {
            let r = new h(e, t),
                n = async (e, t) => r.getKey(e, t);
            return Object.defineProperties(n, {
                coolingDown: {
                    get: () => r.coolingDown(),
                    enumerable: !0,
                    configurable: !1
                },
                fresh: {
                    get: () => r.fresh(),
                    enumerable: !0,
                    configurable: !1
                },
                reload: {
                    value: () => r.reload(),
                    enumerable: !0,
                    configurable: !1,
                    writable: !1
                },
                reloading: {
                    get: () => !!r._pendingFetch,
                    enumerable: !0,
                    configurable: !1
                },
                jwks: {
                    value: () => r._local?.jwks(),
                    enumerable: !0,
                    configurable: !1,
                    writable: !1
                }
            }), n
        }
        let g = f
    }, {
        "../runtime/fetch_jwks.js": "9YSbc",
        "../util/errors.js": "2MROB",
        "./local.js": "ljm8x",
        "../lib/is_object.js": "kQMV3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "9YSbc": [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r);
        var s = e("../util/errors.js");
        r.default = async (e, t, r) => {
            let n, a, i = !1;
            "function" == typeof AbortController && (n = new AbortController, a = setTimeout(() => {
                i = !0, n.abort()
            }, t));
            let o = await fetch(e.href, {
                signal: n ? n.signal : void 0,
                redirect: "manual",
                headers: r.headers
            }).catch(e => {
                if (i) throw new(0, s.JWKSTimeout);
                throw e
            });
            if (void 0 !== a && clearTimeout(a), 200 !== o.status) throw new(0, s.JOSEError)("Expected 200 OK from the JSON Web Key Set HTTP response");
            try {
                return await o.json()
            } catch {
                throw new(0, s.JOSEError)("Failed to parse the JSON Web Key Set HTTP response as JSON")
            }
        }
    }, {
        "../util/errors.js": "2MROB",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    TdmmA: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "UnsecuredJWT", () => u);
        var a = e("../runtime/base64url.js"),
            i = e("../lib/buffer_utils.js"),
            o = e("../util/errors.js"),
            l = e("../lib/jwt_claims_set.js"),
            c = s.interopDefault(l),
            d = e("./produce.js");
        class u extends d.ProduceJWT {
            encode() {
                let e = a.encode(JSON.stringify({
                        alg: "none"
                    })),
                    t = a.encode(JSON.stringify(this._payload));
                return `${e}.${t}.`
            }
            static decode(e, t) {
                let r;
                if ("string" != typeof e) throw new(0, o.JWTInvalid)("Unsecured JWT must be a string");
                let {
                    0: n,
                    1: s,
                    2: l,
                    length: d
                } = e.split(".");
                if (3 !== d || "" !== l) throw new(0, o.JWTInvalid)("Invalid Unsecured JWT");
                try {
                    if (r = JSON.parse(i.decoder.decode(a.decode(n))), "none" !== r.alg) throw Error()
                } catch {
                    throw new(0, o.JWTInvalid)("Invalid Unsecured JWT")
                }
                return {
                    payload: (0, c.default)(r, a.decode(s), t),
                    header: r
                }
            }
        }
    }, {
        "../runtime/base64url.js": "By2uJ",
        "../lib/buffer_utils.js": "3OSXK",
        "../util/errors.js": "2MROB",
        "../lib/jwt_claims_set.js": "1CtcQ",
        "./produce.js": "6ZTKR",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "7jXGQ": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "decodeProtectedHeader", () => c);
        var a = e("./base64url.js"),
            i = e("../lib/buffer_utils.js"),
            o = e("../lib/is_object.js"),
            l = s.interopDefault(o);

        function c(e) {
            let t;
            if ("string" == typeof e) {
                let r = e.split(".");
                (3 === r.length || 5 === r.length) && ([t] = r)
            } else if ("object" == typeof e && e)
                if ("protected" in e) t = e.protected;
                else throw TypeError("Token does not contain a Protected Header");
            try {
                if ("string" != typeof t || !t) throw Error();
                let e = JSON.parse(i.decoder.decode((0, a.decode)(t)));
                if (!(0, l.default)(e)) throw Error();
                return e
            } catch {
                throw TypeError("Invalid Token or Protected Header formatting")
            }
        }
    }, {
        "./base64url.js": "gHZ5h",
        "../lib/buffer_utils.js": "3OSXK",
        "../lib/is_object.js": "kQMV3",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    gHZ5h: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "encode", () => i), s.export(r, "decode", () => o);
        var a = e("../runtime/base64url.js");
        let i = a.encode,
            o = a.decode
    }, {
        "../runtime/base64url.js": "By2uJ",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    eIcG3: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "decodeJwt", () => d);
        var a = e("./base64url.js"),
            i = e("../lib/buffer_utils.js"),
            o = e("../lib/is_object.js"),
            l = s.interopDefault(o),
            c = e("./errors.js");

        function d(e) {
            let t, r;
            if ("string" != typeof e) throw new(0, c.JWTInvalid)("JWTs must use Compact JWS serialization, JWT must be a string");
            let {
                1: n,
                length: s
            } = e.split(".");
            if (5 === s) throw new(0, c.JWTInvalid)("Only JWTs using Compact JWS serialization can be decoded");
            if (3 !== s) throw new(0, c.JWTInvalid)("Invalid JWT");
            if (!n) throw new(0, c.JWTInvalid)("JWTs must contain a payload");
            try {
                t = (0, a.decode)(n)
            } catch {
                throw new(0, c.JWTInvalid)("Failed to base64url decode the payload")
            }
            try {
                r = JSON.parse(i.decoder.decode(t))
            } catch {
                throw new(0, c.JWTInvalid)("Failed to parse the decoded payload as JSON")
            }
            if (!(0, l.default)(r)) throw new(0, c.JWTInvalid)("Invalid JWT Claims Set");
            return r
        }
    }, {
        "./base64url.js": "gHZ5h",
        "../lib/buffer_utils.js": "3OSXK",
        "../lib/is_object.js": "kQMV3",
        "./errors.js": "2MROB",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    ktMh4: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "generateKeyPair", () => i);
        var a = e("../runtime/generate.js");
        async function i(e, t) {
            return (0, a.generateKeyPair)(e, t)
        }
    }, {
        "../runtime/generate.js": "9B8av",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "9B8av": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "generateSecret", () => d), s.export(r, "generateKeyPair", () => f);
        var a = e("./webcrypto.js"),
            i = s.interopDefault(a),
            o = e("../util/errors.js"),
            l = e("./random.js"),
            c = s.interopDefault(l);
        async function d(e, t) {
            let r, n, s;
            switch (e) {
                case "HS256":
                case "HS384":
                case "HS512":
                    r = parseInt(e.slice(-3), 10), n = {
                        name: "HMAC",
                        hash: `SHA-${r}`,
                        length: r
                    }, s = ["sign", "verify"];
                    break;
                case "A128CBC-HS256":
                case "A192CBC-HS384":
                case "A256CBC-HS512":
                    return r = parseInt(e.slice(-3), 10), (0, c.default)(new Uint8Array(r >> 3));
                case "A128KW":
                case "A192KW":
                case "A256KW":
                    n = {
                        name: "AES-KW",
                        length: r = parseInt(e.slice(1, 4), 10)
                    }, s = ["wrapKey", "unwrapKey"];
                    break;
                case "A128GCMKW":
                case "A192GCMKW":
                case "A256GCMKW":
                case "A128GCM":
                case "A192GCM":
                case "A256GCM":
                    n = {
                        name: "AES-GCM",
                        length: r = parseInt(e.slice(1, 4), 10)
                    }, s = ["encrypt", "decrypt"];
                    break;
                default:
                    throw new(0, o.JOSENotSupported)('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')
            }
            return i.default.subtle.generateKey(n, t?.extractable ?? !1, s)
        }

        function u(e) {
            let t = e?.modulusLength ?? 2048;
            if ("number" != typeof t || t < 2048) throw new(0, o.JOSENotSupported)("Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used");
            return t
        }
        async function f(e, t) {
            let r, n;
            switch (e) {
                case "PS256":
                case "PS384":
                case "PS512":
                    r = {
                        name: "RSA-PSS",
                        hash: `SHA-${e.slice(-3)}`,
                        publicExponent: new Uint8Array([1, 0, 1]),
                        modulusLength: u(t)
                    }, n = ["sign", "verify"];
                    break;
                case "RS256":
                case "RS384":
                case "RS512":
                    r = {
                        name: "RSASSA-PKCS1-v1_5",
                        hash: `SHA-${e.slice(-3)}`,
                        publicExponent: new Uint8Array([1, 0, 1]),
                        modulusLength: u(t)
                    }, n = ["sign", "verify"];
                    break;
                case "RSA-OAEP":
                case "RSA-OAEP-256":
                case "RSA-OAEP-384":
                case "RSA-OAEP-512":
                    r = {
                        name: "RSA-OAEP",
                        hash: `SHA-${parseInt(e.slice(-3),10)||1}`,
                        publicExponent: new Uint8Array([1, 0, 1]),
                        modulusLength: u(t)
                    }, n = ["decrypt", "unwrapKey", "encrypt", "wrapKey"];
                    break;
                case "ES256":
                    r = {
                        name: "ECDSA",
                        namedCurve: "P-256"
                    }, n = ["sign", "verify"];
                    break;
                case "ES384":
                    r = {
                        name: "ECDSA",
                        namedCurve: "P-384"
                    }, n = ["sign", "verify"];
                    break;
                case "ES512":
                    r = {
                        name: "ECDSA",
                        namedCurve: "P-521"
                    }, n = ["sign", "verify"];
                    break;
                case "Ed25519":
                    r = {
                        name: "Ed25519"
                    }, n = ["sign", "verify"];
                    break;
                case "EdDSA": {
                    n = ["sign", "verify"];
                    let e = t?.crv ?? "Ed25519";
                    switch (e) {
                        case "Ed25519":
                        case "Ed448":
                            r = {
                                name: e
                            };
                            break;
                        default:
                            throw new(0, o.JOSENotSupported)("Invalid or unsupported crv option provided")
                    }
                    break
                }
                case "ECDH-ES":
                case "ECDH-ES+A128KW":
                case "ECDH-ES+A192KW":
                case "ECDH-ES+A256KW": {
                    n = ["deriveKey", "deriveBits"];
                    let e = t?.crv ?? "P-256";
                    switch (e) {
                        case "P-256":
                        case "P-384":
                        case "P-521":
                            r = {
                                name: "ECDH",
                                namedCurve: e
                            };
                            break;
                        case "X25519":
                        case "X448":
                            r = {
                                name: e
                            };
                            break;
                        default:
                            throw new(0, o.JOSENotSupported)("Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448")
                    }
                    break
                }
                default:
                    throw new(0, o.JOSENotSupported)('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')
            }
            return i.default.subtle.generateKey(r, t?.extractable ?? !1, n)
        }
    }, {
        "./webcrypto.js": "8W0ZQ",
        "../util/errors.js": "2MROB",
        "./random.js": "eG44V",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "1pU2l": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "generateSecret", () => i);
        var a = e("../runtime/generate.js");
        async function i(e, t) {
            return (0, a.generateSecret)(e, t)
        }
    }, {
        "../runtime/generate.js": "9B8av",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    bIO4P: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("../runtime/runtime.js");
        r.default = s.interopDefault(a).default
    }, {
        "../runtime/runtime.js": "19xGX",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "19xGX": [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r), r.default = "WebCryptoAPI"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "31lx6": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "OpenfortError", () => a.OpenfortError), s.export(r, "OpenfortErrorType", () => a.OpenfortErrorType), s.export(r, "AccountTypeEnum", () => i.AccountTypeEnum), s.export(r, "AuthActionRequiredActions", () => i.AuthActionRequiredActions), s.export(r, "AuthType", () => i.AuthType), s.export(r, "BasicAuthProvider", () => i.BasicAuthProvider), s.export(r, "ChainTypeEnum", () => i.ChainTypeEnum), s.export(r, "EmbeddedState", () => i.EmbeddedState), s.export(r, "OAuthProvider", () => i.OAuthProvider), s.export(r, "RecoveryMethod", () => i.RecoveryMethod), s.export(r, "ThirdPartyOAuthProvider", () => i.ThirdPartyOAuthProvider), s.export(r, "TokenType", () => i.TokenType), s.export(r, "ShieldAuthType", () => o.ShieldAuthType), s.export(r, "MissingProjectEntropyError", () => l.MissingProjectEntropyError), s.export(r, "MissingRecoveryPasswordError", () => l.MissingRecoveryPasswordError), s.export(r, "NotConfiguredError", () => l.NotConfiguredError), s.export(r, "WrongRecoveryPasswordError", () => l.WrongRecoveryPasswordError), s.export(r, "OpenfortConfiguration", () => c.OpenfortConfiguration), s.export(r, "SDKConfiguration", () => c.SDKConfiguration), s.export(r, "ShieldConfiguration", () => c.ShieldConfiguration), s.export(r, "Openfort", () => d.Openfort), s.export(r, "AuthApi", () => u.AuthApi), s.export(r, "EmbeddedWalletApi", () => f.EmbeddedWalletApi), s.export(r, "UserApi", () => h.UserApi), s.export(r, "OpenfortInternal", () => p.OpenfortInternal), s.export(r, "ProxyApi", () => g.ProxyApi);
        var a = e("./core/errors/openfortError.js"),
            i = e("./types/types.js"),
            o = e("./wallets/types.js"),
            l = e("./wallets/iframeManager.js"),
            c = e("./core/config/config.js"),
            d = e("./core/openfort.js"),
            u = e("./api/auth.js"),
            f = e("./api/embeddedWallet.js"),
            h = e("./api/user.js"),
            p = e("./core/openfortInternal.js"),
            g = e("./api/proxy.js")
    }, {
        "./core/errors/openfortError.js": "3xESR",
        "./types/types.js": "fUPIN",
        "./wallets/types.js": !1,
        "./wallets/iframeManager.js": !1,
        "./core/config/config.js": !1,
        "./core/openfort.js": "26nPt",
        "./api/auth.js": !1,
        "./api/embeddedWallet.js": !1,
        "./api/user.js": !1,
        "./core/openfortInternal.js": !1,
        "./api/proxy.js": !1,
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "3xESR": [function(e, t, r, n) {
        var s, a, i = e("@parcel/transformer-js/src/esmodule-helpers.js");
        i.defineInteropFlag(r), i.export(r, "OpenfortError", () => l), i.export(r, "OpenfortErrorType", () => a), i.export(r, "withOpenfortError", () => c);
        var o = e("axios");
        (s = a || (a = {})).AUTHENTICATION_ERROR = "AUTHENTICATION_ERROR", s.INVALID_CONFIGURATION = "INVALID_CONFIGURATION", s.NOT_LOGGED_IN_ERROR = "NOT_LOGGED_IN_ERROR", s.ALREADY_LOGGED_IN_ERROR = "ALREADY_LOGGED_IN_ERROR", s.REFRESH_TOKEN_ERROR = "REFRESH_TOKEN_ERROR", s.USER_REGISTRATION_ERROR = "USER_REGISTRATION_ERROR", s.LOGOUT_ERROR = "LOGOUT_ERROR", s.OPERATION_NOT_SUPPORTED_ERROR = "OPERATION_NOT_SUPPORTED_ERROR", s.MISSING_SIGNER_ERROR = "MISSING_SIGNER_ERROR", s.USER_NOT_AUTHORIZED_ON_ECOSYSTEM = "USER_NOT_AUTHORIZED_ON_ECOSYSTEM", s.INTERNAL_ERROR = "INTERNAL_ERROR";
        class l extends Error {
            type;
            data;
            constructor(e, t, r = {}) {
                super(e), this.type = t, this.data = r
            }
        }
        let c = async (e, t, r) => {
            try {
                return await e()
            } catch (i) {
                var n;
                let e, s;
                (0, o.isAxiosError)(i) ? (s = i.response?.status, e = i.response?.data && i.response.data.error && "type" in (n = i.response.data.error) && "message" in n ? i.response.data.error.message : i.message) : e = i.message;
                let a = new l(e, void 0 !== s && t[s] ? t[s] : t.default, {});
                throw void 0 !== s && t[s] || r?.(i, a), a
            }
        }
    }, {
        axios: "jhAcT",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    jhAcT: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => i.default), s.export(r, "Axios", () => o), s.export(r, "AxiosError", () => l), s.export(r, "CanceledError", () => c), s.export(r, "isCancel", () => d), s.export(r, "CancelToken", () => u), s.export(r, "VERSION", () => f), s.export(r, "all", () => h), s.export(r, "Cancel", () => p), s.export(r, "isAxiosError", () => g), s.export(r, "spread", () => m), s.export(r, "toFormData", () => y), s.export(r, "AxiosHeaders", () => b), s.export(r, "HttpStatusCode", () => x), s.export(r, "formToJSON", () => v), s.export(r, "getAdapter", () => w), s.export(r, "mergeConfig", () => E);
        var a = e("./lib/axios.js"),
            i = s.interopDefault(a);
        let {
            Axios: o,
            AxiosError: l,
            CanceledError: c,
            isCancel: d,
            CancelToken: u,
            VERSION: f,
            all: h,
            Cancel: p,
            isAxiosError: g,
            spread: m,
            toFormData: y,
            AxiosHeaders: b,
            HttpStatusCode: x,
            formToJSON: v,
            getAdapter: w,
            mergeConfig: E
        } = i.default
    }, {
        "./lib/axios.js": "8DJLn",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "8DJLn": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        "use strict";
        var a = e("./utils.js"),
            i = s.interopDefault(a),
            o = e("./helpers/bind.js"),
            l = s.interopDefault(o),
            c = e("./core/Axios.js"),
            d = s.interopDefault(c),
            u = e("./core/mergeConfig.js"),
            f = s.interopDefault(u),
            h = e("./defaults/index.js"),
            p = s.interopDefault(h),
            g = e("./helpers/formDataToJSON.js"),
            m = s.interopDefault(g),
            y = e("./cancel/CanceledError.js"),
            b = s.interopDefault(y),
            x = e("./cancel/CancelToken.js"),
            v = s.interopDefault(x),
            w = e("./cancel/isCancel.js"),
            E = s.interopDefault(w),
            A = e("./env/data.js"),
            j = e("./helpers/toFormData.js"),
            I = s.interopDefault(j),
            S = e("./core/AxiosError.js"),
            R = s.interopDefault(S),
            k = e("./helpers/spread.js"),
            _ = s.interopDefault(k),
            T = e("./helpers/isAxiosError.js"),
            C = s.interopDefault(T),
            P = e("./core/AxiosHeaders.js"),
            O = s.interopDefault(P),
            N = e("./adapters/adapters.js"),
            M = s.interopDefault(N),
            D = e("./helpers/HttpStatusCode.js"),
            B = s.interopDefault(D);
        let U = function e(t) {
            let r = new(0, d.default)(t),
                n = (0, l.default)(d.default.prototype.request, r);
            return i.default.extend(n, d.default.prototype, r, {
                allOwnKeys: !0
            }), i.default.extend(n, r, null, {
                allOwnKeys: !0
            }), n.create = function(r) {
                return e((0, f.default)(t, r))
            }, n
        }(p.default);
        U.Axios = d.default, U.CanceledError = b.default, U.CancelToken = v.default, U.isCancel = E.default, U.VERSION = A.VERSION, U.toFormData = I.default, U.AxiosError = R.default, U.Cancel = U.CanceledError, U.all = function(e) {
            return Promise.all(e)
        }, U.spread = _.default, U.isAxiosError = C.default, U.mergeConfig = f.default, U.AxiosHeaders = O.default, U.formToJSON = e => (0, m.default)(i.default.isHTMLForm(e) ? new FormData(e) : e), U.getAdapter = M.default.getAdapter, U.HttpStatusCode = B.default, U.default = U, r.default = U
    }, {
        "./utils.js": "2ioTY",
        "./helpers/bind.js": "9mfTC",
        "./core/Axios.js": "2wp4K",
        "./core/mergeConfig.js": "j8Sbj",
        "./defaults/index.js": "1GU0t",
        "./helpers/formDataToJSON.js": "jhUur",
        "./cancel/CanceledError.js": "judoa",
        "./cancel/CancelToken.js": "2aN3e",
        "./cancel/isCancel.js": "5ndsF",
        "./env/data.js": "9ssnR",
        "./helpers/toFormData.js": "k8OtD",
        "./core/AxiosError.js": "hjCVQ",
        "./helpers/spread.js": "gQxw3",
        "./helpers/isAxiosError.js": "lE0ea",
        "./core/AxiosHeaders.js": "1qkRX",
        "./adapters/adapters.js": "6E0f0",
        "./helpers/HttpStatusCode.js": "agO1h",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "2ioTY": [function(e, t, r, n) {
        let s, a;
        var i, o, l, c, d = e("@parcel/transformer-js/src/esmodule-helpers.js");
        d.defineInteropFlag(r);
        "use strict";
        var u = e("./helpers/bind.js"),
            f = d.interopDefault(u),
            h = arguments[3];
        let {
            toString: p
        } = Object.prototype, {
            getPrototypeOf: g
        } = Object, {
            iterator: m,
            toStringTag: y
        } = Symbol, b = (s = Object.create(null), e => {
            let t = p.call(e);
            return s[t] || (s[t] = t.slice(8, -1).toLowerCase())
        }), x = e => (e = e.toLowerCase(), t => b(t) === e), v = e => t => typeof t === e, {
            isArray: w
        } = Array, E = v("undefined"), A = x("ArrayBuffer"), j = v("string"), I = v("function"), S = v("number"), R = e => null !== e && "object" == typeof e, k = e => {
            if ("object" !== b(e)) return !1;
            let t = g(e);
            return (null === t || t === Object.prototype || null === Object.getPrototypeOf(t)) && !(y in e) && !(m in e)
        }, _ = x("Date"), T = x("File"), C = x("Blob"), P = x("FileList"), O = x("URLSearchParams"), [N, M, D, B] = ["ReadableStream", "Request", "Response", "Headers"].map(x);

        function U(e, t, {
            allOwnKeys: r = !1
        } = {}) {
            let n, s;
            if (null != e)
                if ("object" != typeof e && (e = [e]), w(e))
                    for (n = 0, s = e.length; n < s; n++) t.call(null, e[n], n, e);
                else {
                    let s, a = r ? Object.getOwnPropertyNames(e) : Object.keys(e),
                        i = a.length;
                    for (n = 0; n < i; n++) s = a[n], t.call(null, e[s], s, e)
                }
        }

        function L(e, t) {
            let r;
            t = t.toLowerCase();
            let n = Object.keys(e),
                s = n.length;
            for (; s-- > 0;)
                if (t === (r = n[s]).toLowerCase()) return r;
            return null
        }
        let F = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : "undefined" != typeof window ? window : h,
            J = e => !E(e) && e !== F,
            H = (a = "undefined" != typeof Uint8Array && g(Uint8Array), e => a && e instanceof a),
            W = x("HTMLFormElement"),
            K = (({
                hasOwnProperty: e
            }) => (t, r) => e.call(t, r))(Object.prototype),
            G = x("RegExp"),
            z = (e, t) => {
                let r = Object.getOwnPropertyDescriptors(e),
                    n = {};
                U(r, (r, s) => {
                    let a;
                    !1 !== (a = t(r, s, e)) && (n[s] = a || r)
                }), Object.defineProperties(e, n)
            },
            q = x("AsyncFunction"),
            V = (i = "function" == typeof setImmediate, o = I(F.postMessage), i ? setImmediate : o ? (l = `axios@${Math.random()}`, c = [], F.addEventListener("message", ({
                source: e,
                data: t
            }) => {
                e === F && t === l && c.length && c.shift()()
            }, !1), e => {
                c.push(e), F.postMessage(l, "*")
            }) : e => setTimeout(e)),
            Q = "undefined" != typeof queueMicrotask ? queueMicrotask.bind(F) : V;
        r.default = {
            isArray: w,
            isArrayBuffer: A,
            isBuffer: function(e) {
                return null !== e && !E(e) && null !== e.constructor && !E(e.constructor) && I(e.constructor.isBuffer) && e.constructor.isBuffer(e)
            },
            isFormData: e => {
                let t;
                return e && ("function" == typeof FormData && e instanceof FormData || I(e.append) && ("formdata" === (t = b(e)) || "object" === t && I(e.toString) && "[object FormData]" === e.toString()))
            },
            isArrayBufferView: function(e) {
                return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(e) : e && e.buffer && A(e.buffer)
            },
            isString: j,
            isNumber: S,
            isBoolean: e => !0 === e || !1 === e,
            isObject: R,
            isPlainObject: k,
            isReadableStream: N,
            isRequest: M,
            isResponse: D,
            isHeaders: B,
            isUndefined: E,
            isDate: _,
            isFile: T,
            isBlob: C,
            isRegExp: G,
            isFunction: I,
            isStream: e => R(e) && I(e.pipe),
            isURLSearchParams: O,
            isTypedArray: H,
            isFileList: P,
            forEach: U,
            merge: function e() {
                let {
                    caseless: t
                } = J(this) && this || {}, r = {}, n = (n, s) => {
                    let a = t && L(r, s) || s;
                    k(r[a]) && k(n) ? r[a] = e(r[a], n) : k(n) ? r[a] = e({}, n) : w(n) ? r[a] = n.slice() : r[a] = n
                };
                for (let e = 0, t = arguments.length; e < t; e++) arguments[e] && U(arguments[e], n);
                return r
            },
            extend: (e, t, r, {
                allOwnKeys: n
            } = {}) => (U(t, (t, n) => {
                r && I(t) ? e[n] = (0, f.default)(t, r) : e[n] = t
            }, {
                allOwnKeys: n
            }), e),
            trim: e => e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ""),
            stripBOM: e => (65279 === e.charCodeAt(0) && (e = e.slice(1)), e),
            inherits: (e, t, r, n) => {
                e.prototype = Object.create(t.prototype, n), e.prototype.constructor = e, Object.defineProperty(e, "super", {
                    value: t.prototype
                }), r && Object.assign(e.prototype, r)
            },
            toFlatObject: (e, t, r, n) => {
                let s, a, i, o = {};
                if (t = t || {}, null == e) return t;
                do {
                    for (a = (s = Object.getOwnPropertyNames(e)).length; a-- > 0;) i = s[a], (!n || n(i, e, t)) && !o[i] && (t[i] = e[i], o[i] = !0);
                    e = !1 !== r && g(e)
                } while (e && (!r || r(e, t)) && e !== Object.prototype) return t
            },
            kindOf: b,
            kindOfTest: x,
            endsWith: (e, t, r) => {
                e = String(e), (void 0 === r || r > e.length) && (r = e.length), r -= t.length;
                let n = e.indexOf(t, r);
                return -1 !== n && n === r
            },
            toArray: e => {
                if (!e) return null;
                if (w(e)) return e;
                let t = e.length;
                if (!S(t)) return null;
                let r = Array(t);
                for (; t-- > 0;) r[t] = e[t];
                return r
            },
            forEachEntry: (e, t) => {
                let r, n = (e && e[m]).call(e);
                for (;
                    (r = n.next()) && !r.done;) {
                    let n = r.value;
                    t.call(e, n[0], n[1])
                }
            },
            matchAll: (e, t) => {
                let r, n = [];
                for (; null !== (r = e.exec(t));) n.push(r);
                return n
            },
            isHTMLForm: W,
            hasOwnProperty: K,
            hasOwnProp: K,
            reduceDescriptors: z,
            freezeMethods: e => {
                z(e, (t, r) => {
                    if (I(e) && -1 !== ["arguments", "caller", "callee"].indexOf(r)) return !1;
                    if (I(e[r])) {
                        if (t.enumerable = !1, "writable" in t) {
                            t.writable = !1;
                            return
                        }
                        t.set || (t.set = () => {
                            throw Error("Can not rewrite read-only method '" + r + "'")
                        })
                    }
                })
            },
            toObjectSet: (e, t) => {
                let r = {};
                return (w(e) ? e : String(e).split(t)).forEach(e => {
                    r[e] = !0
                }), r
            },
            toCamelCase: e => e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function(e, t, r) {
                return t.toUpperCase() + r
            }),
            noop: () => {},
            toFiniteNumber: (e, t) => null != e && Number.isFinite(e *= 1) ? e : t,
            findKey: L,
            global: F,
            isContextDefined: J,
            isSpecCompliantForm: function(e) {
                return !!(e && I(e.append) && "FormData" === e[y] && e[m])
            },
            toJSONObject: e => {
                let t = Array(10),
                    r = (e, n) => {
                        if (R(e)) {
                            if (t.indexOf(e) >= 0) return;
                            if (!("toJSON" in e)) {
                                t[n] = e;
                                let s = w(e) ? [] : {};
                                return U(e, (e, t) => {
                                    let a = r(e, n + 1);
                                    E(a) || (s[t] = a)
                                }), t[n] = void 0, s
                            }
                        }
                        return e
                    };
                return r(e, 0)
            },
            isAsyncFn: q,
            isThenable: e => e && (R(e) || I(e)) && I(e.then) && I(e.catch),
            setImmediate: V,
            asap: Q,
            isIterable: e => null != e && I(e[m])
        }
    }, {
        "./helpers/bind.js": "9mfTC",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "9mfTC": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        "use strict";

        function a(e, t) {
            return function() {
                return e.apply(t, arguments)
            }
        }
        s.defineInteropFlag(r), s.export(r, "default", () => a)
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "2wp4K": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        "use strict";
        var a = e("./../utils.js"),
            i = s.interopDefault(a),
            o = e("../helpers/buildURL.js"),
            l = s.interopDefault(o),
            c = e("./InterceptorManager.js"),
            d = s.interopDefault(c),
            u = e("./dispatchRequest.js"),
            f = s.interopDefault(u),
            h = e("./mergeConfig.js"),
            p = s.interopDefault(h),
            g = e("./buildFullPath.js"),
            m = s.interopDefault(g),
            y = e("../helpers/validator.js"),
            b = s.interopDefault(y),
            x = e("./AxiosHeaders.js"),
            v = s.interopDefault(x);
        let w = b.default.validators;
        class E {
            constructor(e) {
                this.defaults = e || {}, this.interceptors = {
                    request: new(0, d.default),
                    response: new(0, d.default)
                }
            }
            async request(e, t) {
                try {
                    return await this._request(e, t)
                } catch (e) {
                    if (e instanceof Error) {
                        let t = {};
                        Error.captureStackTrace ? Error.captureStackTrace(t) : t = Error();
                        let r = t.stack ? t.stack.replace(/^.+\n/, "") : "";
                        try {
                            e.stack ? r && !String(e.stack).endsWith(r.replace(/^.+\n.+\n/, "")) && (e.stack += "\n" + r) : e.stack = r
                        } catch (e) {}
                    }
                    throw e
                }
            }
            _request(e, t) {
                let r, n;
                "string" == typeof e ? (t = t || {}).url = e : t = e || {};
                let {
                    transitional: s,
                    paramsSerializer: a,
                    headers: o
                } = t = (0, p.default)(this.defaults, t);
                void 0 !== s && b.default.assertOptions(s, {
                    silentJSONParsing: w.transitional(w.boolean),
                    forcedJSONParsing: w.transitional(w.boolean),
                    clarifyTimeoutError: w.transitional(w.boolean)
                }, !1), null != a && (i.default.isFunction(a) ? t.paramsSerializer = {
                    serialize: a
                } : b.default.assertOptions(a, {
                    encode: w.function,
                    serialize: w.function
                }, !0)), void 0 !== t.allowAbsoluteUrls || (void 0 !== this.defaults.allowAbsoluteUrls ? t.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls : t.allowAbsoluteUrls = !0), b.default.assertOptions(t, {
                    baseUrl: w.spelling("baseURL"),
                    withXsrfToken: w.spelling("withXSRFToken")
                }, !0), t.method = (t.method || this.defaults.method || "get").toLowerCase();
                let l = o && i.default.merge(o.common, o[t.method]);
                o && i.default.forEach(["delete", "get", "head", "post", "put", "patch", "common"], e => {
                    delete o[e]
                }), t.headers = v.default.concat(l, o);
                let c = [],
                    d = !0;
                this.interceptors.request.forEach(function(e) {
                    ("function" != typeof e.runWhen || !1 !== e.runWhen(t)) && (d = d && e.synchronous, c.unshift(e.fulfilled, e.rejected))
                });
                let u = [];
                this.interceptors.response.forEach(function(e) {
                    u.push(e.fulfilled, e.rejected)
                });
                let h = 0;
                if (!d) {
                    let e = [f.default.bind(this), void 0];
                    for (e.unshift.apply(e, c), e.push.apply(e, u), n = e.length, r = Promise.resolve(t); h < n;) r = r.then(e[h++], e[h++]);
                    return r
                }
                n = c.length;
                let g = t;
                for (h = 0; h < n;) {
                    let e = c[h++],
                        t = c[h++];
                    try {
                        g = e(g)
                    } catch (e) {
                        t.call(this, e);
                        break
                    }
                }
                try {
                    r = f.default.call(this, g)
                } catch (e) {
                    return Promise.reject(e)
                }
                for (h = 0, n = u.length; h < n;) r = r.then(u[h++], u[h++]);
                return r
            }
            getUri(e) {
                e = (0, p.default)(this.defaults, e);
                let t = (0, m.default)(e.baseURL, e.url, e.allowAbsoluteUrls);
                return (0, l.default)(t, e.params, e.paramsSerializer)
            }
        }
        i.default.forEach(["delete", "get", "head", "options"], function(e) {
            E.prototype[e] = function(t, r) {
                return this.request((0, p.default)(r || {}, {
                    method: e,
                    url: t,
                    data: (r || {}).data
                }))
            }
        }), i.default.forEach(["post", "put", "patch"], function(e) {
            function t(t) {
                return function(r, n, s) {
                    return this.request((0, p.default)(s || {}, {
                        method: e,
                        headers: t ? {
                            "Content-Type": "multipart/form-data"
                        } : {},
                        url: r,
                        data: n
                    }))
                }
            }
            E.prototype[e] = t(), E.prototype[e + "Form"] = t(!0)
        }), r.default = E
    }, {
        "./../utils.js": "2ioTY",
        "../helpers/buildURL.js": "aGaJq",
        "./InterceptorManager.js": "5Qndl",
        "./dispatchRequest.js": "gTZwy",
        "./mergeConfig.js": "j8Sbj",
        "./buildFullPath.js": "48uot",
        "../helpers/validator.js": "8PNBN",
        "./AxiosHeaders.js": "1qkRX",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    aGaJq: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => d);
        "use strict";
        var a = e("../utils.js"),
            i = s.interopDefault(a),
            o = e("../helpers/AxiosURLSearchParams.js"),
            l = s.interopDefault(o);

        function c(e) {
            return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
        }

        function d(e, t, r) {
            let n;
            if (!t) return e;
            let s = r && r.encode || c;
            i.default.isFunction(r) && (r = {
                serialize: r
            });
            let a = r && r.serialize;
            if (n = a ? a(t, r) : i.default.isURLSearchParams(t) ? t.toString() : new(0, l.default)(t, r).toString(s)) {
                let t = e.indexOf("#"); - 1 !== t && (e = e.slice(0, t)), e += (-1 === e.indexOf("?") ? "?" : "&") + n
            }
            return e
        }
    }, {
        "../utils.js": "2ioTY",
        "../helpers/AxiosURLSearchParams.js": "juzHK",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    juzHK: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        "use strict";
        var a = e("./toFormData.js"),
            i = s.interopDefault(a);

        function o(e) {
            let t = {
                "!": "%21",
                "'": "%27",
                "(": "%28",
                ")": "%29",
                "~": "%7E",
                "%20": "+",
                "%00": "\0"
            };
            return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function(e) {
                return t[e]
            })
        }

        function l(e, t) {
            this._pairs = [], e && (0, i.default)(e, this, t)
        }
        let c = l.prototype;
        c.append = function(e, t) {
            this._pairs.push([e, t])
        }, c.toString = function(e) {
            let t = e ? function(t) {
                return e.call(this, t, o)
            } : o;
            return this._pairs.map(function(e) {
                return t(e[0]) + "=" + t(e[1])
            }, "").join("&")
        }, r.default = l
    }, {
        "./toFormData.js": "k8OtD",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    k8OtD: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        "use strict";
        var a = e("../utils.js"),
            i = s.interopDefault(a),
            o = e("../core/AxiosError.js"),
            l = s.interopDefault(o),
            c = e("../platform/node/classes/FormData.js"),
            d = s.interopDefault(c),
            u = e("adfd9b103875c2dd").Buffer;

        function f(e) {
            return i.default.isPlainObject(e) || i.default.isArray(e)
        }

        function h(e) {
            return i.default.endsWith(e, "[]") ? e.slice(0, -2) : e
        }

        function p(e, t, r) {
            return e ? e.concat(t).map(function(e, t) {
                return e = h(e), !r && t ? "[" + e + "]" : e
            }).join(r ? "." : "") : t
        }
        let g = i.default.toFlatObject(i.default, {}, null, function(e) {
            return /^is[A-Z]/.test(e)
        });
        r.default = function(e, t, r) {
            if (!i.default.isObject(e)) throw TypeError("target must be an object");
            t = t || new(d.default || FormData);
            let n = (r = i.default.toFlatObject(r, {
                    metaTokens: !0,
                    dots: !1,
                    indexes: !1
                }, !1, function(e, t) {
                    return !i.default.isUndefined(t[e])
                })).metaTokens,
                s = r.visitor || y,
                a = r.dots,
                o = r.indexes,
                c = (r.Blob || "undefined" != typeof Blob && Blob) && i.default.isSpecCompliantForm(t);
            if (!i.default.isFunction(s)) throw TypeError("visitor must be a function");

            function m(e) {
                if (null === e) return "";
                if (i.default.isDate(e)) return e.toISOString();
                if (i.default.isBoolean(e)) return e.toString();
                if (!c && i.default.isBlob(e)) throw new(0, l.default)("Blob is not supported. Use a Buffer instead.");
                return i.default.isArrayBuffer(e) || i.default.isTypedArray(e) ? c && "function" == typeof Blob ? new Blob([e]) : u.from(e) : e
            }

            function y(e, r, s) {
                let l = e;
                if (e && !s && "object" == typeof e)
                    if (i.default.endsWith(r, "{}")) r = n ? r : r.slice(0, -2), e = JSON.stringify(e);
                    else {
                        var c;
                        if (i.default.isArray(e) && (c = e, i.default.isArray(c) && !c.some(f)) || (i.default.isFileList(e) || i.default.endsWith(r, "[]")) && (l = i.default.toArray(e))) return r = h(r), l.forEach(function(e, n) {
                            i.default.isUndefined(e) || null === e || t.append(!0 === o ? p([r], n, a) : null === o ? r : r + "[]", m(e))
                        }), !1
                    } return !!f(e) || (t.append(p(s, r, a), m(e)), !1)
            }
            let b = [],
                x = Object.assign(g, {
                    defaultVisitor: y,
                    convertValue: m,
                    isVisitable: f
                });
            if (!i.default.isObject(e)) throw TypeError("data must be an object");
            return ! function e(r, n) {
                if (!i.default.isUndefined(r)) {
                    if (-1 !== b.indexOf(r)) throw Error("Circular reference detected in " + n.join("."));
                    b.push(r), i.default.forEach(r, function(r, a) {
                        !0 === (!(i.default.isUndefined(r) || null === r) && s.call(t, r, i.default.isString(a) ? a.trim() : a, n, x)) && e(r, n ? n.concat(a) : [a])
                    }), b.pop()
                }
            }(e), t
        }
    }, {
        adfd9b103875c2dd: "2MMCE",
        "../utils.js": "2ioTY",
        "../core/AxiosError.js": "hjCVQ",
        "../platform/node/classes/FormData.js": "fN4B6",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "2MMCE": [function(e, t, r, n) {
        "use strict";
        let s = e("9c62938f1dccc73c"),
            a = e("aceacb6a4531a9d2"),
            i = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;

        function o(e) {
            if (e > 0x7fffffff) throw RangeError('The value "' + e + '" is invalid for option "size"');
            let t = new Uint8Array(e);
            return Object.setPrototypeOf(t, l.prototype), t
        }

        function l(e, t, r) {
            if ("number" == typeof e) {
                if ("string" == typeof t) throw TypeError('The "string" argument must be of type string. Received type number');
                return u(e)
            }
            return c(e, t, r)
        }

        function c(e, t, r) {
            if ("string" == typeof e) {
                var n = e,
                    s = t;
                if (("string" != typeof s || "" === s) && (s = "utf8"), !l.isEncoding(s)) throw TypeError("Unknown encoding: " + s);
                let r = 0 | g(n, s),
                    a = o(r),
                    i = a.write(n, s);
                return i !== r && (a = a.slice(0, i)), a
            }
            if (ArrayBuffer.isView(e)) {
                var a = e;
                if (U(a, Uint8Array)) {
                    let e = new Uint8Array(a);
                    return h(e.buffer, e.byteOffset, e.byteLength)
                }
                return f(a)
            }
            if (null == e) throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
            if (U(e, ArrayBuffer) || e && U(e.buffer, ArrayBuffer) || "undefined" != typeof SharedArrayBuffer && (U(e, SharedArrayBuffer) || e && U(e.buffer, SharedArrayBuffer))) return h(e, t, r);
            if ("number" == typeof e) throw TypeError('The "value" argument must not be of type number. Received type number');
            let i = e.valueOf && e.valueOf();
            if (null != i && i !== e) return l.from(i, t, r);
            let c = function(e) {
                if (l.isBuffer(e)) {
                    let t = 0 | p(e.length),
                        r = o(t);
                    return 0 === r.length || e.copy(r, 0, 0, t), r
                }
                return void 0 !== e.length ? "number" != typeof e.length || function(e) {
                    return e != e
                }(e.length) ? o(0) : f(e) : "Buffer" === e.type && Array.isArray(e.data) ? f(e.data) : void 0
            }(e);
            if (c) return c;
            if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e[Symbol.toPrimitive]) return l.from(e[Symbol.toPrimitive]("string"), t, r);
            throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e)
        }

        function d(e) {
            if ("number" != typeof e) throw TypeError('"size" argument must be of type number');
            if (e < 0) throw RangeError('The value "' + e + '" is invalid for option "size"')
        }

        function u(e) {
            return d(e), o(e < 0 ? 0 : 0 | p(e))
        }

        function f(e) {
            let t = e.length < 0 ? 0 : 0 | p(e.length),
                r = o(t);
            for (let n = 0; n < t; n += 1) r[n] = 255 & e[n];
            return r
        }

        function h(e, t, r) {
            let n;
            if (t < 0 || e.byteLength < t) throw RangeError('"offset" is outside of buffer bounds');
            if (e.byteLength < t + (r || 0)) throw RangeError('"length" is outside of buffer bounds');
            return Object.setPrototypeOf(n = void 0 === t && void 0 === r ? new Uint8Array(e) : void 0 === r ? new Uint8Array(e, t) : new Uint8Array(e, t, r), l.prototype), n
        }

        function p(e) {
            if (e >= 0x7fffffff) throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");
            return 0 | e
        }

        function g(e, t) {
            if (l.isBuffer(e)) return e.length;
            if (ArrayBuffer.isView(e) || U(e, ArrayBuffer)) return e.byteLength;
            if ("string" != typeof e) throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e);
            let r = e.length,
                n = arguments.length > 2 && !0 === arguments[2];
            if (!n && 0 === r) return 0;
            let s = !1;
            for (;;) switch (t) {
                case "ascii":
                case "latin1":
                case "binary":
                    return r;
                case "utf8":
                case "utf-8":
                    return M(e).length;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return 2 * r;
                case "hex":
                    return r >>> 1;
                case "base64":
                    return D(e).length;
                default:
                    if (s) return n ? -1 : M(e).length;
                    t = ("" + t).toLowerCase(), s = !0
            }
        }

        function m(e, t, r) {
            let n = !1;
            if ((void 0 === t || t < 0) && (t = 0), t > this.length || ((void 0 === r || r > this.length) && (r = this.length), r <= 0 || (r >>>= 0) <= (t >>>= 0))) return "";
            for (e || (e = "utf8");;) switch (e) {
                case "hex":
                    return function(e, t, r) {
                        let n = e.length;
                        (!t || t < 0) && (t = 0), (!r || r < 0 || r > n) && (r = n);
                        let s = "";
                        for (let n = t; n < r; ++n) s += L[e[n]];
                        return s
                    }(this, t, r);
                case "utf8":
                case "utf-8":
                    return v(this, t, r);
                case "ascii":
                    return function(e, t, r) {
                        let n = "";
                        r = Math.min(e.length, r);
                        for (let s = t; s < r; ++s) n += String.fromCharCode(127 & e[s]);
                        return n
                    }(this, t, r);
                case "latin1":
                case "binary":
                    return function(e, t, r) {
                        let n = "";
                        r = Math.min(e.length, r);
                        for (let s = t; s < r; ++s) n += String.fromCharCode(e[s]);
                        return n
                    }(this, t, r);
                case "base64":
                    var a, i, o;
                    return a = this, i = t, o = r, 0 === i && o === a.length ? s.fromByteArray(a) : s.fromByteArray(a.slice(i, o));
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return function(e, t, r) {
                        let n = e.slice(t, r),
                            s = "";
                        for (let e = 0; e < n.length - 1; e += 2) s += String.fromCharCode(n[e] + 256 * n[e + 1]);
                        return s
                    }(this, t, r);
                default:
                    if (n) throw TypeError("Unknown encoding: " + e);
                    e = (e + "").toLowerCase(), n = !0
            }
        }

        function y(e, t, r) {
            let n = e[t];
            e[t] = e[r], e[r] = n
        }

        function b(e, t, r, n, s) {
            var a;
            if (0 === e.length) return -1;
            if ("string" == typeof r ? (n = r, r = 0) : r > 0x7fffffff ? r = 0x7fffffff : r < -0x80000000 && (r = -0x80000000), (a = r *= 1) != a && (r = s ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length)
                if (s) return -1;
                else r = e.length - 1;
            else if (r < 0)
                if (!s) return -1;
                else r = 0;
            if ("string" == typeof t && (t = l.from(t, n)), l.isBuffer(t)) return 0 === t.length ? -1 : x(e, t, r, n, s);
            if ("number" == typeof t) {
                if (t &= 255, "function" == typeof Uint8Array.prototype.indexOf)
                    if (s) return Uint8Array.prototype.indexOf.call(e, t, r);
                    else return Uint8Array.prototype.lastIndexOf.call(e, t, r);
                return x(e, [t], r, n, s)
            }
            throw TypeError("val must be string, number or Buffer")
        }

        function x(e, t, r, n, s) {
            let a, i = 1,
                o = e.length,
                l = t.length;
            if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                if (e.length < 2 || t.length < 2) return -1;
                i = 2, o /= 2, l /= 2, r /= 2
            }

            function c(e, t) {
                return 1 === i ? e[t] : e.readUInt16BE(t * i)
            }
            if (s) {
                let n = -1;
                for (a = r; a < o; a++)
                    if (c(e, a) === c(t, -1 === n ? 0 : a - n)) {
                        if (-1 === n && (n = a), a - n + 1 === l) return n * i
                    } else - 1 !== n && (a -= a - n), n = -1
            } else
                for (r + l > o && (r = o - l), a = r; a >= 0; a--) {
                    let r = !0;
                    for (let n = 0; n < l; n++)
                        if (c(e, a + n) !== c(t, n)) {
                            r = !1;
                            break
                        } if (r) return a
                }
            return -1
        }

        function v(e, t, r) {
            r = Math.min(e.length, r);
            let n = [],
                s = t;
            for (; s < r;) {
                let t = e[s],
                    a = null,
                    i = t > 239 ? 4 : t > 223 ? 3 : t > 191 ? 2 : 1;
                if (s + i <= r) {
                    let r, n, o, l;
                    switch (i) {
                        case 1:
                            t < 128 && (a = t);
                            break;
                        case 2:
                            (192 & (r = e[s + 1])) == 128 && (l = (31 & t) << 6 | 63 & r) > 127 && (a = l);
                            break;
                        case 3:
                            r = e[s + 1], n = e[s + 2], (192 & r) == 128 && (192 & n) == 128 && (l = (15 & t) << 12 | (63 & r) << 6 | 63 & n) > 2047 && (l < 55296 || l > 57343) && (a = l);
                            break;
                        case 4:
                            r = e[s + 1], n = e[s + 2], o = e[s + 3], (192 & r) == 128 && (192 & n) == 128 && (192 & o) == 128 && (l = (15 & t) << 18 | (63 & r) << 12 | (63 & n) << 6 | 63 & o) > 65535 && l < 1114112 && (a = l)
                    }
                }
                null === a ? (a = 65533, i = 1) : a > 65535 && (a -= 65536, n.push(a >>> 10 & 1023 | 55296), a = 56320 | 1023 & a), n.push(a), s += i
            }
            var a = n;
            let i = a.length;
            if (i <= 4096) return String.fromCharCode.apply(String, a);
            let o = "",
                l = 0;
            for (; l < i;) o += String.fromCharCode.apply(String, a.slice(l, l += 4096));
            return o
        }

        function w(e, t, r) {
            if (e % 1 != 0 || e < 0) throw RangeError("offset is not uint");
            if (e + t > r) throw RangeError("Trying to access beyond buffer length")
        }

        function E(e, t, r, n, s, a) {
            if (!l.isBuffer(e)) throw TypeError('"buffer" argument must be a Buffer instance');
            if (t > s || t < a) throw RangeError('"value" argument is out of bounds');
            if (r + n > e.length) throw RangeError("Index out of range")
        }

        function A(e, t, r, n, s) {
            C(t, n, s, e, r, 7);
            let a = Number(t & BigInt(0xffffffff));
            e[r++] = a, a >>= 8, e[r++] = a, a >>= 8, e[r++] = a, a >>= 8, e[r++] = a;
            let i = Number(t >> BigInt(32) & BigInt(0xffffffff));
            return e[r++] = i, i >>= 8, e[r++] = i, i >>= 8, e[r++] = i, i >>= 8, e[r++] = i, r
        }

        function j(e, t, r, n, s) {
            C(t, n, s, e, r, 7);
            let a = Number(t & BigInt(0xffffffff));
            e[r + 7] = a, a >>= 8, e[r + 6] = a, a >>= 8, e[r + 5] = a, a >>= 8, e[r + 4] = a;
            let i = Number(t >> BigInt(32) & BigInt(0xffffffff));
            return e[r + 3] = i, i >>= 8, e[r + 2] = i, i >>= 8, e[r + 1] = i, i >>= 8, e[r] = i, r + 8
        }

        function I(e, t, r, n, s, a) {
            if (r + n > e.length || r < 0) throw RangeError("Index out of range")
        }

        function S(e, t, r, n, s) {
            return t *= 1, r >>>= 0, s || I(e, t, r, 4, 34028234663852886e22, -34028234663852886e22), a.write(e, t, r, n, 23, 4), r + 4
        }

        function R(e, t, r, n, s) {
            return t *= 1, r >>>= 0, s || I(e, t, r, 8, 17976931348623157e292, -17976931348623157e292), a.write(e, t, r, n, 52, 8), r + 8
        }
        r.Buffer = l, r.SlowBuffer = function(e) {
            return +e != e && (e = 0), l.alloc(+e)
        }, r.INSPECT_MAX_BYTES = 50, r.kMaxLength = 0x7fffffff, l.TYPED_ARRAY_SUPPORT = function() {
            try {
                let e = new Uint8Array(1),
                    t = {
                        foo: function() {
                            return 42
                        }
                    };
                return Object.setPrototypeOf(t, Uint8Array.prototype), Object.setPrototypeOf(e, t), 42 === e.foo()
            } catch (e) {
                return !1
            }
        }(), l.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(l.prototype, "parent", {
            enumerable: !0,
            get: function() {
                if (l.isBuffer(this)) return this.buffer
            }
        }), Object.defineProperty(l.prototype, "offset", {
            enumerable: !0,
            get: function() {
                if (l.isBuffer(this)) return this.byteOffset
            }
        }), l.poolSize = 8192, l.from = function(e, t, r) {
            return c(e, t, r)
        }, Object.setPrototypeOf(l.prototype, Uint8Array.prototype), Object.setPrototypeOf(l, Uint8Array), l.alloc = function(e, t, r) {
            return (d(e), e <= 0) ? o(e) : void 0 !== t ? "string" == typeof r ? o(e).fill(t, r) : o(e).fill(t) : o(e)
        }, l.allocUnsafe = function(e) {
            return u(e)
        }, l.allocUnsafeSlow = function(e) {
            return u(e)
        }, l.isBuffer = function(e) {
            return null != e && !0 === e._isBuffer && e !== l.prototype
        }, l.compare = function(e, t) {
            if (U(e, Uint8Array) && (e = l.from(e, e.offset, e.byteLength)), U(t, Uint8Array) && (t = l.from(t, t.offset, t.byteLength)), !l.isBuffer(e) || !l.isBuffer(t)) throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
            if (e === t) return 0;
            let r = e.length,
                n = t.length;
            for (let s = 0, a = Math.min(r, n); s < a; ++s)
                if (e[s] !== t[s]) {
                    r = e[s], n = t[s];
                    break
                } return r < n ? -1 : +(n < r)
        }, l.isEncoding = function(e) {
            switch (String(e).toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "latin1":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return !0;
                default:
                    return !1
            }
        }, l.concat = function(e, t) {
            let r;
            if (!Array.isArray(e)) throw TypeError('"list" argument must be an Array of Buffers');
            if (0 === e.length) return l.alloc(0);
            if (void 0 === t)
                for (r = 0, t = 0; r < e.length; ++r) t += e[r].length;
            let n = l.allocUnsafe(t),
                s = 0;
            for (r = 0; r < e.length; ++r) {
                let t = e[r];
                if (U(t, Uint8Array)) s + t.length > n.length ? (l.isBuffer(t) || (t = l.from(t)), t.copy(n, s)) : Uint8Array.prototype.set.call(n, t, s);
                else if (l.isBuffer(t)) t.copy(n, s);
                else throw TypeError('"list" argument must be an Array of Buffers');
                s += t.length
            }
            return n
        }, l.byteLength = g, l.prototype._isBuffer = !0, l.prototype.swap16 = function() {
            let e = this.length;
            if (e % 2 != 0) throw RangeError("Buffer size must be a multiple of 16-bits");
            for (let t = 0; t < e; t += 2) y(this, t, t + 1);
            return this
        }, l.prototype.swap32 = function() {
            let e = this.length;
            if (e % 4 != 0) throw RangeError("Buffer size must be a multiple of 32-bits");
            for (let t = 0; t < e; t += 4) y(this, t, t + 3), y(this, t + 1, t + 2);
            return this
        }, l.prototype.swap64 = function() {
            let e = this.length;
            if (e % 8 != 0) throw RangeError("Buffer size must be a multiple of 64-bits");
            for (let t = 0; t < e; t += 8) y(this, t, t + 7), y(this, t + 1, t + 6), y(this, t + 2, t + 5), y(this, t + 3, t + 4);
            return this
        }, l.prototype.toString = function() {
            let e = this.length;
            return 0 === e ? "" : 0 == arguments.length ? v(this, 0, e) : m.apply(this, arguments)
        }, l.prototype.toLocaleString = l.prototype.toString, l.prototype.equals = function(e) {
            if (!l.isBuffer(e)) throw TypeError("Argument must be a Buffer");
            return this === e || 0 === l.compare(this, e)
        }, l.prototype.inspect = function() {
            let e = "",
                t = r.INSPECT_MAX_BYTES;
            return e = this.toString("hex", 0, t).replace(/(.{2})/g, "$1 ").trim(), this.length > t && (e += " ... "), "<Buffer " + e + ">"
        }, i && (l.prototype[i] = l.prototype.inspect), l.prototype.compare = function(e, t, r, n, s) {
            if (U(e, Uint8Array) && (e = l.from(e, e.offset, e.byteLength)), !l.isBuffer(e)) throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e);
            if (void 0 === t && (t = 0), void 0 === r && (r = e ? e.length : 0), void 0 === n && (n = 0), void 0 === s && (s = this.length), t < 0 || r > e.length || n < 0 || s > this.length) throw RangeError("out of range index");
            if (n >= s && t >= r) return 0;
            if (n >= s) return -1;
            if (t >= r) return 1;
            if (t >>>= 0, r >>>= 0, n >>>= 0, s >>>= 0, this === e) return 0;
            let a = s - n,
                i = r - t,
                o = Math.min(a, i),
                c = this.slice(n, s),
                d = e.slice(t, r);
            for (let e = 0; e < o; ++e)
                if (c[e] !== d[e]) {
                    a = c[e], i = d[e];
                    break
                } return a < i ? -1 : +(i < a)
        }, l.prototype.includes = function(e, t, r) {
            return -1 !== this.indexOf(e, t, r)
        }, l.prototype.indexOf = function(e, t, r) {
            return b(this, e, t, r, !0)
        }, l.prototype.lastIndexOf = function(e, t, r) {
            return b(this, e, t, r, !1)
        }, l.prototype.write = function(e, t, r, n) {
            var s, a, i, o, l, c, d, u;
            if (void 0 === t) n = "utf8", r = this.length, t = 0;
            else if (void 0 === r && "string" == typeof t) n = t, r = this.length, t = 0;
            else if (isFinite(t)) t >>>= 0, isFinite(r) ? (r >>>= 0, void 0 === n && (n = "utf8")) : (n = r, r = void 0);
            else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            let f = this.length - t;
            if ((void 0 === r || r > f) && (r = f), e.length > 0 && (r < 0 || t < 0) || t > this.length) throw RangeError("Attempt to write outside buffer bounds");
            n || (n = "utf8");
            let h = !1;
            for (;;) switch (n) {
                case "hex":
                    return function(e, t, r, n) {
                        let s;
                        r = Number(r) || 0;
                        let a = e.length - r;
                        n ? (n = Number(n)) > a && (n = a) : n = a;
                        let i = t.length;
                        for (n > i / 2 && (n = i / 2), s = 0; s < n; ++s) {
                            var o;
                            let n = parseInt(t.substr(2 * s, 2), 16);
                            if ((o = n) != o) break;
                            e[r + s] = n
                        }
                        return s
                    }(this, e, t, r);
                case "utf8":
                case "utf-8":
                    return s = t, a = r, B(M(e, this.length - s), this, s, a);
                case "ascii":
                case "latin1":
                case "binary":
                    return i = t, o = r, B(function(e) {
                        let t = [];
                        for (let r = 0; r < e.length; ++r) t.push(255 & e.charCodeAt(r));
                        return t
                    }(e), this, i, o);
                case "base64":
                    return l = t, c = r, B(D(e), this, l, c);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return d = t, u = r, B(function(e, t) {
                        let r, n, s = [];
                        for (let a = 0; a < e.length && !((t -= 2) < 0); ++a) n = (r = e.charCodeAt(a)) >> 8, s.push(r % 256), s.push(n);
                        return s
                    }(e, this.length - d), this, d, u);
                default:
                    if (h) throw TypeError("Unknown encoding: " + n);
                    n = ("" + n).toLowerCase(), h = !0
            }
        }, l.prototype.toJSON = function() {
            return {
                type: "Buffer",
                data: Array.prototype.slice.call(this._arr || this, 0)
            }
        }, l.prototype.slice = function(e, t) {
            let r = this.length;
            e = ~~e, t = void 0 === t ? r : ~~t, e < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r), t < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r), t < e && (t = e);
            let n = this.subarray(e, t);
            return Object.setPrototypeOf(n, l.prototype), n
        }, l.prototype.readUintLE = l.prototype.readUIntLE = function(e, t, r) {
            e >>>= 0, t >>>= 0, r || w(e, t, this.length);
            let n = this[e],
                s = 1,
                a = 0;
            for (; ++a < t && (s *= 256);) n += this[e + a] * s;
            return n
        }, l.prototype.readUintBE = l.prototype.readUIntBE = function(e, t, r) {
            e >>>= 0, t >>>= 0, r || w(e, t, this.length);
            let n = this[e + --t],
                s = 1;
            for (; t > 0 && (s *= 256);) n += this[e + --t] * s;
            return n
        }, l.prototype.readUint8 = l.prototype.readUInt8 = function(e, t) {
            return e >>>= 0, t || w(e, 1, this.length), this[e]
        }, l.prototype.readUint16LE = l.prototype.readUInt16LE = function(e, t) {
            return e >>>= 0, t || w(e, 2, this.length), this[e] | this[e + 1] << 8
        }, l.prototype.readUint16BE = l.prototype.readUInt16BE = function(e, t) {
            return e >>>= 0, t || w(e, 2, this.length), this[e] << 8 | this[e + 1]
        }, l.prototype.readUint32LE = l.prototype.readUInt32LE = function(e, t) {
            return e >>>= 0, t || w(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 0x1000000 * this[e + 3]
        }, l.prototype.readUint32BE = l.prototype.readUInt32BE = function(e, t) {
            return e >>>= 0, t || w(e, 4, this.length), 0x1000000 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3])
        }, l.prototype.readBigUInt64LE = F(function(e) {
            P(e >>>= 0, "offset");
            let t = this[e],
                r = this[e + 7];
            (void 0 === t || void 0 === r) && O(e, this.length - 8);
            let n = t + 256 * this[++e] + 65536 * this[++e] + 0x1000000 * this[++e],
                s = this[++e] + 256 * this[++e] + 65536 * this[++e] + 0x1000000 * r;
            return BigInt(n) + (BigInt(s) << BigInt(32))
        }), l.prototype.readBigUInt64BE = F(function(e) {
            P(e >>>= 0, "offset");
            let t = this[e],
                r = this[e + 7];
            (void 0 === t || void 0 === r) && O(e, this.length - 8);
            let n = 0x1000000 * t + 65536 * this[++e] + 256 * this[++e] + this[++e],
                s = 0x1000000 * this[++e] + 65536 * this[++e] + 256 * this[++e] + r;
            return (BigInt(n) << BigInt(32)) + BigInt(s)
        }), l.prototype.readIntLE = function(e, t, r) {
            e >>>= 0, t >>>= 0, r || w(e, t, this.length);
            let n = this[e],
                s = 1,
                a = 0;
            for (; ++a < t && (s *= 256);) n += this[e + a] * s;
            return n >= (s *= 128) && (n -= Math.pow(2, 8 * t)), n
        }, l.prototype.readIntBE = function(e, t, r) {
            e >>>= 0, t >>>= 0, r || w(e, t, this.length);
            let n = t,
                s = 1,
                a = this[e + --n];
            for (; n > 0 && (s *= 256);) a += this[e + --n] * s;
            return a >= (s *= 128) && (a -= Math.pow(2, 8 * t)), a
        }, l.prototype.readInt8 = function(e, t) {
            return (e >>>= 0, t || w(e, 1, this.length), 128 & this[e]) ? -((255 - this[e] + 1) * 1) : this[e]
        }, l.prototype.readInt16LE = function(e, t) {
            e >>>= 0, t || w(e, 2, this.length);
            let r = this[e] | this[e + 1] << 8;
            return 32768 & r ? 0xffff0000 | r : r
        }, l.prototype.readInt16BE = function(e, t) {
            e >>>= 0, t || w(e, 2, this.length);
            let r = this[e + 1] | this[e] << 8;
            return 32768 & r ? 0xffff0000 | r : r
        }, l.prototype.readInt32LE = function(e, t) {
            return e >>>= 0, t || w(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24
        }, l.prototype.readInt32BE = function(e, t) {
            return e >>>= 0, t || w(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]
        }, l.prototype.readBigInt64LE = F(function(e) {
            P(e >>>= 0, "offset");
            let t = this[e],
                r = this[e + 7];
            return (void 0 === t || void 0 === r) && O(e, this.length - 8), (BigInt(this[e + 4] + 256 * this[e + 5] + 65536 * this[e + 6] + (r << 24)) << BigInt(32)) + BigInt(t + 256 * this[++e] + 65536 * this[++e] + 0x1000000 * this[++e])
        }), l.prototype.readBigInt64BE = F(function(e) {
            P(e >>>= 0, "offset");
            let t = this[e],
                r = this[e + 7];
            return (void 0 === t || void 0 === r) && O(e, this.length - 8), (BigInt((t << 24) + 65536 * this[++e] + 256 * this[++e] + this[++e]) << BigInt(32)) + BigInt(0x1000000 * this[++e] + 65536 * this[++e] + 256 * this[++e] + r)
        }), l.prototype.readFloatLE = function(e, t) {
            return e >>>= 0, t || w(e, 4, this.length), a.read(this, e, !0, 23, 4)
        }, l.prototype.readFloatBE = function(e, t) {
            return e >>>= 0, t || w(e, 4, this.length), a.read(this, e, !1, 23, 4)
        }, l.prototype.readDoubleLE = function(e, t) {
            return e >>>= 0, t || w(e, 8, this.length), a.read(this, e, !0, 52, 8)
        }, l.prototype.readDoubleBE = function(e, t) {
            return e >>>= 0, t || w(e, 8, this.length), a.read(this, e, !1, 52, 8)
        }, l.prototype.writeUintLE = l.prototype.writeUIntLE = function(e, t, r, n) {
            if (e *= 1, t >>>= 0, r >>>= 0, !n) {
                let n = Math.pow(2, 8 * r) - 1;
                E(this, e, t, r, n, 0)
            }
            let s = 1,
                a = 0;
            for (this[t] = 255 & e; ++a < r && (s *= 256);) this[t + a] = e / s & 255;
            return t + r
        }, l.prototype.writeUintBE = l.prototype.writeUIntBE = function(e, t, r, n) {
            if (e *= 1, t >>>= 0, r >>>= 0, !n) {
                let n = Math.pow(2, 8 * r) - 1;
                E(this, e, t, r, n, 0)
            }
            let s = r - 1,
                a = 1;
            for (this[t + s] = 255 & e; --s >= 0 && (a *= 256);) this[t + s] = e / a & 255;
            return t + r
        }, l.prototype.writeUint8 = l.prototype.writeUInt8 = function(e, t, r) {
            return e *= 1, t >>>= 0, r || E(this, e, t, 1, 255, 0), this[t] = 255 & e, t + 1
        }, l.prototype.writeUint16LE = l.prototype.writeUInt16LE = function(e, t, r) {
            return e *= 1, t >>>= 0, r || E(this, e, t, 2, 65535, 0), this[t] = 255 & e, this[t + 1] = e >>> 8, t + 2
        }, l.prototype.writeUint16BE = l.prototype.writeUInt16BE = function(e, t, r) {
            return e *= 1, t >>>= 0, r || E(this, e, t, 2, 65535, 0), this[t] = e >>> 8, this[t + 1] = 255 & e, t + 2
        }, l.prototype.writeUint32LE = l.prototype.writeUInt32LE = function(e, t, r) {
            return e *= 1, t >>>= 0, r || E(this, e, t, 4, 0xffffffff, 0), this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e, t + 4
        }, l.prototype.writeUint32BE = l.prototype.writeUInt32BE = function(e, t, r) {
            return e *= 1, t >>>= 0, r || E(this, e, t, 4, 0xffffffff, 0), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4
        }, l.prototype.writeBigUInt64LE = F(function(e, t = 0) {
            return A(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"))
        }), l.prototype.writeBigUInt64BE = F(function(e, t = 0) {
            return j(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"))
        }), l.prototype.writeIntLE = function(e, t, r, n) {
            if (e *= 1, t >>>= 0, !n) {
                let n = Math.pow(2, 8 * r - 1);
                E(this, e, t, r, n - 1, -n)
            }
            let s = 0,
                a = 1,
                i = 0;
            for (this[t] = 255 & e; ++s < r && (a *= 256);) e < 0 && 0 === i && 0 !== this[t + s - 1] && (i = 1), this[t + s] = (e / a | 0) - i & 255;
            return t + r
        }, l.prototype.writeIntBE = function(e, t, r, n) {
            if (e *= 1, t >>>= 0, !n) {
                let n = Math.pow(2, 8 * r - 1);
                E(this, e, t, r, n - 1, -n)
            }
            let s = r - 1,
                a = 1,
                i = 0;
            for (this[t + s] = 255 & e; --s >= 0 && (a *= 256);) e < 0 && 0 === i && 0 !== this[t + s + 1] && (i = 1), this[t + s] = (e / a | 0) - i & 255;
            return t + r
        }, l.prototype.writeInt8 = function(e, t, r) {
            return e *= 1, t >>>= 0, r || E(this, e, t, 1, 127, -128), e < 0 && (e = 255 + e + 1), this[t] = 255 & e, t + 1
        }, l.prototype.writeInt16LE = function(e, t, r) {
            return e *= 1, t >>>= 0, r || E(this, e, t, 2, 32767, -32768), this[t] = 255 & e, this[t + 1] = e >>> 8, t + 2
        }, l.prototype.writeInt16BE = function(e, t, r) {
            return e *= 1, t >>>= 0, r || E(this, e, t, 2, 32767, -32768), this[t] = e >>> 8, this[t + 1] = 255 & e, t + 2
        }, l.prototype.writeInt32LE = function(e, t, r) {
            return e *= 1, t >>>= 0, r || E(this, e, t, 4, 0x7fffffff, -0x80000000), this[t] = 255 & e, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24, t + 4
        }, l.prototype.writeInt32BE = function(e, t, r) {
            return e *= 1, t >>>= 0, r || E(this, e, t, 4, 0x7fffffff, -0x80000000), e < 0 && (e = 0xffffffff + e + 1), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4
        }, l.prototype.writeBigInt64LE = F(function(e, t = 0) {
            return A(this, e, t, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"))
        }), l.prototype.writeBigInt64BE = F(function(e, t = 0) {
            return j(this, e, t, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"))
        }), l.prototype.writeFloatLE = function(e, t, r) {
            return S(this, e, t, !0, r)
        }, l.prototype.writeFloatBE = function(e, t, r) {
            return S(this, e, t, !1, r)
        }, l.prototype.writeDoubleLE = function(e, t, r) {
            return R(this, e, t, !0, r)
        }, l.prototype.writeDoubleBE = function(e, t, r) {
            return R(this, e, t, !1, r)
        }, l.prototype.copy = function(e, t, r, n) {
            if (!l.isBuffer(e)) throw TypeError("argument should be a Buffer");
            if (r || (r = 0), n || 0 === n || (n = this.length), t >= e.length && (t = e.length), t || (t = 0), n > 0 && n < r && (n = r), n === r || 0 === e.length || 0 === this.length) return 0;
            if (t < 0) throw RangeError("targetStart out of bounds");
            if (r < 0 || r >= this.length) throw RangeError("Index out of range");
            if (n < 0) throw RangeError("sourceEnd out of bounds");
            n > this.length && (n = this.length), e.length - t < n - r && (n = e.length - t + r);
            let s = n - r;
            return this === e && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(t, r, n) : Uint8Array.prototype.set.call(e, this.subarray(r, n), t), s
        }, l.prototype.fill = function(e, t, r, n) {
            let s;
            if ("string" == typeof e) {
                if ("string" == typeof t ? (n = t, t = 0, r = this.length) : "string" == typeof r && (n = r, r = this.length), void 0 !== n && "string" != typeof n) throw TypeError("encoding must be a string");
                if ("string" == typeof n && !l.isEncoding(n)) throw TypeError("Unknown encoding: " + n);
                if (1 === e.length) {
                    let t = e.charCodeAt(0);
                    ("utf8" === n && t < 128 || "latin1" === n) && (e = t)
                }
            } else "number" == typeof e ? e &= 255 : "boolean" == typeof e && (e = Number(e));
            if (t < 0 || this.length < t || this.length < r) throw RangeError("Out of range index");
            if (r <= t) return this;
            if (t >>>= 0, r = void 0 === r ? this.length : r >>> 0, e || (e = 0), "number" == typeof e)
                for (s = t; s < r; ++s) this[s] = e;
            else {
                let a = l.isBuffer(e) ? e : l.from(e, n),
                    i = a.length;
                if (0 === i) throw TypeError('The value "' + e + '" is invalid for argument "value"');
                for (s = 0; s < r - t; ++s) this[s + t] = a[s % i]
            }
            return this
        };
        let k = {};

        function _(e, t, r) {
            k[e] = class extends r {
                constructor() {
                    super(), Object.defineProperty(this, "message", {
                        value: t.apply(this, arguments),
                        writable: !0,
                        configurable: !0
                    }), this.name = `${this.name} [${e}]`, this.stack, delete this.name
                }
                get code() {
                    return e
                }
                set code(e) {
                    Object.defineProperty(this, "code", {
                        configurable: !0,
                        enumerable: !0,
                        value: e,
                        writable: !0
                    })
                }
                toString() {
                    return `${this.name} [${e}]: ${this.message}`
                }
            }
        }

        function T(e) {
            let t = "",
                r = e.length,
                n = +("-" === e[0]);
            for (; r >= n + 4; r -= 3) t = `_${e.slice(r-3,r)}${t}`;
            return `${e.slice(0,r)}${t}`
        }

        function C(e, t, r, n, s, a) {
            if (e > r || e < t) {
                let n, s = "bigint" == typeof t ? "n" : "";
                throw n = a > 3 ? 0 === t || t === BigInt(0) ? `>= 0${s} and < 2${s} ** ${(a+1)*8}${s}` : `>= -(2${s} ** ${(a+1)*8-1}${s}) and < 2 ** ${(a+1)*8-1}${s}` : `>= ${t}${s} and <= ${r}${s}`, new k.ERR_OUT_OF_RANGE("value", n, e)
            }
            P(s, "offset"), (void 0 === n[s] || void 0 === n[s + a]) && O(s, n.length - (a + 1))
        }

        function P(e, t) {
            if ("number" != typeof e) throw new k.ERR_INVALID_ARG_TYPE(t, "number", e)
        }

        function O(e, t, r) {
            if (Math.floor(e) !== e) throw P(e, r), new k.ERR_OUT_OF_RANGE(r || "offset", "an integer", e);
            if (t < 0) throw new k.ERR_BUFFER_OUT_OF_BOUNDS;
            throw new k.ERR_OUT_OF_RANGE(r || "offset", `>= ${+!!r} and <= ${t}`, e)
        }
        _("ERR_BUFFER_OUT_OF_BOUNDS", function(e) {
            return e ? `${e} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds"
        }, RangeError), _("ERR_INVALID_ARG_TYPE", function(e, t) {
            return `The "${e}" argument must be of type number. Received type ${typeof t}`
        }, TypeError), _("ERR_OUT_OF_RANGE", function(e, t, r) {
            let n = `The value of "${e}" is out of range.`,
                s = r;
            return Number.isInteger(r) && Math.abs(r) > 0x100000000 ? s = T(String(r)) : "bigint" == typeof r && (s = String(r), (r > BigInt(2) ** BigInt(32) || r < -(BigInt(2) ** BigInt(32))) && (s = T(s)), s += "n"), n += ` It must be ${t}. Received ${s}`
        }, RangeError);
        let N = /[^+/0-9A-Za-z-_]/g;

        function M(e, t) {
            let r;
            t = t || 1 / 0;
            let n = e.length,
                s = null,
                a = [];
            for (let i = 0; i < n; ++i) {
                if ((r = e.charCodeAt(i)) > 55295 && r < 57344) {
                    if (!s) {
                        if (r > 56319 || i + 1 === n) {
                            (t -= 3) > -1 && a.push(239, 191, 189);
                            continue
                        }
                        s = r;
                        continue
                    }
                    if (r < 56320) {
                        (t -= 3) > -1 && a.push(239, 191, 189), s = r;
                        continue
                    }
                    r = (s - 55296 << 10 | r - 56320) + 65536
                } else s && (t -= 3) > -1 && a.push(239, 191, 189);
                if (s = null, r < 128) {
                    if ((t -= 1) < 0) break;
                    a.push(r)
                } else if (r < 2048) {
                    if ((t -= 2) < 0) break;
                    a.push(r >> 6 | 192, 63 & r | 128)
                } else if (r < 65536) {
                    if ((t -= 3) < 0) break;
                    a.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128)
                } else if (r < 1114112) {
                    if ((t -= 4) < 0) break;
                    a.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128)
                } else throw Error("Invalid code point")
            }
            return a
        }

        function D(e) {
            return s.toByteArray(function(e) {
                if ((e = (e = e.split("=")[0]).trim().replace(N, "")).length < 2) return "";
                for (; e.length % 4 != 0;) e += "=";
                return e
            }(e))
        }

        function B(e, t, r, n) {
            let s;
            for (s = 0; s < n && !(s + r >= t.length) && !(s >= e.length); ++s) t[s + r] = e[s];
            return s
        }

        function U(e, t) {
            return e instanceof t || null != e && null != e.constructor && null != e.constructor.name && e.constructor.name === t.name
        }
        let L = function() {
            let e = "0123456789abcdef",
                t = Array(256);
            for (let r = 0; r < 16; ++r) {
                let n = 16 * r;
                for (let s = 0; s < 16; ++s) t[n + s] = e[r] + e[s]
            }
            return t
        }();

        function F(e) {
            return "undefined" == typeof BigInt ? J : e
        }

        function J() {
            throw Error("BigInt not supported")
        }
    }, {
        "9c62938f1dccc73c": "6P4Ax",
        aceacb6a4531a9d2: "lPFVa"
    }],
    "6P4Ax": [function(e, t, r, n) {
        "use strict";
        r.byteLength = function(e) {
            var t = d(e),
                r = t[0],
                n = t[1];
            return (r + n) * 3 / 4 - n
        }, r.toByteArray = function(e) {
            var t, r, n = d(e),
                s = n[0],
                o = n[1],
                l = new i((s + o) * 3 / 4 - o),
                c = 0,
                u = o > 0 ? s - 4 : s;
            for (r = 0; r < u; r += 4) t = a[e.charCodeAt(r)] << 18 | a[e.charCodeAt(r + 1)] << 12 | a[e.charCodeAt(r + 2)] << 6 | a[e.charCodeAt(r + 3)], l[c++] = t >> 16 & 255, l[c++] = t >> 8 & 255, l[c++] = 255 & t;
            return 2 === o && (t = a[e.charCodeAt(r)] << 2 | a[e.charCodeAt(r + 1)] >> 4, l[c++] = 255 & t), 1 === o && (t = a[e.charCodeAt(r)] << 10 | a[e.charCodeAt(r + 1)] << 4 | a[e.charCodeAt(r + 2)] >> 2, l[c++] = t >> 8 & 255, l[c++] = 255 & t), l
        }, r.fromByteArray = function(e) {
            for (var t, r = e.length, n = r % 3, a = [], i = 0, o = r - n; i < o; i += 16383) a.push(function(e, t, r) {
                for (var n, a = [], i = t; i < r; i += 3) n = (e[i] << 16 & 0xff0000) + (e[i + 1] << 8 & 65280) + (255 & e[i + 2]), a.push(s[n >> 18 & 63] + s[n >> 12 & 63] + s[n >> 6 & 63] + s[63 & n]);
                return a.join("")
            }(e, i, i + 16383 > o ? o : i + 16383));
            return 1 === n ? a.push(s[(t = e[r - 1]) >> 2] + s[t << 4 & 63] + "==") : 2 === n && a.push(s[(t = (e[r - 2] << 8) + e[r - 1]) >> 10] + s[t >> 4 & 63] + s[t << 2 & 63] + "="), a.join("")
        };
        for (var s = [], a = [], i = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", l = 0, c = o.length; l < c; ++l) s[l] = o[l], a[o.charCodeAt(l)] = l;

        function d(e) {
            var t = e.length;
            if (t % 4 > 0) throw Error("Invalid string. Length must be a multiple of 4");
            var r = e.indexOf("="); - 1 === r && (r = t);
            var n = r === t ? 0 : 4 - r % 4;
            return [r, n]
        }
        a[45] = 62, a[95] = 63
    }, {}],
    lPFVa: [function(e, t, r, n) {
        r.read = function(e, t, r, n, s) {
            var a, i, o = 8 * s - n - 1,
                l = (1 << o) - 1,
                c = l >> 1,
                d = -7,
                u = r ? s - 1 : 0,
                f = r ? -1 : 1,
                h = e[t + u];
            for (u += f, a = h & (1 << -d) - 1, h >>= -d, d += o; d > 0; a = 256 * a + e[t + u], u += f, d -= 8);
            for (i = a & (1 << -d) - 1, a >>= -d, d += n; d > 0; i = 256 * i + e[t + u], u += f, d -= 8);
            if (0 === a) a = 1 - c;
            else {
                if (a === l) return i ? NaN : 1 / 0 * (h ? -1 : 1);
                i += Math.pow(2, n), a -= c
            }
            return (h ? -1 : 1) * i * Math.pow(2, a - n)
        }, r.write = function(e, t, r, n, s, a) {
            var i, o, l, c = 8 * a - s - 1,
                d = (1 << c) - 1,
                u = d >> 1,
                f = 5960464477539062e-23 * (23 === s),
                h = n ? 0 : a - 1,
                p = n ? 1 : -1,
                g = +(t < 0 || 0 === t && 1 / t < 0);
            for (isNaN(t = Math.abs(t)) || t === 1 / 0 ? (o = +!!isNaN(t), i = d) : (i = Math.floor(Math.log(t) / Math.LN2), t * (l = Math.pow(2, -i)) < 1 && (i--, l *= 2), i + u >= 1 ? t += f / l : t += f * Math.pow(2, 1 - u), t * l >= 2 && (i++, l /= 2), i + u >= d ? (o = 0, i = d) : i + u >= 1 ? (o = (t * l - 1) * Math.pow(2, s), i += u) : (o = t * Math.pow(2, u - 1) * Math.pow(2, s), i = 0)); s >= 8; e[r + h] = 255 & o, h += p, o /= 256, s -= 8);
            for (i = i << s | o, c += s; c > 0; e[r + h] = 255 & i, h += p, i /= 256, c -= 8);
            e[r + h - p] |= 128 * g
        }
    }, {}],
    hjCVQ: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        "use strict";
        var a = e("../utils.js"),
            i = s.interopDefault(a);

        function o(e, t, r, n, s) {
            Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = Error().stack, this.message = e, this.name = "AxiosError", t && (this.code = t), r && (this.config = r), n && (this.request = n), s && (this.response = s, this.status = s.status ? s.status : null)
        }
        i.default.inherits(o, Error, {
            toJSON: function() {
                return {
                    message: this.message,
                    name: this.name,
                    description: this.description,
                    number: this.number,
                    fileName: this.fileName,
                    lineNumber: this.lineNumber,
                    columnNumber: this.columnNumber,
                    stack: this.stack,
                    config: i.default.toJSONObject(this.config),
                    code: this.code,
                    status: this.status
                }
            }
        });
        let l = o.prototype,
            c = {};
        ["ERR_BAD_OPTION_VALUE", "ERR_BAD_OPTION", "ECONNABORTED", "ETIMEDOUT", "ERR_NETWORK", "ERR_FR_TOO_MANY_REDIRECTS", "ERR_DEPRECATED", "ERR_BAD_RESPONSE", "ERR_BAD_REQUEST", "ERR_CANCELED", "ERR_NOT_SUPPORT", "ERR_INVALID_URL"].forEach(e => {
            c[e] = {
                value: e
            }
        }), Object.defineProperties(o, c), Object.defineProperty(l, "isAxiosError", {
            value: !0
        }), o.from = (e, t, r, n, s, a) => {
            let c = Object.create(l);
            return i.default.toFlatObject(e, c, function(e) {
                return e !== Error.prototype
            }, e => "isAxiosError" !== e), o.call(c, e.message, t, r, n, s), c.cause = e, c.name = e.name, a && Object.assign(c, a), c
        }, r.default = o
    }, {
        "../utils.js": "2ioTY",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    fN4B6: [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r), r.default = null
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "5Qndl": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        "use strict";
        var a = e("./../utils.js"),
            i = s.interopDefault(a);
        r.default = class {
            constructor() {
                this.handlers = []
            }
            use(e, t, r) {
                return this.handlers.push({
                    fulfilled: e,
                    rejected: t,
                    synchronous: !!r && r.synchronous,
                    runWhen: r ? r.runWhen : null
                }), this.handlers.length - 1
            }
            eject(e) {
                this.handlers[e] && (this.handlers[e] = null)
            }
            clear() {
                this.handlers && (this.handlers = [])
            }
            forEach(e) {
                i.default.forEach(this.handlers, function(t) {
                    null !== t && e(t)
                })
            }
        }
    }, {
        "./../utils.js": "2ioTY",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    gTZwy: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => b);
        "use strict";
        var a = e("./transformData.js"),
            i = s.interopDefault(a),
            o = e("../cancel/isCancel.js"),
            l = s.interopDefault(o),
            c = e("../defaults/index.js"),
            d = s.interopDefault(c),
            u = e("../cancel/CanceledError.js"),
            f = s.interopDefault(u),
            h = e("../core/AxiosHeaders.js"),
            p = s.interopDefault(h),
            g = e("../adapters/adapters.js"),
            m = s.interopDefault(g);

        function y(e) {
            if (e.cancelToken && e.cancelToken.throwIfRequested(), e.signal && e.signal.aborted) throw new(0, f.default)(null, e)
        }

        function b(e) {
            return y(e), e.headers = p.default.from(e.headers), e.data = i.default.call(e, e.transformRequest), -1 !== ["post", "put", "patch"].indexOf(e.method) && e.headers.setContentType("application/x-www-form-urlencoded", !1), m.default.getAdapter(e.adapter || d.default.adapter)(e).then(function(t) {
                return y(e), t.data = i.default.call(e, e.transformResponse, t), t.headers = p.default.from(t.headers), t
            }, function(t) {
                return !(0, l.default)(t) && (y(e), t && t.response && (t.response.data = i.default.call(e, e.transformResponse, t.response), t.response.headers = p.default.from(t.response.headers))), Promise.reject(t)
            })
        }
    }, {
        "./transformData.js": "8H0wy",
        "../cancel/isCancel.js": "5ndsF",
        "../defaults/index.js": "1GU0t",
        "../cancel/CanceledError.js": "judoa",
        "../core/AxiosHeaders.js": "1qkRX",
        "../adapters/adapters.js": "6E0f0",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "8H0wy": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => u);
        "use strict";
        var a = e("./../utils.js"),
            i = s.interopDefault(a),
            o = e("../defaults/index.js"),
            l = s.interopDefault(o),
            c = e("../core/AxiosHeaders.js"),
            d = s.interopDefault(c);

        function u(e, t) {
            let r = this || l.default,
                n = t || r,
                s = d.default.from(n.headers),
                a = n.data;
            return i.default.forEach(e, function(e) {
                a = e.call(r, a, s.normalize(), t ? t.status : void 0)
            }), s.normalize(), a
        }
    }, {
        "./../utils.js": "2ioTY",
        "../defaults/index.js": "1GU0t",
        "../core/AxiosHeaders.js": "1qkRX",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "1GU0t": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        "use strict";
        var a = e("../utils.js"),
            i = s.interopDefault(a),
            o = e("../core/AxiosError.js"),
            l = s.interopDefault(o),
            c = e("./transitional.js"),
            d = s.interopDefault(c),
            u = e("../helpers/toFormData.js"),
            f = s.interopDefault(u),
            h = e("../helpers/toURLEncodedForm.js"),
            p = s.interopDefault(h),
            g = e("../platform/index.js"),
            m = s.interopDefault(g),
            y = e("../helpers/formDataToJSON.js"),
            b = s.interopDefault(y);
        let x = {
            transitional: d.default,
            adapter: ["xhr", "http", "fetch"],
            transformRequest: [function(e, t) {
                let r, n = t.getContentType() || "",
                    s = n.indexOf("application/json") > -1,
                    a = i.default.isObject(e);
                if (a && i.default.isHTMLForm(e) && (e = new FormData(e)), i.default.isFormData(e)) return s ? JSON.stringify((0, b.default)(e)) : e;
                if (i.default.isArrayBuffer(e) || i.default.isBuffer(e) || i.default.isStream(e) || i.default.isFile(e) || i.default.isBlob(e) || i.default.isReadableStream(e)) return e;
                if (i.default.isArrayBufferView(e)) return e.buffer;
                if (i.default.isURLSearchParams(e)) return t.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1), e.toString();
                if (a) {
                    if (n.indexOf("application/x-www-form-urlencoded") > -1) return (0, p.default)(e, this.formSerializer).toString();
                    if ((r = i.default.isFileList(e)) || n.indexOf("multipart/form-data") > -1) {
                        let t = this.env && this.env.FormData;
                        return (0, f.default)(r ? {
                            "files[]": e
                        } : e, t && new t, this.formSerializer)
                    }
                }
                if (a || s) {
                    t.setContentType("application/json", !1);
                    var o = e;
                    if (i.default.isString(o)) try {
                        return (0, JSON.parse)(o), i.default.trim(o)
                    } catch (e) {
                        if ("SyntaxError" !== e.name) throw e
                    }
                    return (0, JSON.stringify)(o)
                }
                return e
            }],
            transformResponse: [function(e) {
                let t = this.transitional || x.transitional,
                    r = t && t.forcedJSONParsing,
                    n = "json" === this.responseType;
                if (i.default.isResponse(e) || i.default.isReadableStream(e)) return e;
                if (e && i.default.isString(e) && (r && !this.responseType || n)) {
                    let r = t && t.silentJSONParsing;
                    try {
                        return JSON.parse(e)
                    } catch (e) {
                        if (!r && n) {
                            if ("SyntaxError" === e.name) throw l.default.from(e, l.default.ERR_BAD_RESPONSE, this, null, this.response);
                            throw e
                        }
                    }
                }
                return e
            }],
            timeout: 0,
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            maxContentLength: -1,
            maxBodyLength: -1,
            env: {
                FormData: m.default.classes.FormData,
                Blob: m.default.classes.Blob
            },
            validateStatus: function(e) {
                return e >= 200 && e < 300
            },
            headers: {
                common: {
                    Accept: "application/json, text/plain, */*",
                    "Content-Type": void 0
                }
            }
        };
        i.default.forEach(["delete", "get", "head", "post", "put", "patch"], e => {
            x.headers[e] = {}
        }), r.default = x
    }, {
        "../utils.js": "2ioTY",
        "../core/AxiosError.js": "hjCVQ",
        "./transitional.js": "lBqaD",
        "../helpers/toFormData.js": "k8OtD",
        "../helpers/toURLEncodedForm.js": "bgvH4",
        "../platform/index.js": "fP1Ni",
        "../helpers/formDataToJSON.js": "jhUur",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    lBqaD: [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r);
        "use strict";
        r.default = {
            silentJSONParsing: !0,
            forcedJSONParsing: !0,
            clarifyTimeoutError: !1
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    bgvH4: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => u);
        "use strict";
        var a = e("../utils.js"),
            i = s.interopDefault(a),
            o = e("./toFormData.js"),
            l = s.interopDefault(o),
            c = e("../platform/index.js"),
            d = s.interopDefault(c);

        function u(e, t) {
            return (0, l.default)(e, new d.default.classes.URLSearchParams, Object.assign({
                visitor: function(e, t, r, n) {
                    return d.default.isNode && i.default.isBuffer(e) ? (this.append(t, e.toString("base64")), !1) : n.defaultVisitor.apply(this, arguments)
                }
            }, t))
        }
    }, {
        "../utils.js": "2ioTY",
        "./toFormData.js": "k8OtD",
        "../platform/index.js": "fP1Ni",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    fP1Ni: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("./node/index.js"),
            i = s.interopDefault(a);
        r.default = {
            ...e("./common/utils.js"),
            ...i.default
        }
    }, {
        "./node/index.js": "3yghl",
        "./common/utils.js": "dkG5V",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "3yghl": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("./classes/URLSearchParams.js"),
            i = s.interopDefault(a),
            o = e("./classes/FormData.js"),
            l = s.interopDefault(o),
            c = e("./classes/Blob.js"),
            d = s.interopDefault(c);
        r.default = {
            isBrowser: !0,
            classes: {
                URLSearchParams: i.default,
                FormData: l.default,
                Blob: d.default
            },
            protocols: ["http", "https", "file", "blob", "url", "data"]
        }
    }, {
        "./classes/URLSearchParams.js": "eT4YQ",
        "./classes/FormData.js": "2389U",
        "./classes/Blob.js": "eKMhL",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    eT4YQ: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        "use strict";
        var a = e("../../../helpers/AxiosURLSearchParams.js"),
            i = s.interopDefault(a);
        r.default = "undefined" != typeof URLSearchParams ? URLSearchParams : i.default
    }, {
        "../../../helpers/AxiosURLSearchParams.js": "juzHK",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "2389U": [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r);
        "use strict";
        r.default = "undefined" != typeof FormData ? FormData : null
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    eKMhL: [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r);
        "use strict";
        r.default = "undefined" != typeof Blob ? Blob : null
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    dkG5V: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "hasBrowserEnv", () => a), s.export(r, "hasStandardBrowserWebWorkerEnv", () => l), s.export(r, "hasStandardBrowserEnv", () => o), s.export(r, "navigator", () => i), s.export(r, "origin", () => c);
        let a = "undefined" != typeof window && "undefined" != typeof document,
            i = "object" == typeof navigator && navigator || void 0,
            o = a && (!i || 0 > ["ReactNative", "NativeScript", "NS"].indexOf(i.product)),
            l = "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope && "function" == typeof self.importScripts,
            c = a && window.location.href || "http://localhost"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    jhUur: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        "use strict";
        var a = e("../utils.js"),
            i = s.interopDefault(a);
        r.default = function(e) {
            if (i.default.isFormData(e) && i.default.isFunction(e.entries)) {
                let t = {};
                return i.default.forEachEntry(e, (e, r) => {
                    ! function e(t, r, n, s) {
                        let a = t[s++];
                        if ("__proto__" === a) return !0;
                        let o = Number.isFinite(+a),
                            l = s >= t.length;
                        return (a = !a && i.default.isArray(n) ? n.length : a, l) ? i.default.hasOwnProp(n, a) ? n[a] = [n[a], r] : n[a] = r : (n[a] && i.default.isObject(n[a]) || (n[a] = []), e(t, r, n[a], s) && i.default.isArray(n[a]) && (n[a] = function(e) {
                            let t, r, n = {},
                                s = Object.keys(e),
                                a = s.length;
                            for (t = 0; t < a; t++) n[r = s[t]] = e[r];
                            return n
                        }(n[a]))), !o
                    }(i.default.matchAll(/\w+|\[(\w*)]/g, e).map(e => "[]" === e[0] ? "" : e[1] || e[0]), r, t, 0)
                }), t
            }
            return null
        }
    }, {
        "../utils.js": "2ioTY",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "1qkRX": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        "use strict";
        var a = e("../utils.js"),
            i = s.interopDefault(a),
            o = e("../helpers/parseHeaders.js"),
            l = s.interopDefault(o);
        let c = Symbol("internals");

        function d(e) {
            return e && String(e).trim().toLowerCase()
        }

        function u(e) {
            return !1 === e || null == e ? e : i.default.isArray(e) ? e.map(u) : String(e)
        }

        function f(e, t, r, n, s) {
            if (i.default.isFunction(n)) return n.call(this, t, r);
            if (s && (t = r), i.default.isString(t)) {
                if (i.default.isString(n)) return -1 !== t.indexOf(n);
                if (i.default.isRegExp(n)) return n.test(t)
            }
        }
        class h {
            constructor(e) {
                e && this.set(e)
            }
            set(e, t, r) {
                let n = this;

                function s(e, t, r) {
                    let s = d(t);
                    if (!s) throw Error("header name must be a non-empty string");
                    let a = i.default.findKey(n, s);
                    a && void 0 !== n[a] && !0 !== r && (void 0 !== r || !1 === n[a]) || (n[a || t] = u(e))
                }
                let a = (e, t) => i.default.forEach(e, (e, r) => s(e, r, t));
                if (i.default.isPlainObject(e) || e instanceof this.constructor) a(e, t);
                else {
                    let n;
                    if (i.default.isString(e) && (e = e.trim()) && (n = e, !/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(n.trim()))) a((0, l.default)(e), t);
                    else if (i.default.isObject(e) && i.default.isIterable(e)) {
                        let r = {},
                            n, s;
                        for (let t of e) {
                            if (!i.default.isArray(t)) throw TypeError("Object iterator must return a key-value pair");
                            r[s = t[0]] = (n = r[s]) ? i.default.isArray(n) ? [...n, t[1]] : [n, t[1]] : t[1]
                        }
                        a(r, t)
                    } else null != e && s(t, e, r)
                }
                return this
            }
            get(e, t) {
                if (e = d(e)) {
                    let r = i.default.findKey(this, e);
                    if (r) {
                        let e = this[r];
                        if (!t) return e;
                        if (!0 === t) {
                            let t, r = Object.create(null),
                                n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
                            for (; t = n.exec(e);) r[t[1]] = t[2];
                            return r
                        }
                        if (i.default.isFunction(t)) return t.call(this, e, r);
                        if (i.default.isRegExp(t)) return t.exec(e);
                        throw TypeError("parser must be boolean|regexp|function")
                    }
                }
            }
            has(e, t) {
                if (e = d(e)) {
                    let r = i.default.findKey(this, e);
                    return !!(r && void 0 !== this[r] && (!t || f(this, this[r], r, t)))
                }
                return !1
            }
            delete(e, t) {
                let r = this,
                    n = !1;

                function s(e) {
                    if (e = d(e)) {
                        let s = i.default.findKey(r, e);
                        s && (!t || f(r, r[s], s, t)) && (delete r[s], n = !0)
                    }
                }
                return i.default.isArray(e) ? e.forEach(s) : s(e), n
            }
            clear(e) {
                let t = Object.keys(this),
                    r = t.length,
                    n = !1;
                for (; r--;) {
                    let s = t[r];
                    (!e || f(this, this[s], s, e, !0)) && (delete this[s], n = !0)
                }
                return n
            }
            normalize(e) {
                let t = this,
                    r = {};
                return i.default.forEach(this, (n, s) => {
                    let a = i.default.findKey(r, s);
                    if (a) {
                        t[a] = u(n), delete t[s];
                        return
                    }
                    let o = e ? s.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (e, t, r) => t.toUpperCase() + r) : String(s).trim();
                    o !== s && delete t[s], t[o] = u(n), r[o] = !0
                }), this
            }
            concat(...e) {
                return this.constructor.concat(this, ...e)
            }
            toJSON(e) {
                let t = Object.create(null);
                return i.default.forEach(this, (r, n) => {
                    null != r && !1 !== r && (t[n] = e && i.default.isArray(r) ? r.join(", ") : r)
                }), t
            } [Symbol.iterator]() {
                return Object.entries(this.toJSON())[Symbol.iterator]()
            }
            toString() {
                return Object.entries(this.toJSON()).map(([e, t]) => e + ": " + t).join("\n")
            }
            getSetCookie() {
                return this.get("set-cookie") || []
            }
            get[Symbol.toStringTag]() {
                return "AxiosHeaders"
            }
            static from(e) {
                return e instanceof this ? e : new this(e)
            }
            static concat(e, ...t) {
                let r = new this(e);
                return t.forEach(e => r.set(e)), r
            }
            static accessor(e) {
                let t = (this[c] = this[c] = {
                        accessors: {}
                    }).accessors,
                    r = this.prototype;

                function n(e) {
                    let n = d(e);
                    if (!t[n]) {
                        let s = i.default.toCamelCase(" " + e);
                        ["get", "set", "has"].forEach(t => {
                            Object.defineProperty(r, t + s, {
                                value: function(r, n, s) {
                                    return this[t].call(this, e, r, n, s)
                                },
                                configurable: !0
                            })
                        }), t[n] = !0
                    }
                }
                return i.default.isArray(e) ? e.forEach(n) : n(e), this
            }
        }
        h.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]), i.default.reduceDescriptors(h.prototype, ({
            value: e
        }, t) => {
            let r = t[0].toUpperCase() + t.slice(1);
            return {
                get: () => e,
                set(e) {
                    this[r] = e
                }
            }
        }), i.default.freezeMethods(h), r.default = h
    }, {
        "../utils.js": "2ioTY",
        "../helpers/parseHeaders.js": "aYbVO",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    aYbVO: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        "use strict";
        var a = e("./../utils.js");
        let i = s.interopDefault(a).default.toObjectSet(["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"]);
        r.default = e => {
            let t, r, n, s = {};
            return e && e.split("\n").forEach(function(e) {
                n = e.indexOf(":"), t = e.substring(0, n).trim().toLowerCase(), r = e.substring(n + 1).trim(), !t || s[t] && i[t] || ("set-cookie" === t ? s[t] ? s[t].push(r) : s[t] = [r] : s[t] = s[t] ? s[t] + ", " + r : r)
            }), s
        }
    }, {
        "./../utils.js": "2ioTY",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "5ndsF": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        "use strict";

        function a(e) {
            return !!(e && e.__CANCEL__)
        }
        s.defineInteropFlag(r), s.export(r, "default", () => a)
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    judoa: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        "use strict";
        var a = e("../core/AxiosError.js"),
            i = s.interopDefault(a),
            o = e("../utils.js");

        function l(e, t, r) {
            i.default.call(this, null == e ? "canceled" : e, i.default.ERR_CANCELED, t, r), this.name = "CanceledError"
        }
        s.interopDefault(o).default.inherits(l, i.default, {
            __CANCEL__: !0
        }), r.default = l
    }, {
        "../core/AxiosError.js": "hjCVQ",
        "../utils.js": "2ioTY",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "6E0f0": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("../utils.js"),
            i = s.interopDefault(a),
            o = e("./http.js"),
            l = s.interopDefault(o),
            c = e("./xhr.js"),
            d = s.interopDefault(c),
            u = e("./fetch.js"),
            f = s.interopDefault(u),
            h = e("../core/AxiosError.js"),
            p = s.interopDefault(h);
        let g = {
            http: l.default,
            xhr: d.default,
            fetch: f.default
        };
        i.default.forEach(g, (e, t) => {
            if (e) {
                try {
                    Object.defineProperty(e, "name", {
                        value: t
                    })
                } catch (e) {}
                Object.defineProperty(e, "adapterName", {
                    value: t
                })
            }
        });
        let m = e => `- ${e}`,
            y = e => i.default.isFunction(e) || null === e || !1 === e;
        r.default = {
            getAdapter: e => {
                let t, r, {
                        length: n
                    } = e = i.default.isArray(e) ? e : [e],
                    s = {};
                for (let a = 0; a < n; a++) {
                    let n;
                    if (r = t = e[a], !y(t) && void 0 === (r = g[(n = String(t)).toLowerCase()])) throw new(0, p.default)(`Unknown adapter '${n}'`);
                    if (r) break;
                    s[n || "#" + a] = r
                }
                if (!r) {
                    let e = Object.entries(s).map(([e, t]) => `adapter ${e} ` + (!1 === t ? "is not supported by the environment" : "is not available in the build")),
                        t = n ? e.length > 1 ? "since :\n" + e.map(m).join("\n") : " " + m(e[0]) : "as no adapter specified";
                    throw new(0, p.default)("There is no suitable adapter to dispatch the request " + t, "ERR_NOT_SUPPORT")
                }
                return r
            },
            adapters: g
        }
    }, {
        "../utils.js": "2ioTY",
        "./http.js": "fN4B6",
        "./xhr.js": "9qcoo",
        "./fetch.js": "29Teh",
        "../core/AxiosError.js": "hjCVQ",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "9qcoo": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("./../utils.js"),
            i = s.interopDefault(a),
            o = e("./../core/settle.js"),
            l = s.interopDefault(o),
            c = e("../defaults/transitional.js"),
            d = s.interopDefault(c),
            u = e("../core/AxiosError.js"),
            f = s.interopDefault(u),
            h = e("../cancel/CanceledError.js"),
            p = s.interopDefault(h),
            g = e("../helpers/parseProtocol.js"),
            m = s.interopDefault(g),
            y = e("../platform/index.js"),
            b = s.interopDefault(y),
            x = e("../core/AxiosHeaders.js"),
            v = s.interopDefault(x),
            w = e("../helpers/progressEventReducer.js"),
            E = e("../helpers/resolveConfig.js"),
            A = s.interopDefault(E);
        r.default = "undefined" != typeof XMLHttpRequest && function(e) {
            return new Promise(function(t, r) {
                let n, s, a, o, c, u = (0, A.default)(e),
                    h = u.data,
                    g = v.default.from(u.headers).normalize(),
                    {
                        responseType: y,
                        onUploadProgress: x,
                        onDownloadProgress: E
                    } = u;

                function j() {
                    o && o(), c && c(), u.cancelToken && u.cancelToken.unsubscribe(n), u.signal && u.signal.removeEventListener("abort", n)
                }
                let I = new XMLHttpRequest;

                function S() {
                    if (!I) return;
                    let n = v.default.from("getAllResponseHeaders" in I && I.getAllResponseHeaders()),
                        s = {
                            data: y && "text" !== y && "json" !== y ? I.response : I.responseText,
                            status: I.status,
                            statusText: I.statusText,
                            headers: n,
                            config: e,
                            request: I
                        };
                    (0, l.default)(function(e) {
                        t(e), j()
                    }, function(e) {
                        r(e), j()
                    }, s), I = null
                }
                I.open(u.method.toUpperCase(), u.url, !0), I.timeout = u.timeout, "onloadend" in I ? I.onloadend = S : I.onreadystatechange = function() {
                    I && 4 === I.readyState && (0 !== I.status || I.responseURL && 0 === I.responseURL.indexOf("file:")) && setTimeout(S)
                }, I.onabort = function() {
                    I && (r(new(0, f.default)("Request aborted", f.default.ECONNABORTED, e, I)), I = null)
                }, I.onerror = function() {
                    r(new(0, f.default)("Network Error", f.default.ERR_NETWORK, e, I)), I = null
                }, I.ontimeout = function() {
                    let t = u.timeout ? "timeout of " + u.timeout + "ms exceeded" : "timeout exceeded",
                        n = u.transitional || d.default;
                    u.timeoutErrorMessage && (t = u.timeoutErrorMessage), r(new(0, f.default)(t, n.clarifyTimeoutError ? f.default.ETIMEDOUT : f.default.ECONNABORTED, e, I)), I = null
                }, void 0 === h && g.setContentType(null), "setRequestHeader" in I && i.default.forEach(g.toJSON(), function(e, t) {
                    I.setRequestHeader(t, e)
                }), i.default.isUndefined(u.withCredentials) || (I.withCredentials = !!u.withCredentials), y && "json" !== y && (I.responseType = u.responseType), E && ([a, c] = (0, w.progressEventReducer)(E, !0), I.addEventListener("progress", a)), x && I.upload && ([s, o] = (0, w.progressEventReducer)(x), I.upload.addEventListener("progress", s), I.upload.addEventListener("loadend", o)), (u.cancelToken || u.signal) && (n = t => {
                    I && (r(!t || t.type ? new(0, p.default)(null, e, I) : t), I.abort(), I = null)
                }, u.cancelToken && u.cancelToken.subscribe(n), u.signal && (u.signal.aborted ? n() : u.signal.addEventListener("abort", n)));
                let R = (0, m.default)(u.url);
                if (R && -1 === b.default.protocols.indexOf(R)) return void r(new(0, f.default)("Unsupported protocol " + R + ":", f.default.ERR_BAD_REQUEST, e));
                I.send(h || null)
            })
        }
    }, {
        "./../utils.js": "2ioTY",
        "./../core/settle.js": "dlf0W",
        "../defaults/transitional.js": "lBqaD",
        "../core/AxiosError.js": "hjCVQ",
        "../cancel/CanceledError.js": "judoa",
        "../helpers/parseProtocol.js": "3ExDf",
        "../platform/index.js": "fP1Ni",
        "../core/AxiosHeaders.js": "1qkRX",
        "../helpers/progressEventReducer.js": "7uRZA",
        "../helpers/resolveConfig.js": "gdj2s",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    dlf0W: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => o);
        "use strict";
        var a = e("./AxiosError.js"),
            i = s.interopDefault(a);

        function o(e, t, r) {
            let n = r.config.validateStatus;
            !r.status || !n || n(r.status) ? e(r) : t(new(0, i.default)("Request failed with status code " + r.status, [i.default.ERR_BAD_REQUEST, i.default.ERR_BAD_RESPONSE][Math.floor(r.status / 100) - 4], r.config, r.request, r))
        }
    }, {
        "./AxiosError.js": "hjCVQ",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "3ExDf": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        "use strict";

        function a(e) {
            let t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
            return t && t[1] || ""
        }
        s.defineInteropFlag(r), s.export(r, "default", () => a)
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "7uRZA": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "progressEventReducer", () => u), s.export(r, "progressEventDecorator", () => f), s.export(r, "asyncDecorator", () => h);
        var a = e("./speedometer.js"),
            i = s.interopDefault(a),
            o = e("./throttle.js"),
            l = s.interopDefault(o),
            c = e("../utils.js"),
            d = s.interopDefault(c);
        let u = (e, t, r = 3) => {
                let n = 0,
                    s = (0, i.default)(50, 250);
                return (0, l.default)(r => {
                    let a = r.loaded,
                        i = r.lengthComputable ? r.total : void 0,
                        o = a - n,
                        l = s(o);
                    n = a, e({
                        loaded: a,
                        total: i,
                        progress: i ? a / i : void 0,
                        bytes: o,
                        rate: l || void 0,
                        estimated: l && i && a <= i ? (i - a) / l : void 0,
                        event: r,
                        lengthComputable: null != i,
                        [t ? "download" : "upload"]: !0
                    })
                }, r)
            },
            f = (e, t) => {
                let r = null != e;
                return [n => t[0]({
                    lengthComputable: r,
                    total: e,
                    loaded: n
                }), t[1]]
            },
            h = e => (...t) => d.default.asap(() => e(...t))
    }, {
        "./speedometer.js": "cludo",
        "./throttle.js": "4cf1B",
        "../utils.js": "2ioTY",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    cludo: [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r);
        "use strict";
        r.default = function(e, t) {
            let r, n = Array(e = e || 10),
                s = Array(e),
                a = 0,
                i = 0;
            return t = void 0 !== t ? t : 1e3,
                function(o) {
                    let l = Date.now(),
                        c = s[i];
                    r || (r = l), n[a] = o, s[a] = l;
                    let d = i,
                        u = 0;
                    for (; d !== a;) u += n[d++], d %= e;
                    if ((a = (a + 1) % e) === i && (i = (i + 1) % e), l - r < t) return;
                    let f = c && l - c;
                    return f ? Math.round(1e3 * u / f) : void 0
                }
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "4cf1B": [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r), r.default = function(e, t) {
            let r, n, s = 0,
                a = 1e3 / t,
                i = (t, a = Date.now()) => {
                    s = a, r = null, n && (clearTimeout(n), n = null), e.apply(null, t)
                };
            return [(...e) => {
                let t = Date.now(),
                    o = t - s;
                o >= a ? i(e, t) : (r = e, n || (n = setTimeout(() => {
                    n = null, i(r)
                }, a - o)))
            }, () => r && i(r)]
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    gdj2s: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("../platform/index.js"),
            i = s.interopDefault(a),
            o = e("../utils.js"),
            l = s.interopDefault(o),
            c = e("./isURLSameOrigin.js"),
            d = s.interopDefault(c),
            u = e("./cookies.js"),
            f = s.interopDefault(u),
            h = e("../core/buildFullPath.js"),
            p = s.interopDefault(h),
            g = e("../core/mergeConfig.js"),
            m = s.interopDefault(g),
            y = e("../core/AxiosHeaders.js"),
            b = s.interopDefault(y),
            x = e("./buildURL.js"),
            v = s.interopDefault(x);
        r.default = e => {
            let t, r = (0, m.default)({}, e),
                {
                    data: n,
                    withXSRFToken: s,
                    xsrfHeaderName: a,
                    xsrfCookieName: o,
                    headers: c,
                    auth: u
                } = r;
            if (r.headers = c = b.default.from(c), r.url = (0, v.default)((0, p.default)(r.baseURL, r.url, r.allowAbsoluteUrls), e.params, e.paramsSerializer), u && c.set("Authorization", "Basic " + btoa((u.username || "") + ":" + (u.password ? unescape(encodeURIComponent(u.password)) : ""))), l.default.isFormData(n)) {
                if (i.default.hasStandardBrowserEnv || i.default.hasStandardBrowserWebWorkerEnv) c.setContentType(void 0);
                else if (!1 !== (t = c.getContentType())) {
                    let [e, ...r] = t ? t.split(";").map(e => e.trim()).filter(Boolean) : [];
                    c.setContentType([e || "multipart/form-data", ...r].join("; "))
                }
            }
            if (i.default.hasStandardBrowserEnv && (s && l.default.isFunction(s) && (s = s(r)), s || !1 !== s && (0, d.default)(r.url))) {
                let e = a && o && f.default.read(o);
                e && c.set(a, e)
            }
            return r
        }
    }, {
        "../platform/index.js": "fP1Ni",
        "../utils.js": "2ioTY",
        "./isURLSameOrigin.js": "33eDi",
        "./cookies.js": "lftHJ",
        "../core/buildFullPath.js": "48uot",
        "../core/mergeConfig.js": "j8Sbj",
        "../core/AxiosHeaders.js": "1qkRX",
        "./buildURL.js": "aGaJq",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "33eDi": [function(e, t, r, n) {
        let s, a;
        var i = e("@parcel/transformer-js/src/esmodule-helpers.js");
        i.defineInteropFlag(r);
        var o = e("../platform/index.js"),
            l = i.interopDefault(o);
        r.default = l.default.hasStandardBrowserEnv ? (s = new URL(l.default.origin), a = l.default.navigator && /(msie|trident)/i.test(l.default.navigator.userAgent), e => (e = new URL(e, l.default.origin), s.protocol === e.protocol && s.host === e.host && (a || s.port === e.port))) : () => !0
    }, {
        "../platform/index.js": "fP1Ni",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    lftHJ: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("./../utils.js"),
            i = s.interopDefault(a),
            o = e("../platform/index.js");
        r.default = s.interopDefault(o).default.hasStandardBrowserEnv ? {
            write(e, t, r, n, s, a) {
                let o = [e + "=" + encodeURIComponent(t)];
                i.default.isNumber(r) && o.push("expires=" + new Date(r).toGMTString()), i.default.isString(n) && o.push("path=" + n), i.default.isString(s) && o.push("domain=" + s), !0 === a && o.push("secure"), document.cookie = o.join("; ")
            },
            read(e) {
                let t = document.cookie.match(RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
                return t ? decodeURIComponent(t[3]) : null
            },
            remove(e) {
                this.write(e, "", Date.now() - 864e5)
            }
        } : {
            write() {},
            read: () => null,
            remove() {}
        }
    }, {
        "./../utils.js": "2ioTY",
        "../platform/index.js": "fP1Ni",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "48uot": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => c);
        "use strict";
        var a = e("../helpers/isAbsoluteURL.js"),
            i = s.interopDefault(a),
            o = e("../helpers/combineURLs.js"),
            l = s.interopDefault(o);

        function c(e, t, r) {
            let n = !(0, i.default)(t);
            return e && (n || !1 == r) ? (0, l.default)(e, t) : t
        }
    }, {
        "../helpers/isAbsoluteURL.js": "lW14e",
        "../helpers/combineURLs.js": "kZdZo",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    lW14e: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        "use strict";

        function a(e) {
            return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)
        }
        s.defineInteropFlag(r), s.export(r, "default", () => a)
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    kZdZo: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        "use strict";

        function a(e, t) {
            return t ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "") : e
        }
        s.defineInteropFlag(r), s.export(r, "default", () => a)
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    j8Sbj: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => d);
        "use strict";
        var a = e("../utils.js"),
            i = s.interopDefault(a),
            o = e("./AxiosHeaders.js"),
            l = s.interopDefault(o);
        let c = e => e instanceof l.default ? {
            ...e
        } : e;

        function d(e, t) {
            t = t || {};
            let r = {};

            function n(e, t, r, n) {
                return i.default.isPlainObject(e) && i.default.isPlainObject(t) ? i.default.merge.call({
                    caseless: n
                }, e, t) : i.default.isPlainObject(t) ? i.default.merge({}, t) : i.default.isArray(t) ? t.slice() : t
            }

            function s(e, t, r, s) {
                return i.default.isUndefined(t) ? i.default.isUndefined(e) ? void 0 : n(void 0, e, r, s) : n(e, t, r, s)
            }

            function a(e, t) {
                if (!i.default.isUndefined(t)) return n(void 0, t)
            }

            function o(e, t) {
                return i.default.isUndefined(t) ? i.default.isUndefined(e) ? void 0 : n(void 0, e) : n(void 0, t)
            }

            function l(r, s, a) {
                return a in t ? n(r, s) : a in e ? n(void 0, r) : void 0
            }
            let d = {
                url: a,
                method: a,
                data: a,
                baseURL: o,
                transformRequest: o,
                transformResponse: o,
                paramsSerializer: o,
                timeout: o,
                timeoutMessage: o,
                withCredentials: o,
                withXSRFToken: o,
                adapter: o,
                responseType: o,
                xsrfCookieName: o,
                xsrfHeaderName: o,
                onUploadProgress: o,
                onDownloadProgress: o,
                decompress: o,
                maxContentLength: o,
                maxBodyLength: o,
                beforeRedirect: o,
                transport: o,
                httpAgent: o,
                httpsAgent: o,
                cancelToken: o,
                socketPath: o,
                responseEncoding: o,
                validateStatus: l,
                headers: (e, t, r) => s(c(e), c(t), r, !0)
            };
            return i.default.forEach(Object.keys(Object.assign({}, e, t)), function(n) {
                let a = d[n] || s,
                    o = a(e[n], t[n], n);
                i.default.isUndefined(o) && a !== l || (r[n] = o)
            }), r
        }
    }, {
        "../utils.js": "2ioTY",
        "./AxiosHeaders.js": "1qkRX",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "29Teh": [function(e, t, r, n) {
        let s;
        var a, i = e("@parcel/transformer-js/src/esmodule-helpers.js");
        i.defineInteropFlag(r);
        var o = e("../platform/index.js"),
            l = i.interopDefault(o),
            c = e("../utils.js"),
            d = i.interopDefault(c),
            u = e("../core/AxiosError.js"),
            f = i.interopDefault(u),
            h = e("../helpers/composeSignals.js"),
            p = i.interopDefault(h),
            g = e("../helpers/trackStream.js"),
            m = e("../core/AxiosHeaders.js"),
            y = i.interopDefault(m),
            b = e("../helpers/progressEventReducer.js"),
            x = e("../helpers/resolveConfig.js"),
            v = i.interopDefault(x),
            w = e("../core/settle.js"),
            E = i.interopDefault(w);
        let A = "function" == typeof fetch && "function" == typeof Request && "function" == typeof Response,
            j = A && "function" == typeof ReadableStream,
            I = A && ("function" == typeof TextEncoder ? (s = new TextEncoder, e => s.encode(e)) : async e => new Uint8Array(await new Response(e).arrayBuffer())),
            S = (e, ...t) => {
                try {
                    return !!e(...t)
                } catch (e) {
                    return !1
                }
            },
            R = j && S(() => {
                let e = !1,
                    t = new Request(l.default.origin, {
                        body: new ReadableStream,
                        method: "POST",
                        get duplex() {
                            return e = !0, "half"
                        }
                    }).headers.has("Content-Type");
                return e && !t
            }),
            k = j && S(() => d.default.isReadableStream(new Response("").body)),
            _ = {
                stream: k && (e => e.body)
            };
        A && (a = new Response, ["text", "arrayBuffer", "blob", "formData", "stream"].forEach(e => {
            _[e] || (_[e] = d.default.isFunction(a[e]) ? t => t[e]() : (t, r) => {
                throw new(0, f.default)(`Response type '${e}' is not supported`, f.default.ERR_NOT_SUPPORT, r)
            })
        }));
        let T = async e => {
            if (null == e) return 0;
            if (d.default.isBlob(e)) return e.size;
            if (d.default.isSpecCompliantForm(e)) {
                let t = new Request(l.default.origin, {
                    method: "POST",
                    body: e
                });
                return (await t.arrayBuffer()).byteLength
            }
            return d.default.isArrayBufferView(e) || d.default.isArrayBuffer(e) ? e.byteLength : (d.default.isURLSearchParams(e) && (e += ""), d.default.isString(e)) ? (await I(e)).byteLength : void 0
        }, C = async (e, t) => {
            let r = d.default.toFiniteNumber(e.getContentLength());
            return null == r ? T(t) : r
        };
        r.default = A && (async e => {
            let t, r, {
                url: n,
                method: s,
                data: a,
                signal: i,
                cancelToken: o,
                timeout: l,
                onDownloadProgress: c,
                onUploadProgress: u,
                responseType: h,
                headers: m,
                withCredentials: x = "same-origin",
                fetchOptions: w
            } = (0, v.default)(e);
            h = h ? (h + "").toLowerCase() : "text";
            let A = (0, p.default)([i, o && o.toAbortSignal()], l),
                j = A && A.unsubscribe && (() => {
                    A.unsubscribe()
                });
            try {
                if (u && R && "get" !== s && "head" !== s && 0 !== (r = await C(m, a))) {
                    let e, t = new Request(n, {
                        method: "POST",
                        body: a,
                        duplex: "half"
                    });
                    if (d.default.isFormData(a) && (e = t.headers.get("content-type")) && m.setContentType(e), t.body) {
                        let [e, n] = (0, b.progressEventDecorator)(r, (0, b.progressEventReducer)((0, b.asyncDecorator)(u)));
                        a = (0, g.trackStream)(t.body, 65536, e, n)
                    }
                }
                d.default.isString(x) || (x = x ? "include" : "omit");
                let i = "credentials" in Request.prototype;
                t = new Request(n, {
                    ...w,
                    signal: A,
                    method: s.toUpperCase(),
                    headers: m.normalize().toJSON(),
                    body: a,
                    duplex: "half",
                    credentials: i ? x : void 0
                });
                let o = await fetch(t, w),
                    l = k && ("stream" === h || "response" === h);
                if (k && (c || l && j)) {
                    let e = {};
                    ["status", "statusText", "headers"].forEach(t => {
                        e[t] = o[t]
                    });
                    let t = d.default.toFiniteNumber(o.headers.get("content-length")),
                        [r, n] = c && (0, b.progressEventDecorator)(t, (0, b.progressEventReducer)((0, b.asyncDecorator)(c), !0)) || [];
                    o = new Response((0, g.trackStream)(o.body, 65536, r, () => {
                        n && n(), j && j()
                    }), e)
                }
                h = h || "text";
                let f = await _[d.default.findKey(_, h) || "text"](o, e);
                return !l && j && j(), await new Promise((r, n) => {
                    (0, E.default)(r, n, {
                        data: f,
                        headers: y.default.from(o.headers),
                        status: o.status,
                        statusText: o.statusText,
                        config: e,
                        request: t
                    })
                })
            } catch (r) {
                if (j && j(), r && "TypeError" === r.name && /Load failed|fetch/i.test(r.message)) throw Object.assign(new(0, f.default)("Network Error", f.default.ERR_NETWORK, e, t), {
                    cause: r.cause || r
                });
                throw f.default.from(r, r && r.code, e, t)
            }
        })
    }, {
        "../platform/index.js": "fP1Ni",
        "../utils.js": "2ioTY",
        "../core/AxiosError.js": "hjCVQ",
        "../helpers/composeSignals.js": "iHSrx",
        "../helpers/trackStream.js": "g4EAB",
        "../core/AxiosHeaders.js": "1qkRX",
        "../helpers/progressEventReducer.js": "7uRZA",
        "../helpers/resolveConfig.js": "gdj2s",
        "../core/settle.js": "dlf0W",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    iHSrx: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        var a = e("../cancel/CanceledError.js"),
            i = s.interopDefault(a),
            o = e("../core/AxiosError.js"),
            l = s.interopDefault(o),
            c = e("../utils.js"),
            d = s.interopDefault(c);
        r.default = (e, t) => {
            let {
                length: r
            } = e = e ? e.filter(Boolean) : [];
            if (t || r) {
                let r, n = new AbortController,
                    s = function(e) {
                        if (!r) {
                            r = !0, o();
                            let t = e instanceof Error ? e : this.reason;
                            n.abort(t instanceof l.default ? t : new(0, i.default)(t instanceof Error ? t.message : t))
                        }
                    },
                    a = t && setTimeout(() => {
                        a = null, s(new(0, l.default)(`timeout ${t} of ms exceeded`, l.default.ETIMEDOUT))
                    }, t),
                    o = () => {
                        e && (a && clearTimeout(a), a = null, e.forEach(e => {
                            e.unsubscribe ? e.unsubscribe(s) : e.removeEventListener("abort", s)
                        }), e = null)
                    };
                e.forEach(e => e.addEventListener("abort", s));
                let {
                    signal: c
                } = n;
                return c.unsubscribe = () => d.default.asap(o), c
            }
        }
    }, {
        "../cancel/CanceledError.js": "judoa",
        "../core/AxiosError.js": "hjCVQ",
        "../utils.js": "2ioTY",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    g4EAB: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "streamChunk", () => a), s.export(r, "readBytes", () => i), s.export(r, "trackStream", () => l);
        let a = function*(e, t) {
                let r, n = e.byteLength;
                if (!t || n < t) return void(yield e);
                let s = 0;
                for (; s < n;) r = s + t, yield e.slice(s, r), s = r
            },
            i = async function*(e, t) {
                for await (let r of o(e)) yield* a(r, t)
            }, o = async function*(e) {
                if (e[Symbol.asyncIterator]) return void(yield* e);
                let t = e.getReader();
                try {
                    for (;;) {
                        let {
                            done: e,
                            value: r
                        } = await t.read();
                        if (e) break;
                        yield r
                    }
                } finally {
                    await t.cancel()
                }
            }, l = (e, t, r, n) => {
                let s, a = i(e, t),
                    o = 0,
                    l = e => {
                        !s && (s = !0, n && n(e))
                    };
                return new ReadableStream({
                    async pull(e) {
                        try {
                            let {
                                done: t,
                                value: n
                            } = await a.next();
                            if (t) {
                                l(), e.close();
                                return
                            }
                            let s = n.byteLength;
                            if (r) {
                                let e = o += s;
                                r(e)
                            }
                            e.enqueue(new Uint8Array(n))
                        } catch (e) {
                            throw l(e), e
                        }
                    },
                    cancel: e => (l(e), a.return())
                }, {
                    highWaterMark: 2
                })
            }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "8PNBN": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        "use strict";
        s.defineInteropFlag(r);
        var a = e("../env/data.js"),
            i = e("../core/AxiosError.js"),
            o = s.interopDefault(i);
        let l = {};
        ["object", "boolean", "number", "function", "string", "symbol"].forEach((e, t) => {
            l[e] = function(r) {
                return typeof r === e || "a" + (t < 1 ? "n " : " ") + e
            }
        });
        let c = {};
        l.transitional = function(e, t, r) {
            function n(e, t) {
                return "[Axios v" + a.VERSION + "] Transitional option '" + e + "'" + t + (r ? ". " + r : "")
            }
            return (r, s, a) => {
                if (!1 === e) throw new(0, o.default)(n(s, " has been removed" + (t ? " in " + t : "")), o.default.ERR_DEPRECATED);
                return t && !c[s] && (c[s] = !0, console.warn(n(s, " has been deprecated since v" + t + " and will be removed in the near future"))), !e || e(r, s, a)
            }
        }, l.spelling = function(e) {
            return (t, r) => (console.warn(`${r} is likely a misspelling of ${e}`), !0)
        }, r.default = {
            assertOptions: function(e, t, r) {
                if ("object" != typeof e) throw new(0, o.default)("options must be an object", o.default.ERR_BAD_OPTION_VALUE);
                let n = Object.keys(e),
                    s = n.length;
                for (; s-- > 0;) {
                    let a = n[s],
                        i = t[a];
                    if (i) {
                        let t = e[a],
                            r = void 0 === t || i(t, a, e);
                        if (!0 !== r) throw new(0, o.default)("option " + a + " must be " + r, o.default.ERR_BAD_OPTION_VALUE);
                        continue
                    }
                    if (!0 !== r) throw new(0, o.default)("Unknown option " + a, o.default.ERR_BAD_OPTION)
                }
            },
            validators: l
        }
    }, {
        "../env/data.js": "9ssnR",
        "../core/AxiosError.js": "hjCVQ",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "9ssnR": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "VERSION", () => a);
        let a = "1.10.0"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "2aN3e": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r);
        "use strict";
        var a = e("./CanceledError.js"),
            i = s.interopDefault(a);
        class o {
            constructor(e) {
                let t;
                if ("function" != typeof e) throw TypeError("executor must be a function.");
                this.promise = new Promise(function(e) {
                    t = e
                });
                let r = this;
                this.promise.then(e => {
                    if (!r._listeners) return;
                    let t = r._listeners.length;
                    for (; t-- > 0;) r._listeners[t](e);
                    r._listeners = null
                }), this.promise.then = e => {
                    let t, n = new Promise(e => {
                        r.subscribe(e), t = e
                    }).then(e);
                    return n.cancel = function() {
                        r.unsubscribe(t)
                    }, n
                }, e(function(e, n, s) {
                    r.reason || (r.reason = new(0, i.default)(e, n, s), t(r.reason))
                })
            }
            throwIfRequested() {
                if (this.reason) throw this.reason
            }
            subscribe(e) {
                if (this.reason) return void e(this.reason);
                this._listeners ? this._listeners.push(e) : this._listeners = [e]
            }
            unsubscribe(e) {
                if (!this._listeners) return;
                let t = this._listeners.indexOf(e); - 1 !== t && this._listeners.splice(t, 1)
            }
            toAbortSignal() {
                let e = new AbortController,
                    t = t => {
                        e.abort(t)
                    };
                return this.subscribe(t), e.signal.unsubscribe = () => this.unsubscribe(t), e.signal
            }
            static source() {
                let e;
                return {
                    token: new o(function(t) {
                        e = t
                    }),
                    cancel: e
                }
            }
        }
        r.default = o
    }, {
        "./CanceledError.js": "judoa",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    gQxw3: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        "use strict";

        function a(e) {
            return function(t) {
                return e.apply(null, t)
            }
        }
        s.defineInteropFlag(r), s.export(r, "default", () => a)
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    lE0ea: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => o);
        "use strict";
        var a = e("./../utils.js"),
            i = s.interopDefault(a);

        function o(e) {
            return i.default.isObject(e) && !0 === e.isAxiosError
        }
    }, {
        "./../utils.js": "2ioTY",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    agO1h: [function(e, t, r, n) {
        e("@parcel/transformer-js/src/esmodule-helpers.js").defineInteropFlag(r);
        let s = {
            Continue: 100,
            SwitchingProtocols: 101,
            Processing: 102,
            EarlyHints: 103,
            Ok: 200,
            Created: 201,
            Accepted: 202,
            NonAuthoritativeInformation: 203,
            NoContent: 204,
            ResetContent: 205,
            PartialContent: 206,
            MultiStatus: 207,
            AlreadyReported: 208,
            ImUsed: 226,
            MultipleChoices: 300,
            MovedPermanently: 301,
            Found: 302,
            SeeOther: 303,
            NotModified: 304,
            UseProxy: 305,
            Unused: 306,
            TemporaryRedirect: 307,
            PermanentRedirect: 308,
            BadRequest: 400,
            Unauthorized: 401,
            PaymentRequired: 402,
            Forbidden: 403,
            NotFound: 404,
            MethodNotAllowed: 405,
            NotAcceptable: 406,
            ProxyAuthenticationRequired: 407,
            RequestTimeout: 408,
            Conflict: 409,
            Gone: 410,
            LengthRequired: 411,
            PreconditionFailed: 412,
            PayloadTooLarge: 413,
            UriTooLong: 414,
            UnsupportedMediaType: 415,
            RangeNotSatisfiable: 416,
            ExpectationFailed: 417,
            ImATeapot: 418,
            MisdirectedRequest: 421,
            UnprocessableEntity: 422,
            Locked: 423,
            FailedDependency: 424,
            TooEarly: 425,
            UpgradeRequired: 426,
            PreconditionRequired: 428,
            TooManyRequests: 429,
            RequestHeaderFieldsTooLarge: 431,
            UnavailableForLegalReasons: 451,
            InternalServerError: 500,
            NotImplemented: 501,
            BadGateway: 502,
            ServiceUnavailable: 503,
            GatewayTimeout: 504,
            HttpVersionNotSupported: 505,
            VariantAlsoNegotiates: 506,
            InsufficientStorage: 507,
            LoopDetected: 508,
            NotExtended: 510,
            NetworkAuthenticationRequired: 511
        };
        Object.entries(s).forEach(([e, t]) => {
            s[t] = e
        }), r.default = s
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    fUPIN: [function(e, t, r, n) {
        var s, a, i, o, l, c, d, u, f, h, p, g, m, y, b, x, v, w, E, A, j, I, S, R, k, _ = e("@parcel/transformer-js/src/esmodule-helpers.js");
        _.defineInteropFlag(r), _.export(r, "AccountType", () => x), _.export(r, "AccountTypeEnum", () => R), _.export(r, "AuthActionRequiredActions", () => I), _.export(r, "AuthType", () => v), _.export(r, "BasicAuthProvider", () => A), _.export(r, "ChainTypeEnum", () => k), _.export(r, "CodeChallengeMethodEnum", () => S), _.export(r, "EmbeddedState", () => m), _.export(r, "OAuthProvider", () => j), _.export(r, "OpenfortEvents", () => y), _.export(r, "RecoveryMethod", () => b), _.export(r, "ThirdPartyOAuthProvider", () => E), _.export(r, "TokenType", () => w), (s = m || (m = {}))[s.NONE = 0] = "NONE", s[s.UNAUTHENTICATED = 1] = "UNAUTHENTICATED", s[s.EMBEDDED_SIGNER_NOT_CONFIGURED = 2] = "EMBEDDED_SIGNER_NOT_CONFIGURED", s[s.CREATING_ACCOUNT = 3] = "CREATING_ACCOUNT", s[s.READY = 4] = "READY", (a = y || (y = {})).LOGGED_OUT = "loggedOut", a.SWITCH_ACCOUNT = "switchAccount", a.TOKEN_REFRESHED = "tokenRefreshed", (i = b || (b = {})).PASSWORD = "password", i.AUTOMATIC = "automatic", (o = x || (x = {})).UPGRADEABLE_V4 = "Upgradeable_v04", o.MANAGED_V4 = "Managed_v04", o.ERC6551_V4 = "ERC6551_v04", o.ERC6551_V5 = "ERC6551_v05", o.RECOVERABLE_V4 = "Recoverable_v04", o.MANAGED_V5 = "Managed_v05", o.UPGRADEABLE_V5 = "Upgradeable_v05", o.UPGRADEABLE_V6 = "Upgradeable_v06", o.ZKSYNC_UPGRADEABLE_V1 = "zksync_upgradeable_v1", o.ZKSYNC_UPGRADEABLE_V2 = "zksync_upgradeable_v2", (l = v || (v = {})).OPENFORT = "openfort", l.THIRD_PARTY = "thirdParty", (c = w || (w = {})).ID_TOKEN = "idToken", c.CUSTOM_TOKEN = "customToken", (d = E || (E = {})).ACCELBYTE = "accelbyte", d.FIREBASE = "firebase", d.LOOTLOCKER = "lootlocker", d.PLAYFAB = "playfab", d.SUPABASE = "supabase", d.CUSTOM = "custom", d.OIDC = "oidc", (u = A || (A = {})).EMAIL = "email", u.WALLET = "wallet", (f = j || (j = {})).GOOGLE = "google", f.TWITTER = "twitter", f.APPLE = "apple", f.FACEBOOK = "facebook", f.DISCORD = "discord", f.EPIC_GAMES = "epic_games", f.LINE = "line", (I || (I = {})).ACTION_VERIFY_EMAIL = "verify_email", (h = S || (S = {})).PLAIN = "plain", h.S256 = "S256", (p = R || (R = {})).EOA = "Externally Owned Account", p.SMART_ACCOUNT = "Smart Account", (g = k || (k = {})).EVM = "EVM", g.SVM = "SVM"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    iBeSb: [function(e, t, r, n) {
        var s, a, i, o = e("@parcel/transformer-js/src/esmodule-helpers.js");
        o.defineInteropFlag(r), o.export(r, "Event", () => a), o.export(r, "ExportPrivateKeyRequest", () => g), o.export(r, "GetCurrentDeviceRequest", () => f), o.export(r, "INCORRECT_USER_ENTROPY_ERROR", () => u), o.export(r, "MISSING_PROJECT_ENTROPY_ERROR", () => d), o.export(r, "MISSING_USER_ENTROPY_ERROR", () => c), o.export(r, "NOT_CONFIGURED_ERROR", () => l), o.export(r, "SetRecoveryMethodRequest", () => m), o.export(r, "ShieldAuthType", () => i), o.export(r, "SignRequest", () => h), o.export(r, "SwitchChainRequest", () => p), o.export(r, "UpdateAuthenticationRequest", () => b), o.export(r, "isErrorResponse", () => y), (s = a || (a = {})).LOADED = "loaded", s.CONFIGURE = "configure", s.CONFIGURED = "configured", s.RECOVER = "recover", s.RECOVERED = "recovered", s.CREATE = "create", s.CREATED = "created", s.UPDATE_AUTHENTICATION = "update-authentication", s.AUTHENTICATION_UPDATED = "authentication-updated", s.SIGN = "sign", s.SET_RECOVERY_METHOD = "set-recovery-method", s.SWITCH_CHAIN = "switch-chain", s.CHAIN_SWITCHED = "chain-switched", s.EXPORT = "export", s.SIGNED = "signed", s.LOGOUT = "logout", s.LOGGED_OUT = "logged-out", s.GET_CURRENT_DEVICE = "get-current-device", s.CURRENT_DEVICE = "current-device", s.PING = "ping", s.PONG = "pong";
        let l = "not-configured-error",
            c = "missing-user-entropy-error",
            d = "missing-project-entropy-error",
            u = "incorrect-user-entropy-error";
        class f {
            uuid;
            action = a.GET_CURRENT_DEVICE;
            playerID;
            constructor(e, t) {
                this.uuid = e, this.playerID = t
            }
        }
        class h {
            uuid;
            action = a.SIGN;
            message;
            requireArrayify;
            requireHash;
            requestConfiguration;
            constructor(e, t, r, n, s) {
                this.uuid = e, this.message = t, this.requireArrayify = r, this.requireHash = n, this.requestConfiguration = s
            }
        }
        class p {
            uuid;
            action = a.SWITCH_CHAIN;
            chainId;
            requestConfiguration;
            constructor(e, t, r) {
                this.uuid = e, this.chainId = t, this.requestConfiguration = r
            }
        }
        class g {
            uuid;
            action = a.EXPORT;
            requestConfiguration;
            constructor(e, t) {
                this.uuid = e, this.requestConfiguration = t
            }
        }
        class m {
            uuid;
            action = a.SET_RECOVERY_METHOD;
            recoveryMethod;
            recoveryPassword;
            encryptionSession;
            requestConfiguration;
            constructor(e, t, r, n, s) {
                this.uuid = e, this.recoveryMethod = t, this.recoveryPassword = r, this.encryptionSession = n, this.requestConfiguration = s
            }
        }

        function y(e) {
            return "error" in e
        }
        class b {
            uuid;
            action = a.UPDATE_AUTHENTICATION;
            accessToken;
            recovery;
            constructor(e, t, r) {
                this.uuid = e, this.accessToken = t, this.recovery = r
            }
        }(i || (i = {})).OPENFORT = "openfort"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    kcx6I: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "IframeManager", () => v), s.export(r, "MissingProjectEntropyError", () => y), s.export(r, "MissingRecoveryPasswordError", () => m), s.export(r, "NotConfiguredError", () => x), s.export(r, "WrongRecoveryPasswordError", () => b);
        var a = e("../core/configuration/account.js"),
            i = e("./messaging/browserMessenger/connect.js"),
            o = s.interopDefault(i);
        e("./messaging/browserMessenger/backwardCompatibility.js");
        var l = e("../storage/istorage.js"),
            c = e("../core/errors/openfortError.js"),
            d = e("../utils/debug.js"),
            u = e("../utils/crypto.js"),
            f = e("../core/configuration/authentication.js"),
            h = e("./messaging/ReactNativeMessenger.js"),
            p = e("./types.js"),
            g = e("../core/errors/sentry.js");
        class m extends Error {
            constructor() {
                super("This embedded signer requires a password to be recovered")
            }
        }
        class y extends Error {
            constructor() {
                super("MissingProjectEntropyError")
            }
        }
        class b extends Error {
            constructor() {
                super("Wrong recovery password for this embedded signer")
            }
        }
        class x extends Error {
            constructor() {
                super("Not configured")
            }
        }
        class v {
            messenger;
            connection;
            remote;
            storage;
            sdkConfiguration;
            isInitialized = !1;
            initializationPromise = null;
            constructor(e, t, r) {
                if (!e) throw new(0, c.OpenfortError)("Configuration is required for IframeManager", c.OpenfortErrorType.INVALID_CONFIGURATION);
                if (!t) throw new(0, c.OpenfortError)("Storage is required for IframeManager", c.OpenfortErrorType.INVALID_CONFIGURATION);
                if (!r) throw new(0, c.OpenfortError)("Messenger is required for IframeManager", c.OpenfortErrorType.INVALID_CONFIGURATION);
                this.sdkConfiguration = e, this.storage = t, this.messenger = r
            }
            async initialize() {
                if (!this.isInitialized)
                    if (this.initializationPromise) await this.initializationPromise;
                    else {
                        this.initializationPromise = this.doInitialize();
                        try {
                            await this.initializationPromise, this.isInitialized = !0
                        } catch (e) {
                            throw this.initializationPromise = null, e
                        }
                    }
            }
            async doInitialize() {
                (0, d.debugLog)("Initializing IframeManager connection..."), this.messenger.initialize({
                    validateReceivedMessage: e => !(!e || "object" != typeof e),
                    log: d.debugLog
                }), this.connection = (0, o.default)({
                    messenger: this.messenger,
                    timeout: 1e4,
                    log: d.debugLog
                });
                try {
                    this.remote = await this.connection.promise, (0, d.debugLog)("IframeManager connection established")
                } catch (e) {
                    throw g.sentry.captureException(e), this.destroy(), (0, d.debugLog)("Failed to establish connection:", e), new(0, c.OpenfortError)(`Failed to establish iFrame connection: ${e.cause||e.message}`, c.OpenfortErrorType.INTERNAL_ERROR, e)
                }
            }
            async ensureConnection() {
                if (this.isInitialized && this.remote || await this.initialize(), !this.remote) throw new(0, c.OpenfortError)("Failed to establish connection", c.OpenfortErrorType.INTERNAL_ERROR);
                return this.remote
            }
            handleError(e) {
                if ((0, p.isErrorResponse)(e)) {
                    if (e.error === p.NOT_CONFIGURED_ERROR) throw new x;
                    if (e.error === p.MISSING_USER_ENTROPY_ERROR) throw this.storage.remove(l.StorageKeys.ACCOUNT), new m;
                    if (e.error === p.MISSING_PROJECT_ENTROPY_ERROR) throw this.storage.remove(l.StorageKeys.ACCOUNT), new y;
                    if (e.error === p.INCORRECT_USER_ENTROPY_ERROR) throw new b;
                    throw new(0, c.OpenfortError)(`Unknown error: ${e.error}`, c.OpenfortErrorType.INTERNAL_ERROR)
                }
                throw e
            }
            async buildRequestConfiguration() {
                let e = await f.Authentication.fromStorage(this.storage);
                if (!e) throw new(0, c.OpenfortError)("Must be authenticated to create a signer", c.OpenfortErrorType.NOT_LOGGED_IN_ERROR);
                return {
                    thirdPartyProvider: e.thirdPartyProvider,
                    thirdPartyTokenType: e.thirdPartyTokenType,
                    token: e.token,
                    publishableKey: this.sdkConfiguration.baseConfiguration.publishableKey,
                    openfortURL: this.sdkConfiguration.backendUrl
                }
            }
            async buildIFrameRequestConfiguration() {
                let e = await f.Authentication.fromStorage(this.storage);
                if (!e) throw new(0, c.OpenfortError)("Must be authenticated to create a signer", c.OpenfortErrorType.NOT_LOGGED_IN_ERROR);
                let t = {
                    auth: p.ShieldAuthType.OPENFORT,
                    authProvider: e.thirdPartyProvider,
                    token: e.token,
                    tokenType: e.thirdPartyTokenType
                };
                return {
                    thirdPartyTokenType: e.thirdPartyTokenType ?? null,
                    thirdPartyProvider: e.thirdPartyProvider ?? null,
                    accessToken: e.token,
                    playerID: e.player,
                    recovery: t,
                    chainId: null,
                    password: null
                }
            }
            async configure(e) {
                if (!this.sdkConfiguration.shieldConfiguration) throw new(0, c.OpenfortError)("shieldConfiguration is required", c.OpenfortErrorType.INVALID_CONFIGURATION);
                let t = await a.Account.fromStorage(this.storage),
                    r = await this.ensureConnection(),
                    n = await this.buildIFrameRequestConfiguration();
                n.chainId = e?.chainId ?? t?.chainId ?? null, n.password = e?.entropy?.recoveryPassword ?? null, n.recovery = {
                    ...n.recovery,
                    encryptionSession: e?.entropy?.encryptionSession
                };
                let s = {
                        uuid: (0, u.randomUUID)(),
                        action: p.Event.CONFIGURE,
                        chainId: n.chainId,
                        recovery: n.recovery,
                        publishableKey: this.sdkConfiguration.baseConfiguration.publishableKey,
                        shieldAPIKey: this.sdkConfiguration.shieldConfiguration?.shieldPublishableKey || "",
                        accessToken: n.accessToken,
                        playerID: n.playerID,
                        thirdPartyProvider: n.thirdPartyProvider,
                        thirdPartyTokenType: n.thirdPartyTokenType,
                        encryptionKey: n.password,
                        encryptionPart: this.sdkConfiguration?.shieldConfiguration?.shieldEncryptionKey ?? null,
                        encryptionSession: n.recovery?.encryptionSession ?? null,
                        openfortURL: this.sdkConfiguration.backendUrl,
                        shieldURL: this.sdkConfiguration.shieldUrl
                    },
                    i = await r.configure(s);
                return (0, p.isErrorResponse)(i) && this.handleError(i), "undefined" != typeof sessionStorage && sessionStorage.setItem("iframe-version", i.version ?? "undefined"), i
            }
            async create(e) {
                if (!this.sdkConfiguration.shieldConfiguration) throw Error("shieldConfiguration is required");
                let t = await this.ensureConnection(),
                    r = await this.buildIFrameRequestConfiguration();
                r.chainId = e.chainId, r.password = e?.entropy?.recoveryPassword ?? null, r.recovery = {
                    ...r.recovery,
                    encryptionSession: e?.entropy?.encryptionSession
                };
                let n = {
                        uuid: (0, u.randomUUID)(),
                        action: p.Event.CREATE,
                        recovery: r.recovery,
                        publishableKey: this.sdkConfiguration.baseConfiguration.publishableKey,
                        shieldAPIKey: this.sdkConfiguration.shieldConfiguration?.shieldPublishableKey || "",
                        accessToken: r.accessToken,
                        playerID: r.playerID,
                        thirdPartyProvider: r.thirdPartyProvider,
                        thirdPartyTokenType: r.thirdPartyTokenType,
                        encryptionKey: r.password,
                        encryptionPart: this.sdkConfiguration?.shieldConfiguration?.shieldEncryptionKey ?? null,
                        encryptionSession: r.recovery?.encryptionSession ?? null,
                        openfortURL: this.sdkConfiguration.backendUrl,
                        shieldURL: this.sdkConfiguration.shieldUrl,
                        chainId: e.chainId,
                        accountType: e.accountType,
                        chainType: e.chainType
                    },
                    s = await t.create(n);
                return (0, p.isErrorResponse)(s) && this.handleError(s), "undefined" != typeof sessionStorage && sessionStorage.setItem("iframe-version", s.version ?? "undefined"), s
            }
            async recover(e) {
                if (!this.sdkConfiguration.shieldConfiguration) throw Error("shieldConfiguration is required");
                let t = await a.Account.fromStorage(this.storage),
                    r = await this.ensureConnection(),
                    n = await this.buildIFrameRequestConfiguration();
                n.chainId = t?.chainId ?? null, n.password = e?.entropy?.recoveryPassword ?? null, n.recovery = {
                    ...n.recovery,
                    encryptionSession: e?.entropy?.encryptionSession
                };
                let s = {
                        uuid: (0, u.randomUUID)(),
                        action: p.Event.RECOVER,
                        recovery: n.recovery,
                        publishableKey: this.sdkConfiguration.baseConfiguration.publishableKey,
                        shieldAPIKey: this.sdkConfiguration.shieldConfiguration?.shieldPublishableKey || "",
                        accessToken: n.accessToken,
                        playerID: n.playerID,
                        thirdPartyProvider: n.thirdPartyProvider,
                        thirdPartyTokenType: n.thirdPartyTokenType,
                        encryptionKey: n.password,
                        encryptionPart: this.sdkConfiguration?.shieldConfiguration?.shieldEncryptionKey ?? null,
                        encryptionSession: n.recovery?.encryptionSession ?? null,
                        openfortURL: this.sdkConfiguration.backendUrl,
                        shieldURL: this.sdkConfiguration.shieldUrl,
                        account: e.account
                    },
                    i = await r.recover(s);
                return (0, p.isErrorResponse)(i) && this.handleError(i), "undefined" != typeof sessionStorage && sessionStorage.setItem("iframe-version", i.version ?? "undefined"), i
            }
            async sign(e, t, r) {
                (0, d.debugLog)("[iframe] ensureConnection");
                let n = await this.ensureConnection(),
                    s = new(0, p.SignRequest)((0, u.randomUUID)(), e, t, r, await this.buildRequestConfiguration());
                (0, d.debugLog)("[iframe] done ensureConnection");
                try {
                    let e = await n.sign(s);
                    return (0, d.debugLog)("[iframe] response", e), (0, p.isErrorResponse)(e) && this.handleError(e), "undefined" != typeof sessionStorage && sessionStorage.setItem("iframe-version", e.version ?? "undefined"), e.signature
                } catch (n) {
                    if (n instanceof x) return await this.configure(), this.sign(e, t, r);
                    throw n
                }
            }
            async switchChain(e) {
                let t = await this.ensureConnection(),
                    r = new(0, p.SwitchChainRequest)((0, u.randomUUID)(), e, await this.buildRequestConfiguration());
                try {
                    let e = await t.switchChain(r);
                    return (0, p.isErrorResponse)(e) && this.handleError(e), e
                } catch (t) {
                    if (t instanceof x) return await this.configure(), this.switchChain(e);
                    throw t
                }
            }
            async export () {
                let e = await this.ensureConnection(),
                    t = new(0, p.ExportPrivateKeyRequest)((0, u.randomUUID)(), await this.buildRequestConfiguration());
                try {
                    let r = await e.export(t);
                    return (0, p.isErrorResponse)(r) && this.handleError(r), "undefined" != typeof sessionStorage && sessionStorage.setItem("iframe-version", r.version ?? "undefined"), r.key
                } catch (e) {
                    if (e instanceof x) return await this.configure(), this.export();
                    throw e
                }
            }
            async setEmbeddedRecovery(e, t, r) {
                let n = await this.ensureConnection(),
                    s = new(0, p.SetRecoveryMethodRequest)((0, u.randomUUID)(), e, t, r, await this.buildRequestConfiguration());
                try {
                    let e = await n.setRecoveryMethod(s);
                    (0, p.isErrorResponse)(e) && this.handleError(e), "undefined" != typeof sessionStorage && sessionStorage.setItem("iframe-version", e.version ?? "undefined")
                } catch (n) {
                    if (n instanceof x) return await this.configure(), this.setEmbeddedRecovery(e, t, r);
                    throw n
                }
            }
            async getCurrentDevice(e) {
                let t = await this.ensureConnection(),
                    r = new(0, p.GetCurrentDeviceRequest)((0, u.randomUUID)(), e);
                try {
                    let e = await t.getCurrentDevice(r);
                    return (0, p.isErrorResponse)(e) && this.handleError(e), "undefined" != typeof sessionStorage && sessionStorage.setItem("iframe-version", e.version ?? "undefined"), e
                } catch (e) {
                    if (e instanceof x) return null;
                    throw e
                }
            }
            async updateAuthentication() {
                if (!this.isLoaded() || !this.remote) return void(0, d.debugLog)("IframeManager not loaded, skipping authentication update");
                let e = await f.Authentication.fromStorage(this.storage);
                if (!e) return void(0, d.debugLog)("No authentication found, skipping update");
                let t = new(0, p.UpdateAuthenticationRequest)((0, u.randomUUID)(), e.token);
                try {
                    (0, d.debugLog)("Updating authentication in iframe with token:", e.token);
                    let r = await this.remote.updateAuthentication(t);
                    (0, p.isErrorResponse)(r) && this.handleError(r)
                } catch (e) {
                    if (e instanceof x) return await this.configure(), void await this.updateAuthentication();
                    throw e
                }
            }
            async disconnect() {
                let e = await this.ensureConnection(),
                    t = {
                        uuid: (0, u.randomUUID)()
                    };
                await e.logout(t)
            }
            async onMessage(e) {
                (0, d.debugLog)("[HANDSHAKE DEBUG] IframeManager.onMessage called with:", e), this.messenger instanceof h.ReactNativeMessenger ? (this.isInitialized || this.connection ? (0, d.debugLog)(`[HANDSHAKE DEBUG] Connection already initialized (isInitialized: ${this.isInitialized}, hasConnection: ${!!this.connection})`) : ((0, d.debugLog)("[HANDSHAKE DEBUG] First message received, initializing connection..."), this.initialize().catch(e => {
                    (0, d.debugLog)("[HANDSHAKE DEBUG] Failed to initialize connection:", e)
                })), (0, d.debugLog)("[HANDSHAKE DEBUG] Passing message to ReactNativeMessenger"), this.messenger.handleMessage(e)) : (0, d.debugLog)("[HANDSHAKE DEBUG] Not a ReactNativeMessenger, ignoring message")
            }
            isLoaded() {
                return this.isInitialized && void 0 !== this.remote
            }
            destroy() {
                this.connection && this.connection.destroy(), this.messenger.destroy(), this.remote = void 0, this.isInitialized = !1, this.connection = void 0, this.initializationPromise = null
            }
        }
    }, {
        "../core/configuration/account.js": "f6fHD",
        "./messaging/browserMessenger/connect.js": "7f1ki",
        "./messaging/browserMessenger/backwardCompatibility.js": "hsQQI",
        "../storage/istorage.js": "8EpXG",
        "../core/errors/openfortError.js": "3xESR",
        "../utils/debug.js": "8822a",
        "../utils/crypto.js": "3dq9D",
        "../core/configuration/authentication.js": "1Nfd7",
        "./messaging/ReactNativeMessenger.js": "19aZg",
        "./types.js": "iBeSb",
        "../core/errors/sentry.js": "913SB",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    f6fHD: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "Account", () => i);
        var a = e("../../storage/istorage.js");
        class i {
            constructor(e) {
                this.user = e.user, this.id = e.id, this.chainType = e.chainType, this.address = e.address, this.accountType = e.accountType, this.chainId = e.chainId, this.createdAt = e.createdAt, this.implementationType = e.implementationType, this.factoryAddress = e.factoryAddress, this.salt = e.salt, this.ownerAddress = e.ownerAddress, this.type = e.type
            }
            user;
            id;
            chainType;
            address;
            accountType;
            chainId;
            ownerAddress;
            factoryAddress;
            salt;
            createdAt;
            implementationType;
            type;
            save(e) {
                e.save(a.StorageKeys.ACCOUNT, JSON.stringify({
                    user: this.user,
                    id: this.id,
                    chainType: this.chainType,
                    address: this.address,
                    accountType: this.accountType,
                    chainId: this.chainId,
                    ownerAddress: this.ownerAddress,
                    createdAt: this.createdAt,
                    implementationType: this.implementationType,
                    factoryAddress: this.factoryAddress,
                    salt: this.salt
                }))
            }
            static async fromStorage(e) {
                let t = await e.get(a.StorageKeys.ACCOUNT);
                if (!t) return null;
                try {
                    let e = JSON.parse(t);
                    return new i(e)
                } catch {
                    return null
                }
            }
        }
    }, {
        "../../storage/istorage.js": "8EpXG",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "8EpXG": [function(e, t, r, n) {
        var s, a, i = e("@parcel/transformer-js/src/esmodule-helpers.js");
        i.defineInteropFlag(r), i.export(r, "StorageKeys", () => a), (s = a || (a = {})).AUTHENTICATION = "openfort.authentication", s.CONFIGURATION = "openfort.configuration", s.ACCOUNT = "openfort.account", s.TEST = "openfort.test", s.SESSION = "openfort.session", s.PKCE_STATE = "openfort.pkce_state", s.PKCE_VERIFIER = "openfort.pkce_verifier"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "7f1ki": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => g);
        var a = e("./PenpalError.js"),
            i = s.interopDefault(a),
            o = e("./shakeHands.js"),
            l = s.interopDefault(o),
            c = e("./guards.js"),
            d = e("./once.js"),
            u = s.interopDefault(d),
            f = e("./namespace.js"),
            h = s.interopDefault(f);
        let p = new WeakSet,
            g = ({
                messenger: e,
                methods: t = {},
                timeout: r,
                channel: n,
                log: s
            }) => {
                if (!e) throw new(0, i.default)("INVALID_ARGUMENT", "messenger must be defined");
                if (p.has(e)) throw new(0, i.default)("INVALID_ARGUMENT", "A messenger can only be used for a single connection");
                p.add(e);
                let a = [e.destroy],
                    o = (0, u.default)(t => {
                        if (t) {
                            let t = {
                                namespace: h.default,
                                channel: n,
                                type: "DESTROY"
                            };
                            try {
                                e.sendMessage(t)
                            } catch (e) {}
                        }
                        for (let e of a) e();
                        s?.("Connection destroyed")
                    }),
                    d = e => (0, c.isMessage)(e) && e.channel === n;
                return {
                    promise: (async () => {
                        try {
                            e.initialize({
                                log: s,
                                validateReceivedMessage: d
                            }), e.addMessageHandler(e => {
                                (0, c.isDestroyMessage)(e) && o(!1)
                            });
                            let {
                                remoteProxy: i,
                                destroy: u
                            } = await (0, l.default)({
                                messenger: e,
                                methods: t,
                                timeout: r,
                                channel: n,
                                log: s
                            });
                            return a.push(u), i
                        } catch (e) {
                            throw o(!0), e
                        }
                    })(),
                    destroy: () => {
                        o(!0)
                    }
                }
            }
    }, {
        "./PenpalError.js": "dwP65",
        "./shakeHands.js": "zrweY",
        "./guards.js": "6PYiY",
        "./once.js": "a7jQh",
        "./namespace.js": "sVrrw",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    dwP65: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => a);
        class a extends Error {
            code;
            constructor(e, t) {
                super(t), this.name = "PenpalError", this.code = e
            }
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    zrweY: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => x);
        var a = e("../../../utils/crypto.js"),
            i = e("./PenpalError.js"),
            o = s.interopDefault(i),
            l = e("./connectCallHandler.js"),
            c = s.interopDefault(l),
            d = e("./connectRemoteProxy.js"),
            u = s.interopDefault(d),
            f = e("./guards.js"),
            h = e("./getPromiseWithResolvers.js"),
            p = s.interopDefault(h),
            g = e("./methodSerialization.js"),
            m = e("./backwardCompatibility.js"),
            y = e("./namespace.js"),
            b = s.interopDefault(y);
        let x = ({
            messenger: e,
            methods: t,
            timeout: r,
            channel: n,
            log: s
        }) => {
            let i, l = (0, a.randomUUID)(),
                d = [],
                h = !1,
                y = (0, g.extractMethodPathsFromMethods)(t),
                {
                    promise: x,
                    resolve: v,
                    reject: w
                } = (0, p.default)(),
                E = void 0 !== r ? setTimeout(() => {
                    w(new(0, o.default)("CONNECTION_TIMEOUT", `Connection timed out after ${r}ms`))
                }, r) : void 0,
                A = () => {
                    for (let e of d) e()
                },
                j = () => {
                    if (h) return;
                    d.push((0, c.default)(e, t, n, s));
                    let {
                        remoteProxy: r,
                        destroy: a
                    } = (0, u.default)(e, n, s);
                    d.push(a), clearTimeout(E), h = !0, v({
                        remoteProxy: r,
                        destroy: A
                    })
                },
                I = () => {
                    let t = {
                        namespace: b.default,
                        type: "SYN",
                        channel: n,
                        participantId: l
                    };
                    s?.("Sending handshake SYN", t);
                    try {
                        e.sendMessage(t)
                    } catch (e) {
                        w(new(0, o.default)("TRANSMISSION_FAILED", e.message))
                    }
                },
                S = t => {
                    (0, f.isSynMessage)(t) && (t => {
                        if (s?.("Received handshake SYN", t), t.participantId === i && i !== m.DEPRECATED_PENPAL_PARTICIPANT_ID || (i = t.participantId, I(), !(l > i || i === m.DEPRECATED_PENPAL_PARTICIPANT_ID))) return;
                        let r = {
                            namespace: b.default,
                            channel: n,
                            type: "ACK1",
                            methodPaths: y
                        };
                        s?.("Sending handshake ACK1", r);
                        try {
                            e.sendMessage(r)
                        } catch (e) {
                            w(new(0, o.default)("TRANSMISSION_FAILED", e.message))
                        }
                    })(t), (0, f.isAck1Message)(t) && (t => {
                        s?.("Received handshake ACK1", t);
                        let r = {
                            namespace: b.default,
                            channel: n,
                            type: "ACK2"
                        };
                        s?.("Sending handshake ACK2", r);
                        try {
                            e.sendMessage(r)
                        } catch (e) {
                            return void w(new(0, o.default)("TRANSMISSION_FAILED", e.message))
                        }
                        j()
                    })(t), (0, f.isAck2Message)(t) && (s?.("Received handshake ACK2", t), j())
                };
            return e.addMessageHandler(S), d.push(() => e.removeMessageHandler(S)), I(), x
        }
    }, {
        "../../../utils/crypto.js": "3dq9D",
        "./PenpalError.js": "dwP65",
        "./connectCallHandler.js": "d5yCk",
        "./connectRemoteProxy.js": "9AXaC",
        "./guards.js": "6PYiY",
        "./getPromiseWithResolvers.js": "1ZTRs",
        "./methodSerialization.js": "lKmYZ",
        "./backwardCompatibility.js": "hsQQI",
        "./namespace.js": "sVrrw",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "3dq9D": [function(e, t, r, n) {
        let s;
        var a = e("@parcel/transformer-js/src/esmodule-helpers.js");

        function i() {
            if ("undefined" != typeof crypto && crypto.randomUUID) return crypto.randomUUID();
            let e = new Uint8Array(16);
            return crypto.getRandomValues(e), e[6] = 15 & e[6] | 64, e[8] = 63 & e[8] | 128, [...e].map((e, t) => {
                let r = e.toString(16).padStart(2, "0");
                return [4, 6, 8, 10].includes(t) ? `-${r}` : r
            }).join("")
        }

        function o(e) {
            return `0x${e.toString(16)}`
        }

        function l(e) {
            let t = "",
                r = e.startsWith("0x") ? e.slice(2) : e;
            for (let e = 0; e < r.length; e += 2) {
                let n = parseInt(r.substring(e, e + 2), 16);
                0 !== n && (t += String.fromCharCode(n))
            }
            return t
        }

        function c(e) {
            s = e
        }
        async function d(e, t) {
            if (s) return s(e, t);
            if ("undefined" != typeof crypto && crypto.subtle && crypto.subtle.digest) return crypto.subtle.digest(e, t);
            throw Error("No crypto digest function available. Please provide a crypto override for this environment.")
        }
        a.defineInteropFlag(r), a.export(r, "cryptoDigest", () => d), a.export(r, "hexToString", () => l), a.export(r, "numberToHex", () => o), a.export(r, "randomUUID", () => i), a.export(r, "setCryptoDigestOverride", () => c)
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    d5yCk: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => g);
        var a = e("./errorSerialization.js"),
            i = e("./Reply.js"),
            o = s.interopDefault(i),
            l = e("./PenpalError.js"),
            c = s.interopDefault(l),
            d = e("./methodSerialization.js"),
            u = e("./guards.js"),
            f = e("./namespace.js"),
            h = s.interopDefault(f);
        let p = (e, t, r) => ({
                namespace: h.default,
                channel: e,
                type: "REPLY",
                callId: t,
                isError: !0,
                ...r instanceof Error ? {
                    value: (0, a.serializeError)(r),
                    isSerializedErrorInstance: !0
                } : {
                    value: r
                }
            }),
            g = (e, t, r, n) => {
                let s = !1,
                    a = async a => {
                        let i, l;
                        if (s || !(0, u.isCallMessage)(a)) return;
                        n?.(`Received ${(0,d.formatMethodPath)(a.methodPath)}() call`, a);
                        let {
                            methodPath: f,
                            args: g,
                            id: m
                        } = a;
                        try {
                            let e = (0, d.getMethodAtMethodPath)(f, t);
                            if (!e) throw new(0, c.default)("METHOD_NOT_FOUND", `Method \`${(0,d.formatMethodPath)(f)}\` is not found.`);
                            let n = await e(...g);
                            n instanceof o.default && (l = n.transferables, n = await n.value), i = {
                                namespace: h.default,
                                channel: r,
                                type: "REPLY",
                                callId: m,
                                value: n
                            }
                        } catch (e) {
                            i = p(r, m, e)
                        }
                        if (!s) try {
                            n?.(`Sending ${(0,d.formatMethodPath)(f)}() reply`, i), e.sendMessage(i, l)
                        } catch (t) {
                            throw "DataCloneError" === t.name && (i = p(r, m, t), n?.(`Sending ${(0,d.formatMethodPath)(f)}() reply`, i), e.sendMessage(i)), t
                        }
                    };
                return e.addMessageHandler(a), () => {
                    s = !0, e.removeMessageHandler(a)
                }
            }
    }, {
        "./errorSerialization.js": "3mtoI",
        "./Reply.js": "8oNoy",
        "./PenpalError.js": "dwP65",
        "./methodSerialization.js": "lKmYZ",
        "./guards.js": "6PYiY",
        "./namespace.js": "sVrrw",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "3mtoI": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "deserializeError", () => l), s.export(r, "serializeError", () => o);
        var a = e("./PenpalError.js"),
            i = s.interopDefault(a);
        let o = e => ({
                name: e.name,
                message: e.message,
                stack: e.stack,
                penpalCode: e instanceof i.default ? e.code : void 0
            }),
            l = ({
                name: e,
                message: t,
                stack: r,
                penpalCode: n
            }) => {
                let s = n ? new(0, i.default)(n, t) : Error(t);
                return s.name = e, s.stack = r, s
            }
    }, {
        "./PenpalError.js": "dwP65",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "8oNoy": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => i);
        let a = Symbol("Reply");
        class i {
            value;
            transferables;
            #e = a;
            constructor(e, t) {
                this.value = e, this.transferables = t?.transferables
            }
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    lKmYZ: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "extractMethodPathsFromMethods", () => i), s.export(r, "formatMethodPath", () => l), s.export(r, "getMethodAtMethodPath", () => o);
        var a = e("./guards.js");
        let i = (e, t = []) => {
                let r = [];
                for (let n of Object.keys(e)) {
                    let s = e[n];
                    (0, a.isFunction)(s) ? r.push([...t, n]): (0, a.isObject)(s) && r.push(...i(s, [...t, n]))
                }
                return r
            },
            o = (e, t) => {
                let r = e.reduce((e, t) => (0, a.isObject)(e) ? e[t] : void 0, t);
                return (0, a.isFunction)(r) ? r : void 0
            },
            l = e => e.join(".")
    }, {
        "./guards.js": "6PYiY",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "6PYiY": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "isAck1Message", () => u), s.export(r, "isAck2Message", () => f), s.export(r, "isCallMessage", () => h), s.export(r, "isDestroyMessage", () => g), s.export(r, "isFunction", () => l), s.export(r, "isMessage", () => c), s.export(r, "isObject", () => o), s.export(r, "isReplyMessage", () => p), s.export(r, "isSynMessage", () => d);
        var a = e("./namespace.js"),
            i = s.interopDefault(a);
        let o = e => "object" == typeof e && null !== e,
            l = e => "function" == typeof e,
            c = e => o(e) && e.namespace === i.default,
            d = e => "SYN" === e.type,
            u = e => "ACK1" === e.type,
            f = e => "ACK2" === e.type,
            h = e => "CALL" === e.type,
            p = e => "REPLY" === e.type,
            g = e => "DESTROY" === e.type
    }, {
        "./namespace.js": "sVrrw",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    sVrrw: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => a);
        var a = "penpal"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "9AXaC": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => b);
        var a = e("../../../utils/crypto.js"),
            i = e("./errorSerialization.js"),
            o = e("./methodSerialization.js"),
            l = e("./CallOptions.js"),
            c = s.interopDefault(l),
            d = e("./PenpalError.js"),
            u = s.interopDefault(d),
            f = e("./guards.js"),
            h = e("./namespace.js"),
            p = s.interopDefault(h);
        let g = new Set(["apply", "call", "bind"]),
            m = (e, t, r = []) => new Proxy(r.length ? () => {} : Object.create(null), {
                get(n, s) {
                    if ("then" !== s) return r.length && g.has(s) ? Reflect.get(n, s) : m(e, t, [...r, s])
                },
                apply: (t, n, s) => e(r, s)
            }),
            y = e => new(0, u.default)("CONNECTION_DESTROYED", `Method call ${(0,o.formatMethodPath)(e)}() failed due to destroyed connection`),
            b = (e, t, r) => {
                let n = !1,
                    s = new Map,
                    l = e => {
                        if (!(0, f.isReplyMessage)(e)) return;
                        let {
                            callId: t,
                            value: n,
                            isError: a,
                            isSerializedErrorInstance: l
                        } = e, c = s.get(t);
                        c && (s.delete(t), r?.(`Received ${(0,o.formatMethodPath)(c.methodPath)}() call`, e), a ? c.reject(l ? (0, i.deserializeError)(n) : n) : c.resolve(n))
                    };
                return e.addMessageHandler(l), {
                    remoteProxy: m((i, l) => {
                        if (n) throw y(i);
                        let d = (0, a.randomUUID)(),
                            f = l[l.length - 1],
                            h = f instanceof c.default,
                            {
                                timeout: g,
                                transferables: m
                            } = h ? f : {},
                            b = h ? l.slice(0, -1) : l;
                        return new Promise((n, a) => {
                            let l = void 0 !== g ? window.setTimeout(() => {
                                s.delete(d), a(new(0, u.default)("METHOD_CALL_TIMEOUT", `Method call ${(0,o.formatMethodPath)(i)}() timed out after ${g}ms`))
                            }, g) : void 0;
                            s.set(d, {
                                methodPath: i,
                                resolve: n,
                                reject: a,
                                timeoutId: l
                            });
                            try {
                                let n = {
                                    namespace: p.default,
                                    channel: t,
                                    type: "CALL",
                                    id: d,
                                    methodPath: i,
                                    args: b
                                };
                                r?.(`Sending ${(0,o.formatMethodPath)(i)}() call`, n), e.sendMessage(n, m)
                            } catch (e) {
                                a(new(0, u.default)("TRANSMISSION_FAILED", e.message))
                            }
                        })
                    }, r),
                    destroy: () => {
                        for (let {
                                methodPath: t,
                                reject: r,
                                timeoutId: a
                            }
                            of(n = !0, e.removeMessageHandler(l), s.values())) clearTimeout(a), r(y(t));
                        s.clear()
                    }
                }
            }
    }, {
        "../../../utils/crypto.js": "3dq9D",
        "./errorSerialization.js": "3mtoI",
        "./methodSerialization.js": "lKmYZ",
        "./CallOptions.js": "c0l2X",
        "./PenpalError.js": "dwP65",
        "./guards.js": "6PYiY",
        "./namespace.js": "sVrrw",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    c0l2X: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => i);
        let a = Symbol("CallOptions");
        class i {
            transferables;
            timeout;
            #t = a;
            constructor(e) {
                this.transferables = e?.transferables, this.timeout = e?.timeout
            }
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "1ZTRs": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => a);
        let a = () => {
            let e, t;
            return {
                promise: new Promise((r, n) => {
                    e = r, t = n
                }),
                resolve: e,
                reject: t
            }
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    hsQQI: [function(e, t, r, n) {
        var s, a, i, o, l = e("@parcel/transformer-js/src/esmodule-helpers.js");
        l.defineInteropFlag(r), l.export(r, "DEPRECATED_PENPAL_PARTICIPANT_ID", () => p), l.export(r, "downgradeMessage", () => v), l.export(r, "isDeprecatedMessage", () => g), l.export(r, "upgradeMessage", () => x);
        var c = e("./namespace.js"),
            d = l.interopDefault(c),
            u = e("./guards.js"),
            f = e("./PenpalBugError.js"),
            h = l.interopDefault(f);
        let p = "deprecated-penpal";
        (s = i || (i = {})).Call = "call", s.Reply = "reply", s.Syn = "syn", s.SynAck = "synAck", s.Ack = "ack", (a = o || (o = {})).Fulfilled = "fulfilled", a.Rejected = "rejected";
        let g = e => (0, u.isObject)(e) && "penpal" in e,
            m = e => e.split("."),
            y = e => e.join("."),
            b = e => new(0, h.default)(`Unexpected message to translate: ${JSON.stringify(e)}`),
            x = e => {
                if (e.penpal === i.Syn) return {
                    namespace: d.default,
                    channel: void 0,
                    type: "SYN",
                    participantId: p
                };
                if (e.penpal === i.SynAck) return {
                    namespace: d.default,
                    channel: void 0,
                    type: "ACK1",
                    methodPaths: e.methodNames.map(m)
                };
                if (e.penpal === i.Ack) return {
                    namespace: d.default,
                    channel: void 0,
                    type: "ACK2"
                };
                if (e.penpal === i.Call) return {
                    namespace: d.default,
                    channel: void 0,
                    type: "CALL",
                    id: e.id,
                    methodPath: m(e.methodName),
                    args: e.args
                };
                if (e.penpal === i.Reply) return e.resolution === o.Fulfilled ? {
                    namespace: d.default,
                    channel: void 0,
                    type: "REPLY",
                    callId: e.id,
                    value: e.returnValue
                } : {
                    namespace: d.default,
                    channel: void 0,
                    type: "REPLY",
                    callId: e.id,
                    isError: !0,
                    ...e.returnValueIsError ? {
                        value: e.returnValue,
                        isSerializedErrorInstance: !0
                    } : {
                        value: e.returnValue
                    }
                };
                throw b(e)
            },
            v = e => {
                if ((0, u.isAck1Message)(e)) return {
                    penpal: i.SynAck,
                    methodNames: e.methodPaths.map(y)
                };
                if ((0, u.isCallMessage)(e)) return {
                    penpal: i.Call,
                    id: e.id,
                    methodName: y(e.methodPath),
                    args: e.args
                };
                if ((0, u.isReplyMessage)(e)) return e.isError ? {
                    penpal: i.Reply,
                    id: e.callId,
                    resolution: o.Rejected,
                    ...e.isSerializedErrorInstance ? {
                        returnValue: e.value,
                        returnValueIsError: !0
                    } : {
                        returnValue: e.value
                    }
                } : {
                    penpal: i.Reply,
                    id: e.callId,
                    resolution: o.Fulfilled,
                    returnValue: e.value
                };
                throw b(e)
            }
    }, {
        "./namespace.js": "sVrrw",
        "./guards.js": "6PYiY",
        "./PenpalBugError.js": "4tDPR",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "4tDPR": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => a);
        class a extends Error {
            constructor(e) {
                super(`You've hit a bug in Penpal. Please file an issue with the following information: ${e}`)
            }
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    a7jQh: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => a);
        let a = e => {
            let t, r = !1;
            return (...n) => (r || (r = !0, t = e(...n)), t)
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "8822a": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "debugLog", () => i);
        var a = e("../core/config/config.js");

        function i(...e) {
            let t = a.SDKConfiguration.fromStorage();
            t?.shieldConfiguration?.debug && console.log(`${(new Date).toISOString()} [SDK]`, ...e)
        }
    }, {
        "../core/config/config.js": "8pPBU",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "8pPBU": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "OpenfortConfiguration", () => l), s.export(r, "SDKConfiguration", () => d), s.export(r, "ShieldConfiguration", () => c);
        var a = e("../../storage/istorage.js"),
            i = e("../../utils/crypto.js");
        let o = null;
        class l {
            publishableKey;
            constructor(e) {
                this.publishableKey = e.publishableKey
            }
        }
        class c {
            shieldPublishableKey;
            shieldEncryptionKey;
            debug = !1;
            constructor(e) {
                this.shieldPublishableKey = e.shieldPublishableKey, this.shieldEncryptionKey = e.shieldEncryptionKey, this.debug = e.shieldDebug || !1
            }
        }
        class d {
            baseConfiguration;
            shieldConfiguration;
            shieldUrl;
            iframeUrl;
            backendUrl;
            storage;
            constructor({
                baseConfiguration: e,
                shieldConfiguration: t,
                overrides: r
            }) {
                this.shieldConfiguration = t, this.baseConfiguration = e, this.backendUrl = r?.backendUrl || "https://api.openfort.io", this.iframeUrl = r?.iframeUrl || "https://embed.openfort.io", this.iframeUrl = `${this.iframeUrl}/iframe/${this.baseConfiguration.publishableKey}`, t?.debug && (this.iframeUrl = `${this.iframeUrl}?debug=true`), this.shieldUrl = r?.shieldUrl || "https://shield.openfort.io", this.storage = r?.storage, r?.crypto?.digest && (0, i.setCryptoDigestOverride)(r.crypto.digest), this.save()
            }
            static async isStorageAccessible(e) {
                try {
                    let t = a.StorageKeys.TEST,
                        r = "openfort_storage_test";
                    e.save(t, r);
                    let n = await e.get(t);
                    return e.remove(t), n === r
                } catch (e) {
                    return !1
                }
            }
            static fromStorage(e) {
                return e ? this.loadFromStorage(e) : o
            }
            static async loadFromStorage(e) {
                let t = await e.get(a.StorageKeys.CONFIGURATION);
                if (!t) return null;
                try {
                    let r, n = JSON.parse(t),
                        s = new l({
                            publishableKey: n.publishableKey
                        });
                    n.shieldPublishableKey && (r = new c({
                        shieldPublishableKey: n.shieldPublishableKey,
                        shieldEncryptionKey: n.shieldEncryptionKey,
                        shieldDebug: n.shieldDebug
                    }));
                    let a = {
                        backendUrl: n.backendUrl,
                        iframeUrl: n.iframeUrl,
                        shieldUrl: n.shieldUrl,
                        storage: e
                    };
                    return new d({
                        baseConfiguration: s,
                        shieldConfiguration: r,
                        overrides: a
                    })
                } catch {
                    return null
                }
            }
            save() {
                o = this, this.storage && this.storage.save(a.StorageKeys.CONFIGURATION, JSON.stringify({
                    publishableKey: this.baseConfiguration.publishableKey,
                    backendUrl: this.backendUrl,
                    iframeUrl: this.iframeUrl,
                    shieldUrl: this.shieldUrl,
                    shieldPublishableKey: this.shieldConfiguration?.shieldPublishableKey,
                    shieldEncryptionKey: this.shieldConfiguration?.shieldEncryptionKey,
                    shieldDebug: this.shieldConfiguration?.debug
                }))
            }
        }
    }, {
        "../../storage/istorage.js": "8EpXG",
        "../../utils/crypto.js": "3dq9D",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "1Nfd7": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "Authentication", () => i);
        var a = e("../../storage/istorage.js");
        class i {
            type;
            token;
            player;
            refreshToken;
            thirdPartyProvider;
            thirdPartyTokenType;
            constructor(e, t, r, n, s, a) {
                this.type = e, this.token = t, this.player = r, this.refreshToken = n, this.thirdPartyProvider = s, this.thirdPartyTokenType = a
            }
            get provider() {
                return this.thirdPartyProvider
            }
            get tokenType() {
                return this.thirdPartyTokenType
            }
            save(e) {
                e.save(a.StorageKeys.AUTHENTICATION, JSON.stringify({
                    type: this.type,
                    token: this.token,
                    player: this.player,
                    refreshToken: this.refreshToken,
                    thirdPartyProvider: this.thirdPartyProvider,
                    thirdPartyTokenType: this.thirdPartyTokenType
                }))
            }
            static async fromStorage(e) {
                let t = await e.get(a.StorageKeys.AUTHENTICATION);
                if (!t) return null;
                try {
                    let e = JSON.parse(t);
                    return new i(e.type, e.token, e.player, e.refreshToken, e.thirdPartyProvider, e.thirdPartyTokenType)
                } catch {
                    return null
                }
            }
        }
    }, {
        "../../storage/istorage.js": "8EpXG",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "19aZg": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "ReactNativeMessenger", () => l);
        var a = e("../../utils/debug.js"),
            i = e("./browserMessenger/PenpalError.js"),
            o = s.interopDefault(i);
        e("./browserMessenger/backwardCompatibility.js");
        class l {
            messagePoster;
            handlers = new Set;
            isInitialized = !1;
            hasBeenUsed = !1;
            validateMessage;
            messageBuffer = [];
            nextNumericId = 1;
            stringToNumericId = new Map;
            numericToStringId = new Map;
            constructor(e) {
                if (this.messagePoster = e, !e || "function" != typeof e.postMessage) throw new(0, o.default)("CONNECTION_DESTROYED", "Invalid message poster provided");
                (0, a.debugLog)("ReactNativeMessenger created")
            }
            initialize(e) {
                if (this.isInitialized) return void(0, a.debugLog)("ReactNativeMessenger already initialized");
                if (this.hasBeenUsed) throw new(0, o.default)("CONNECTION_DESTROYED", "A messenger can only be used for a single connection");
                this.validateMessage = e?.validateReceivedMessage, this.isInitialized = !0, this.hasBeenUsed = !0, (0, a.debugLog)(`ReactNativeMessenger initialized, processing ${this.messageBuffer.length} buffered messages`);
                let t = [...this.messageBuffer];
                this.messageBuffer = [], t.forEach(e => {
                    this.processMessage(e)
                })
            }
            sendMessage(e, t) {
                if (!this.isInitialized) throw new(0, o.default)("CONNECTION_DESTROYED", "ReactNativeMessenger not initialized");
                t && t.length > 0 && (0, a.debugLog)("React Native: Ignoring transferables (not supported)"), (0, a.debugLog)("ReactNativeMessenger sending message:", e);
                try {
                    let t = e;
                    "penpal" === e?.namespace && (t = this.convertToDeprecatedFormat(e), (0, a.debugLog)("React Native: Converted message:", t));
                    let r = JSON.stringify(t);
                    this.messagePoster.postMessage(r)
                } catch (e) {
                    throw new(0, o.default)("TRANSMISSION_FAILED", `Failed to send message through React Native WebView: ${e instanceof Error?e.message:String(e)}`)
                }
            }
            addMessageHandler(e) {
                this.handlers.add(e), (0, a.debugLog)(`Message handler added, total handlers: ${this.handlers.size}`)
            }
            removeMessageHandler(e) {
                this.handlers.delete(e), (0, a.debugLog)(`Message handler removed, total handlers: ${this.handlers.size}`)
            }
            handleMessage(e) {
                if ((0, a.debugLog)("[HANDSHAKE DEBUG] ReactNativeMessenger.handleMessage called with:", e), !this.isInitialized) {
                    let t = this.messageBuffer.length + 1;
                    return (0, a.debugLog)(`[HANDSHAKE DEBUG] ReactNativeMessenger: Message received but not initialized, buffering message (${t} total)`), void this.messageBuffer.push(e)
                }(0, a.debugLog)("[HANDSHAKE DEBUG] ReactNativeMessenger is initialized, processing message"), this.processMessage(e)
            }
            processMessage(e) {
                (0, a.debugLog)("[HANDSHAKE DEBUG] ReactNativeMessenger processing message:", e);
                let t = this.convertFromDeprecatedFormat(e);
                if ((0, a.debugLog)("[HANDSHAKE DEBUG] Message after conversion:", t), this.validateMessage && !this.validateMessage(t)) return void(0, a.debugLog)("[HANDSHAKE DEBUG] Message validation failed:", t);
                (0, a.debugLog)(`[HANDSHAKE DEBUG] Routing message to ${this.handlers.size} handlers`);
                let r = 0;
                this.handlers.forEach(e => {
                    r++;
                    try {
                        (0, a.debugLog)(`[HANDSHAKE DEBUG] Calling handler ${r}/${this.handlers.size}`), e(t), (0, a.debugLog)(`[HANDSHAKE DEBUG] Handler ${r} completed successfully`)
                    } catch (e) {
                        (0, a.debugLog)(`[HANDSHAKE DEBUG] Error in handler ${r}:`, e)
                    }
                })
            }
            convertToDeprecatedFormat(e) {
                if ("penpal" !== e?.namespace) return e;
                switch (e.type) {
                    case "SYN":
                        return (0, a.debugLog)("React Native: Converting SYN to deprecated format to avoid MessagePorts", {
                            originalMessage: e
                        }), {
                            penpal: "syn",
                            participantId: e.participantId
                        };
                    case "ACK1":
                        return (0, a.debugLog)("React Native: Converting ACK1 to deprecated format", {
                            originalMessage: e
                        }), {
                            penpal: "synAck",
                            methodNames: e.methodPaths || []
                        };
                    case "ACK2":
                        return (0, a.debugLog)("React Native: Converting ACK2 to deprecated format", {
                            originalMessage: e
                        }), {
                            penpal: "ack"
                        };
                    case "REPLY": {
                        (0, a.debugLog)("React Native: Converting REPLY to deprecated format", {
                            originalMessage: e
                        });
                        let t = this.getNumericId(e.callId);
                        return e.isError ? {
                            penpal: "reply",
                            id: t,
                            resolution: "rejected",
                            returnValue: e.value,
                            returnValueIsError: e.isSerializedErrorInstance || !1
                        } : {
                            penpal: "reply",
                            id: t,
                            resolution: "fulfilled",
                            returnValue: e.value
                        }
                    }
                    case "CALL":
                        return (0, a.debugLog)("React Native: Converting CALL to deprecated format", {
                            originalMessage: e
                        }), {
                            penpal: "call",
                            id: this.getNumericId(e.id),
                            methodName: e.methodPath.join("."),
                            args: e.args
                        };
                    case "DESTROY":
                        return {
                            namespace: "penpal", type: "DESTROY"
                        };
                    default:
                        return e
                }
            }
            convertFromDeprecatedFormat(e) {
                if (e?.penpal) switch (e.penpal) {
                    case "syn": {
                        (0, a.debugLog)("[HANDSHAKE DEBUG] React Native: Converting deprecated SYN to modern format", {
                            originalMessage: e
                        });
                        let t = {
                            namespace: "penpal",
                            type: "SYN",
                            participantId: e.participantId
                        };
                        return (0, a.debugLog)("[HANDSHAKE DEBUG] Converted SYN:", t), t
                    }
                    case "synAck": {
                        (0, a.debugLog)("[HANDSHAKE DEBUG] React Native: Converting deprecated synAck to modern ACK1 format", {
                            originalMessage: e
                        });
                        let t = {
                            namespace: "penpal",
                            type: "ACK1",
                            methodPaths: e.methodNames?.map(e => e.split(".")) || [],
                            channel: void 0
                        };
                        return (0, a.debugLog)("[HANDSHAKE DEBUG] Converted ACK1:", t), t
                    }
                    case "ack": {
                        (0, a.debugLog)("[HANDSHAKE DEBUG] React Native: Converting deprecated ack to modern ACK2 format", {
                            originalMessage: e
                        });
                        let t = {
                            namespace: "penpal",
                            type: "ACK2",
                            channel: void 0
                        };
                        return (0, a.debugLog)("[HANDSHAKE DEBUG] Converted ACK2:", t), t
                    }
                    case "reply": {
                        (0, a.debugLog)("React Native: Converting deprecated reply to modern REPLY format", {
                            originalMessage: e
                        });
                        let t = this.getStringId(e.id);
                        t || (0, a.debugLog)(`Warning: No string ID mapping found for numeric ID ${e.id}, using as-is`);
                        let r = t || String(e.id);
                        return "fulfilled" === e.resolution ? {
                            namespace: "penpal",
                            type: "REPLY",
                            callId: r,
                            value: e.returnValue
                        } : {
                            namespace: "penpal",
                            type: "REPLY",
                            callId: r,
                            isError: !0,
                            value: e.returnValue,
                            isSerializedErrorInstance: e.returnValueIsError || !1
                        }
                    }
                    case "call": {
                        (0, a.debugLog)("React Native: Converting deprecated call to modern CALL format", {
                            originalMessage: e
                        });
                        let t = this.getStringId(e.id);
                        return t || (0, a.debugLog)(`Warning: No string ID mapping found for numeric ID ${e.id}, using as-is`), {
                            namespace: "penpal",
                            type: "CALL",
                            id: t || String(e.id),
                            methodPath: e.methodName.split("."),
                            args: e.args
                        }
                    }
                    default:
                        return (0, a.debugLog)("React Native: Unknown deprecated penpal message type:", e.penpal), e
                }
                return e
            }
            setupMessagePort(e) {
                (0, a.debugLog)("React Native: setupMessagePort called but ignored (MessagePort not supported)")
            }
            destroy() {
                this.isInitialized && (this.handlers.clear(), this.messageBuffer = [], this.stringToNumericId.clear(), this.numericToStringId.clear(), this.nextNumericId = 1, this.isInitialized = !1, this.hasBeenUsed = !1, (0, a.debugLog)("ReactNativeMessenger destroyed and ready for reuse"))
            }
            reset() {
                (0, a.debugLog)("ReactNativeMessenger reset for reuse"), this.handlers.clear(), this.messageBuffer = [], this.isInitialized = !1, this.hasBeenUsed = !1, this.nextNumericId = 1, this.stringToNumericId.clear(), this.numericToStringId.clear()
            }
            getNumericId(e) {
                let t = this.stringToNumericId.get(e);
                return t || (t = this.nextNumericId++, this.stringToNumericId.set(e, t), this.numericToStringId.set(t, e), (0, a.debugLog)(`ID mapping created: "${e}" -> ${t}`)), t
            }
            getStringId(e) {
                return this.numericToStringId.get(e)
            }
        }
    }, {
        "../../utils/debug.js": "8822a",
        "./browserMessenger/PenpalError.js": "dwP65",
        "./browserMessenger/backwardCompatibility.js": "hsQQI",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "913SB": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "InternalSentry", () => l), s.export(r, "sentry", () => c);
        var a = e("axios"),
            i = e("../../version.js");
        let o = "https://64a03e4967fb4dad3ecb914918c777b6@o4504593015242752.ingest.us.sentry.io/4509292415287296";
        class l {
            static sentryInstance;
            static queuedCalls = [];
            static baseTags;
            static set sentry(e) {
                let t = e.getDsn();
                if (!t) throw Error("Sentry DSN is not set");
                if (t.projectId !== o.split("https://")[1].split("/")[1] || t.host !== o.split("@")[1].split("/")[0] || t.publicKey !== o.split("@")[0].split("https://")[1]) throw Error("Sentry DSN is not valid");
                e.captureAxiosError = (t, r, n, s) => {
                    r instanceof a.AxiosError ? (r.name = t, e.captureException(r, {
                        ...n,
                        captureContext: {
                            ...n?.captureContext,
                            extra: {
                                errorResponseData: r.response?.data,
                                errorStatus: r.response?.status,
                                errorHeaders: r.response?.headers,
                                errorRequest: r.request
                            },
                            tags: {
                                ...this.baseTags,
                                method: t
                            }
                        }
                    })) : e.captureException(r, n, s)
                }, this.sentryInstance = e
            }
            static get sentry() {
                return this.proxy
            }
            static async init({
                sentry: t,
                configuration: r
            }) {
                if (t) return void(this.sentry = t);
                let n = await e("a9e6b8ea4960bb4a");
                this.sentry = new n.BrowserClient({
                    dsn: o,
                    integrations: [],
                    stackParser: n.defaultStackParser,
                    transport: n.makeFetchTransport
                }), this.baseTags = {
                    projectId: r?.baseConfiguration.publishableKey,
                    sdk: i.PACKAGE,
                    sdkVersion: i.VERSION
                }, this.processQueuedCalls()
            }
            static proxy = new Proxy({}, {
                get: (e, t) => l.sentryInstance && "function" == typeof l.sentryInstance[t] ? (...e) => l.sentryInstance[t](...e) : (...e) => {
                    l.queuedCalls.push({
                        fn: t,
                        args: e
                    })
                }
            });
            static processQueuedCalls() {
                this.sentryInstance && (this.queuedCalls.forEach(({
                    fn: e,
                    args: t
                }) => {
                    "function" == typeof this.sentryInstance[e] && this.sentryInstance[e](...t)
                }), this.queuedCalls = [])
            }
        }
        let {
            sentry: c
        } = l
    }, {
        axios: "jhAcT",
        "../../version.js": "b25yF",
        a9e6b8ea4960bb4a: "lXFlS",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    b25yF: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "PACKAGE", () => i), s.export(r, "VERSION", () => a);
        let a = "0.9.8",
            i = "@openfort/openfort-js"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    lXFlS: [function(e, t, r, n) {
        t.exports = e("b8b8447d32e4fae5")(t.bundle.resolve("7UhPZ")).then(() => t.bundle.root("9vv7N"))
    }, {
        b8b8447d32e4fae5: "6IWJC"
    }],
    "6IWJC": [function(e, t, r, n) {
        "use strict";
        t.exports = e("ca2a84f7fa4a3bb0")(function(e) {
            return new Promise(function(t, r) {
                if ([].concat(document.getElementsByTagName("script")).some(function(t) {
                        return t.src === e
                    })) return void t();
                var n = document.createElement("link");
                n.href = e, n.rel = "preload", n.as = "script", document.head.appendChild(n);
                var s = document.createElement("script");
                s.async = !0, s.type = "text/javascript", s.src = e, s.onerror = function(t) {
                    var n = TypeError("Failed to fetch dynamically imported module: ".concat(e, ". Error: ").concat(t.message));
                    s.onerror = s.onload = null, s.remove(), r(n)
                }, s.onload = function() {
                    s.onerror = s.onload = null, t()
                }, document.getElementsByTagName("head")[0].appendChild(s)
            })
        })
    }, {
        ca2a84f7fa4a3bb0: "cpF2B"
    }],
    cpF2B: [function(e, t, r, n) {
        "use strict";
        var s = {},
            a = {},
            i = {};
        t.exports = function(e, t) {
            return function(r) {
                var n = function(e) {
                    switch (e) {
                        case "preload":
                            return a;
                        case "prefetch":
                            return i;
                        default:
                            return s
                    }
                }(t);
                return n[r] ? n[r] : n[r] = e.apply(null, arguments).catch(function(e) {
                    throw delete n[r], e
                })
            }
        }
    }, {}],
    "26nPt": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "Openfort", () => b);
        var a = e("../../../packages/internal/openapi-clients/dist/index.js"),
            i = e("./errors/sentry.js"),
            o = e("../storage/lazyStorage.js"),
            l = e("./errors/openfortError.js"),
            c = e("./config/config.js"),
            d = e("../auth/authManager.js"),
            u = e("../api/auth.js"),
            f = e("../api/embeddedWallet.js"),
            h = e("../api/user.js"),
            p = e("../api/proxy.js"),
            g = e("./openfortInternal.js"),
            m = e("../utils/typedEventEmitter.js"),
            y = s.interopDefault(m);
        class b {
            storage;
            iAuthManager = null;
            openfortInternal;
            initPromise;
            asyncInitPromise = null;
            authInstance;
            embeddedWalletInstance;
            userInstance;
            proxyInstance;
            configuration;
            eventEmitter;
            get auth() {
                if (!this.authInstance) throw new(0, l.OpenfortError)("Openfort SDK not initialized. Please await waitForInitialization() before accessing auth.", l.OpenfortErrorType.INVALID_CONFIGURATION);
                return this.authInstance
            }
            get embeddedWallet() {
                if (!this.embeddedWalletInstance) throw new(0, l.OpenfortError)("Openfort SDK not initialized. Please await waitForInitialization() before accessing embeddedWallet.", l.OpenfortErrorType.INVALID_CONFIGURATION);
                return this.embeddedWalletInstance
            }
            get user() {
                if (!this.userInstance) throw new(0, l.OpenfortError)("Openfort SDK not initialized. Please await waitForInitialization() before accessing user.", l.OpenfortErrorType.INVALID_CONFIGURATION);
                return this.userInstance
            }
            get proxy() {
                if (!this.proxyInstance) throw new(0, l.OpenfortError)("Openfort SDK not initialized. Please await waitForInitialization() before accessing proxy.", l.OpenfortErrorType.INVALID_CONFIGURATION);
                return this.proxyInstance
            }
            initializeSynchronously() {
                try {
                    this.iAuthManager = new(0, d.AuthManager)(this.storage), this.openfortInternal = new(0, g.OpenfortInternal)(this.storage, this.authManager, this.eventEmitter), this.authInstance = new(0, u.AuthApi)(this.storage, this.authManager, this.validateAndRefreshToken.bind(this), this.ensureInitialized.bind(this), this.eventEmitter), this.embeddedWalletInstance = new(0, f.EmbeddedWalletApi)(this.storage, this.validateAndRefreshToken.bind(this), this.ensureInitialized.bind(this), this.eventEmitter), this.userInstance = new(0, h.UserApi)(this.storage, this.authManager, this.validateAndRefreshToken.bind(this)), this.proxyInstance = new(0, p.ProxyApi)(this.storage, this.backendApiClients, this.validateAndRefreshToken.bind(this), this.ensureInitialized.bind(this), async () => {
                        if (!this.embeddedWalletInstance) throw new(0, l.OpenfortError)("Embedded wallet not initialized", l.OpenfortErrorType.MISSING_SIGNER_ERROR);
                        let e = this.embeddedWalletInstance;
                        return t => e.signMessage(t, {
                            hashMessage: !0,
                            arrayifyMessage: !0
                        })
                    })
                } catch (e) {
                    throw new(0, l.OpenfortError)("Openfort SDK synchronous initialization failed", l.OpenfortErrorType.INVALID_CONFIGURATION)
                }
            }
            constructor(e) {
                this.configuration = new(0, c.SDKConfiguration)(e), this.storage = new(0, o.LazyStorage)(this.configuration.storage), this.eventEmitter = new(0, y.default), i.InternalSentry.init({
                    configuration: this.configuration
                }), this.initializeSynchronously(), this.initPromise = Promise.resolve()
            }
            async waitForInitialization() {
                await this.initPromise, await this.ensureAsyncInitialized()
            }
            async getAccessToken() {
                return await this.ensureInitialized(), this.openfortInternal.getAccessToken()
            }
            async validateAndRefreshToken(e) {
                return await this.ensureInitialized(), await this.openfortInternal.validateAndRefreshToken(e)
            }
            get backendApiClients() {
                return new(0, a.BackendApiClients)({
                    basePath: this.configuration.backendUrl,
                    accessToken: this.configuration.baseConfiguration.publishableKey
                })
            }
            get authManager() {
                if (!this.iAuthManager) throw new(0, l.OpenfortError)("AuthManager not initialized", l.OpenfortErrorType.INTERNAL_ERROR);
                return this.iAuthManager
            }
            async initializeAsync() {
                try {
                    if (!await c.SDKConfiguration.isStorageAccessible(this.storage)) throw new(0, l.OpenfortError)("Storage is not accessible", l.OpenfortErrorType.INVALID_CONFIGURATION);
                    this.authManager.setBackendApiClients(this.backendApiClients, this.configuration.baseConfiguration.publishableKey)
                } catch (e) {
                    throw new(0, l.OpenfortError)("Openfort SDK async initialization failed", l.OpenfortErrorType.INTERNAL_ERROR)
                }
            }
            async ensureAsyncInitialized() {
                this.asyncInitPromise || (this.asyncInitPromise = this.initializeAsync()), await this.asyncInitPromise
            }
            async ensureInitialized() {
                await this.initPromise, await this.ensureAsyncInitialized()
            }
        }
    }, {
        "../../../packages/internal/openapi-clients/dist/index.js": "5IDb0",
        "./errors/sentry.js": "913SB",
        "../storage/lazyStorage.js": "i2ayE",
        "./errors/openfortError.js": "3xESR",
        "./config/config.js": "8pPBU",
        "../auth/authManager.js": "aurKi",
        "../api/auth.js": "kxNZ1",
        "../api/embeddedWallet.js": "cN17n",
        "../api/user.js": "6FRSo",
        "../api/proxy.js": "3zeZX",
        "./openfortInternal.js": "kvnur",
        "../utils/typedEventEmitter.js": "gZetA",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "5IDb0": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "BackendApiClients", () => _), s.export(r, "createConfig", () => k);
        var a = e("axios"),
            i = s.interopDefault(a),
            o = e("axios-retry"),
            l = s.interopDefault(o);
        let c = "https://api.openfort.xyz".replace(/\/+$/, "");
        class d {
            basePath;
            axios;
            configuration;
            constructor(e, t = c, r = i.default) {
                this.basePath = t, this.axios = r, e && (this.configuration = e, this.basePath = e.basePath || this.basePath)
            }
        }
        class u extends Error {
            field;
            constructor(e, t) {
                super(t), this.field = e, this.name = "RequiredError"
            }
        }
        let f = "https://example.com",
            h = function(e, t, r) {
                if (null == r) throw new u(t, `Required parameter ${t} was null or undefined when calling ${e}.`)
            },
            p = async function(e, t) {
                t && t.accessToken && (e.Authorization = "Bearer " + ("function" == typeof t.accessToken ? await t.accessToken() : await t.accessToken))
            }, g = function(e, ...t) {
                let r = new URLSearchParams(e.search);
                (function e(t, r, n = "") {
                    null != r && ("object" == typeof r ? Array.isArray(r) ? r.forEach(r => e(t, r, n)) : Object.keys(r).forEach(s => e(t, r[s], `${n}${""!==n?".":""}${s}`)) : t.has(n) ? t.append(n, r) : t.set(n, r))
                })(r, t), e.search = r.toString()
            }, m = function(e, t, r) {
                let n = "string" != typeof e;
                return (n && r && r.isJsonMime ? r.isJsonMime(t.headers["Content-Type"]) : n) ? JSON.stringify(void 0 !== e ? e : {}) : e || ""
            }, y = function(e) {
                return e.pathname + e.search + e.hash
            }, b = function(e, t, r, n) {
                return (s = t, a = r) => {
                    let i = {
                        ...e.options,
                        url: (n?.basePath || s.defaults.baseURL || a) + e.url
                    };
                    return s.request(i)
                }
            }, x = function(e) {
                let t = {
                    cancelTransferOwnership: async (t, r, n = {}) => {
                        let s;
                        h("cancelTransferOwnership", "id", t), h("cancelTransferOwnership", "cancelTransferOwnershipRequest", r);
                        let a = new URL("/v1/accounts/{id}/cancel_transfer_ownership".replace("{id}", encodeURIComponent(String(t))), f);
                        e && (s = e.baseOptions);
                        let i = {
                                method: "POST",
                                ...s,
                                ...n
                            },
                            o = {};
                        await p(o, e), o["Content-Type"] = "application/json", g(a, {});
                        let l = s && s.headers ? s.headers : {};
                        return i.headers = {
                            ...o,
                            ...l,
                            ...n.headers
                        }, i.data = m(r, i, e), {
                            url: y(a),
                            options: i
                        }
                    },
                    completeRecovery: async (t, r, n = {}) => {
                        let s;
                        h("completeRecovery", "id", t), h("completeRecovery", "completeRecoveryRequest", r);
                        let a = new URL("/v1/accounts/{id}/complete_recovery".replace("{id}", encodeURIComponent(String(t))), f);
                        e && (s = e.baseOptions);
                        let i = {
                                method: "POST",
                                ...s,
                                ...n
                            },
                            o = {};
                        await p(o, e), o["Content-Type"] = "application/json", g(a, {});
                        let l = s && s.headers ? s.headers : {};
                        return i.headers = {
                            ...o,
                            ...l,
                            ...n.headers
                        }, i.data = m(r, i, e), {
                            url: y(a),
                            options: i
                        }
                    },
                    createAccount: async (t, r = {}) => {
                        let n;
                        h("createAccount", "createAccountRequest", t);
                        let s = new URL("/v1/accounts", f);
                        e && (n = e.baseOptions);
                        let a = {
                                method: "POST",
                                ...n,
                                ...r
                            },
                            i = {};
                        await p(i, e), i["Content-Type"] = "application/json", g(s, {});
                        let o = n && n.headers ? n.headers : {};
                        return a.headers = {
                            ...i,
                            ...o,
                            ...r.headers
                        }, a.data = m(t, a, e), {
                            url: y(s),
                            options: a
                        }
                    },
                    deployAccount: async (t, r, n = {}) => {
                        let s;
                        h("deployAccount", "id", t), h("deployAccount", "deployRequest", r);
                        let a = new URL("/v1/accounts/{id}/deploy".replace("{id}", encodeURIComponent(String(t))), f);
                        e && (s = e.baseOptions);
                        let i = {
                                method: "POST",
                                ...s,
                                ...n
                            },
                            o = {};
                        await p(o, e), o["Content-Type"] = "application/json", g(a, {});
                        let l = s && s.headers ? s.headers : {};
                        return i.headers = {
                            ...o,
                            ...l,
                            ...n.headers
                        }, i.data = m(r, i, e), {
                            url: y(a),
                            options: i
                        }
                    },
                    disableAccount: async (t, r = {}) => {
                        let n;
                        h("disableAccount", "id", t);
                        let s = new URL("/v1/accounts/{id}/disable".replace("{id}", encodeURIComponent(String(t))), f);
                        e && (n = e.baseOptions);
                        let a = {
                                method: "POST",
                                ...n,
                                ...r
                            },
                            i = {};
                        await p(i, e), g(s, {});
                        let o = n && n.headers ? n.headers : {};
                        return a.headers = {
                            ...i,
                            ...o,
                            ...r.headers
                        }, {
                            url: y(s),
                            options: a
                        }
                    },
                    getAccount: async (t, r, n = {}) => {
                        let s;
                        h("getAccount", "id", t);
                        let a = new URL("/v1/accounts/{id}".replace("{id}", encodeURIComponent(String(t))), f);
                        e && (s = e.baseOptions);
                        let i = {
                                method: "GET",
                                ...s,
                                ...n
                            },
                            o = {},
                            l = {};
                        await p(o, e), r && (l.expand = r), g(a, l);
                        let c = s && s.headers ? s.headers : {};
                        return i.headers = {
                            ...o,
                            ...c,
                            ...n.headers
                        }, {
                            url: y(a),
                            options: i
                        }
                    },
                    getAccountV2: async (t, r = {}) => {
                        let n;
                        h("getAccountV2", "id", t);
                        let s = new URL("/v2/accounts/{id}".replace("{id}", encodeURIComponent(String(t))), f);
                        e && (n = e.baseOptions);
                        let a = {
                                method: "GET",
                                ...n,
                                ...r
                            },
                            i = {};
                        await p(i, e), g(s, {});
                        let o = n && n.headers ? n.headers : {};
                        return a.headers = {
                            ...i,
                            ...o,
                            ...r.headers
                        }, {
                            url: y(s),
                            options: a
                        }
                    },
                    getAccounts: async (t, r, n, s, a, i, o, l = {}) => {
                        let c, d = new URL("/v1/accounts", f);
                        e && (c = e.baseOptions);
                        let u = {
                                method: "GET",
                                ...c,
                                ...l
                            },
                            h = {},
                            m = {};
                        await p(h, e), void 0 !== t && (m.limit = t), void 0 !== r && (m.skip = r), void 0 !== n && (m.order = n), void 0 !== s && (m.chainId = s), void 0 !== a && (m.player = a), void 0 !== i && (m.address = i), o && (m.expand = o), g(d, m);
                        let b = c && c.headers ? c.headers : {};
                        return u.headers = {
                            ...h,
                            ...b,
                            ...l.headers
                        }, {
                            url: y(d),
                            options: u
                        }
                    },
                    getAccountsV2: async (t, r, n, s, a, i, o, l, c = {}) => {
                        let d, u = new URL("/v2/accounts", f);
                        e && (d = e.baseOptions);
                        let h = {
                                method: "GET",
                                ...d,
                                ...c
                            },
                            m = {},
                            b = {};
                        await p(m, e), void 0 !== t && (b.limit = t), void 0 !== r && (b.skip = r), void 0 !== n && (b.order = n), void 0 !== s && (b.chainId = s), void 0 !== a && (b.user = a), void 0 !== i && (b.chainType = i), void 0 !== o && (b.accountType = o), void 0 !== l && (b.address = l), g(u, b);
                        let x = d && d.headers ? d.headers : {};
                        return h.headers = {
                            ...m,
                            ...x,
                            ...c.headers
                        }, {
                            url: y(u),
                            options: h
                        }
                    },
                    getSignerIdByAddress: async (t, r = {}) => {
                        let n;
                        h("getSignerIdByAddress", "address", t);
                        let s = new URL("/v2/accounts/signer", f);
                        e && (n = e.baseOptions);
                        let a = {
                                method: "GET",
                                ...n,
                                ...r
                            },
                            i = {},
                            o = {};
                        await p(i, e), void 0 !== t && (o.address = t), g(s, o);
                        let l = n && n.headers ? n.headers : {};
                        return a.headers = {
                            ...i,
                            ...l,
                            ...r.headers
                        }, {
                            url: y(s),
                            options: a
                        }
                    },
                    requestTransferOwnership: async (t, r, n = {}) => {
                        let s;
                        h("requestTransferOwnership", "id", t), h("requestTransferOwnership", "transferOwnershipRequest", r);
                        let a = new URL("/v1/accounts/{id}/request_transfer_ownership".replace("{id}", encodeURIComponent(String(t))), f);
                        e && (s = e.baseOptions);
                        let i = {
                                method: "POST",
                                ...s,
                                ...n
                            },
                            o = {};
                        await p(o, e), o["Content-Type"] = "application/json", g(a, {});
                        let l = s && s.headers ? s.headers : {};
                        return i.headers = {
                            ...o,
                            ...l,
                            ...n.headers
                        }, i.data = m(r, i, e), {
                            url: y(a),
                            options: i
                        }
                    },
                    signPayload: async (t, r, n = {}) => {
                        let s;
                        h("signPayload", "id", t), h("signPayload", "signPayloadRequest", r);
                        let a = new URL("/v1/accounts/{id}/sign_payload".replace("{id}", encodeURIComponent(String(t))), f);
                        e && (s = e.baseOptions);
                        let i = {
                                method: "POST",
                                ...s,
                                ...n
                            },
                            o = {};
                        await p(o, e), o["Content-Type"] = "application/json", g(a, {});
                        let l = s && s.headers ? s.headers : {};
                        return i.headers = {
                            ...o,
                            ...l,
                            ...n.headers
                        }, i.data = m(r, i, e), {
                            url: y(a),
                            options: i
                        }
                    },
                    startRecovery: async (t, r, n = {}) => {
                        let s;
                        h("startRecovery", "id", t), h("startRecovery", "startRecoveryRequest", r);
                        let a = new URL("/v1/accounts/{id}/start_recovery".replace("{id}", encodeURIComponent(String(t))), f);
                        e && (s = e.baseOptions);
                        let i = {
                                method: "POST",
                                ...s,
                                ...n
                            },
                            o = {};
                        await p(o, e), o["Content-Type"] = "application/json", g(a, {});
                        let l = s && s.headers ? s.headers : {};
                        return i.headers = {
                            ...o,
                            ...l,
                            ...n.headers
                        }, i.data = m(r, i, e), {
                            url: y(a),
                            options: i
                        }
                    },
                    switchChainV2: async (t, r = {}) => {
                        let n;
                        h("switchChainV2", "switchChainQueriesV2", t);
                        let s = new URL("/v2/accounts/switch-chain", f);
                        e && (n = e.baseOptions);
                        let a = {
                            method: "POST",
                            ...n,
                            ...r
                        };
                        return g(s, {}), a.headers = {
                            "Content-Type": "application/json",
                            ...n && n.headers ? n.headers : {},
                            ...r.headers
                        }, a.data = m(t, a, e), {
                            url: y(s),
                            options: a
                        }
                    },
                    syncAccount: async (t, r = {}) => {
                        let n;
                        h("syncAccount", "id", t);
                        let s = new URL("/v1/accounts/{id}/sync".replace("{id}", encodeURIComponent(String(t))), f);
                        e && (n = e.baseOptions);
                        let a = {
                                method: "POST",
                                ...n,
                                ...r
                            },
                            i = {};
                        await p(i, e), g(s, {});
                        let o = n && n.headers ? n.headers : {};
                        return a.headers = {
                            ...i,
                            ...o,
                            ...r.headers
                        }, {
                            url: y(s),
                            options: a
                        }
                    }
                };
                return {
                    cancelTransferOwnership: async (r, n, s) => b(await t.cancelTransferOwnership(r, n, s), i.default, c, e),
                    completeRecovery: async (r, n, s) => b(await t.completeRecovery(r, n, s), i.default, c, e),
                    createAccount: async (r, n) => b(await t.createAccount(r, n), i.default, c, e),
                    deployAccount: async (r, n, s) => b(await t.deployAccount(r, n, s), i.default, c, e),
                    disableAccount: async (r, n) => b(await t.disableAccount(r, n), i.default, c, e),
                    getAccount: async (r, n, s) => b(await t.getAccount(r, n, s), i.default, c, e),
                    getAccountV2: async (r, n) => b(await t.getAccountV2(r, n), i.default, c, e),
                    getAccounts: async (r, n, s, a, o, l, d, u) => b(await t.getAccounts(r, n, s, a, o, l, d, u), i.default, c, e),
                    getAccountsV2: async (r, n, s, a, o, l, d, u, f) => b(await t.getAccountsV2(r, n, s, a, o, l, d, u, f), i.default, c, e),
                    getSignerIdByAddress: async (r, n) => b(await t.getSignerIdByAddress(r, n), i.default, c, e),
                    requestTransferOwnership: async (r, n, s) => b(await t.requestTransferOwnership(r, n, s), i.default, c, e),
                    signPayload: async (r, n, s) => b(await t.signPayload(r, n, s), i.default, c, e),
                    startRecovery: async (r, n, s) => b(await t.startRecovery(r, n, s), i.default, c, e),
                    switchChainV2: async (r, n) => b(await t.switchChainV2(r, n), i.default, c, e),
                    syncAccount: async (r, n) => b(await t.syncAccount(r, n), i.default, c, e)
                }
            };
        class v extends d {
            cancelTransferOwnership(e, t) {
                return x(this.configuration).cancelTransferOwnership(e.id, e.cancelTransferOwnershipRequest, t).then(e => e(this.axios, this.basePath))
            }
            completeRecovery(e, t) {
                return x(this.configuration).completeRecovery(e.id, e.completeRecoveryRequest, t).then(e => e(this.axios, this.basePath))
            }
            createAccount(e, t) {
                return x(this.configuration).createAccount(e.createAccountRequest, t).then(e => e(this.axios, this.basePath))
            }
            deployAccount(e, t) {
                return x(this.configuration).deployAccount(e.id, e.deployRequest, t).then(e => e(this.axios, this.basePath))
            }
            disableAccount(e, t) {
                return x(this.configuration).disableAccount(e.id, t).then(e => e(this.axios, this.basePath))
            }
            getAccount(e, t) {
                return x(this.configuration).getAccount(e.id, e.expand, t).then(e => e(this.axios, this.basePath))
            }
            getAccountV2(e, t) {
                return x(this.configuration).getAccountV2(e.id, t).then(e => e(this.axios, this.basePath))
            }
            getAccounts(e = {}, t) {
                return x(this.configuration).getAccounts(e.limit, e.skip, e.order, e.chainId, e.player, e.address, e.expand, t).then(e => e(this.axios, this.basePath))
            }
            getAccountsV2(e = {}, t) {
                return x(this.configuration).getAccountsV2(e.limit, e.skip, e.order, e.chainId, e.user, e.chainType, e.accountType, e.address, t).then(e => e(this.axios, this.basePath))
            }
            getSignerIdByAddress(e, t) {
                return x(this.configuration).getSignerIdByAddress(e.address, t).then(e => e(this.axios, this.basePath))
            }
            requestTransferOwnership(e, t) {
                return x(this.configuration).requestTransferOwnership(e.id, e.transferOwnershipRequest, t).then(e => e(this.axios, this.basePath))
            }
            signPayload(e, t) {
                return x(this.configuration).signPayload(e.id, e.signPayloadRequest, t).then(e => e(this.axios, this.basePath))
            }
            startRecovery(e, t) {
                return x(this.configuration).startRecovery(e.id, e.startRecoveryRequest, t).then(e => e(this.axios, this.basePath))
            }
            switchChainV2(e, t) {
                return x(this.configuration).switchChainV2(e.switchChainQueriesV2, t).then(e => e(this.axios, this.basePath))
            }
            syncAccount(e, t) {
                return x(this.configuration).syncAccount(e.id, t).then(e => e(this.axios, this.basePath))
            }
        }
        let w = function(e) {
            let t = {
                authenticateSIWE: async (t, r = {}) => {
                    let n;
                    h("authenticateSIWE", "sIWEAuthenticateRequest", t);
                    let s = new URL("/iam/v1/siwe/authenticate", f);
                    e && (n = e.baseOptions);
                    let a = {
                            method: "POST",
                            ...n,
                            ...r
                        },
                        i = {};
                    await p(i, e), i["Content-Type"] = "application/json", g(s, {});
                    let o = n && n.headers ? n.headers : {};
                    return a.headers = {
                        ...i,
                        ...o,
                        ...r.headers
                    }, a.data = m(t, a, e), {
                        url: y(s),
                        options: a
                    }
                },
                getJwks: async (t, r = {}) => {
                    let n;
                    h("getJwks", "publishableKey", t);
                    let s = new URL("/iam/v1/{publishable_key}/jwks.json".replace("{publishable_key}", encodeURIComponent(String(t))), f);
                    e && (n = e.baseOptions);
                    let a = {
                        method: "GET",
                        ...n,
                        ...r
                    };
                    return g(s, {}), a.headers = {
                        ...n && n.headers ? n.headers : {},
                        ...r.headers
                    }, {
                        url: y(s),
                        options: a
                    }
                },
                initOAuth: async (t, r, n = {}) => {
                    let s;
                    h("initOAuth", "oAuthInitRequest", t);
                    let a = new URL("/iam/v1/oauth/init", f);
                    e && (s = e.baseOptions);
                    let i = {
                            method: "POST",
                            ...s,
                            ...n
                        },
                        o = {};
                    await p(o, e), null != r && (o["x-game"] = String(r)), o["Content-Type"] = "application/json", g(a, {});
                    let l = s && s.headers ? s.headers : {};
                    return i.headers = {
                        ...o,
                        ...l,
                        ...n.headers
                    }, i.data = m(t, i, e), {
                        url: y(a),
                        options: i
                    }
                },
                initSIWE: async (t, r, n = {}) => {
                    let s;
                    h("initSIWE", "sIWERequest", t);
                    let a = new URL("/iam/v1/siwe/init", f);
                    e && (s = e.baseOptions);
                    let i = {
                            method: "POST",
                            ...s,
                            ...n
                        },
                        o = {};
                    await p(o, e), null != r && (o["x-game"] = String(r)), o["Content-Type"] = "application/json", g(a, {});
                    let l = s && s.headers ? s.headers : {};
                    return i.headers = {
                        ...o,
                        ...l,
                        ...n.headers
                    }, i.data = m(t, i, e), {
                        url: y(a),
                        options: i
                    }
                },
                linkEmail: async (t, r, n = {}) => {
                    let s;
                    h("linkEmail", "loginRequest", t);
                    let a = new URL("/iam/v1/password/link", f);
                    e && (s = e.baseOptions);
                    let i = {
                            method: "POST",
                            ...s,
                            ...n
                        },
                        o = {};
                    null != r && (o["x-game"] = String(r)), o["Content-Type"] = "application/json", g(a, {});
                    let l = s && s.headers ? s.headers : {};
                    return i.headers = {
                        ...o,
                        ...l,
                        ...n.headers
                    }, i.data = m(t, i, e), {
                        url: y(a),
                        options: i
                    }
                },
                linkOAuth: async (t, r, n = {}) => {
                    let s;
                    h("linkOAuth", "oAuthInitRequest", t);
                    let a = new URL("/iam/v1/oauth/init_link", f);
                    e && (s = e.baseOptions);
                    let i = {
                            method: "POST",
                            ...s,
                            ...n
                        },
                        o = {};
                    null != r && (o["x-game"] = String(r)), o["Content-Type"] = "application/json", g(a, {});
                    let l = s && s.headers ? s.headers : {};
                    return i.headers = {
                        ...o,
                        ...l,
                        ...n.headers
                    }, i.data = m(t, i, e), {
                        url: y(a),
                        options: i
                    }
                },
                linkSIWE: async (t, r = {}) => {
                    let n;
                    h("linkSIWE", "sIWEAuthenticateRequest", t);
                    let s = new URL("/iam/v1/siwe/link", f);
                    e && (n = e.baseOptions);
                    let a = {
                        method: "POST",
                        ...n,
                        ...r
                    };
                    return g(s, {}), a.headers = {
                        "Content-Type": "application/json",
                        ...n && n.headers ? n.headers : {},
                        ...r.headers
                    }, a.data = m(t, a, e), {
                        url: y(s),
                        options: a
                    }
                },
                linkThirdParty: async (t, r, n = {}) => {
                    let s;
                    h("linkThirdParty", "thirdPartyLinkRequest", t);
                    let a = new URL("/iam/v1/oauth/link", f);
                    e && (s = e.baseOptions);
                    let i = {
                            method: "POST",
                            ...s,
                            ...n
                        },
                        o = {};
                    null != r && (o["x-game"] = String(r)), o["Content-Type"] = "application/json", g(a, {});
                    let l = s && s.headers ? s.headers : {};
                    return i.headers = {
                        ...o,
                        ...l,
                        ...n.headers
                    }, i.data = m(t, i, e), {
                        url: y(a),
                        options: i
                    }
                },
                loginEmailPassword: async (t, r, n = {}) => {
                    let s;
                    h("loginEmailPassword", "loginRequest", t);
                    let a = new URL("/iam/v1/password/login", f);
                    e && (s = e.baseOptions);
                    let i = {
                            method: "POST",
                            ...s,
                            ...n
                        },
                        o = {};
                    await p(o, e), null != r && (o["x-game"] = String(r)), o["Content-Type"] = "application/json", g(a, {});
                    let l = s && s.headers ? s.headers : {};
                    return i.headers = {
                        ...o,
                        ...l,
                        ...n.headers
                    }, i.data = m(t, i, e), {
                        url: y(a),
                        options: i
                    }
                },
                loginOIDC: async (t, r, n = {}) => {
                    let s;
                    h("loginOIDC", "loginOIDCRequest", t);
                    let a = new URL("/iam/v1/oidc/login", f);
                    e && (s = e.baseOptions);
                    let i = {
                            method: "POST",
                            ...s,
                            ...n
                        },
                        o = {};
                    await p(o, e), null != r && (o["x-game"] = String(r)), o["Content-Type"] = "application/json", g(a, {});
                    let l = s && s.headers ? s.headers : {};
                    return i.headers = {
                        ...o,
                        ...l,
                        ...n.headers
                    }, i.data = m(t, i, e), {
                        url: y(a),
                        options: i
                    }
                },
                loginWithIdToken: async (t, r = {}) => {
                    let n;
                    h("loginWithIdToken", "loginWithIdTokenRequest", t);
                    let s = new URL("/iam/v1/oauth/login_id_token", f);
                    e && (n = e.baseOptions);
                    let a = {
                            method: "POST",
                            ...n,
                            ...r
                        },
                        i = {};
                    await p(i, e), i["Content-Type"] = "application/json", g(s, {});
                    let o = n && n.headers ? n.headers : {};
                    return a.headers = {
                        ...i,
                        ...o,
                        ...r.headers
                    }, a.data = m(t, a, e), {
                        url: y(s),
                        options: a
                    }
                },
                logout: async (t, r = {}) => {
                    let n;
                    h("logout", "logoutRequest", t);
                    let s = new URL("/iam/v1/sessions/logout", f);
                    e && (n = e.baseOptions);
                    let a = {
                        method: "POST",
                        ...n,
                        ...r
                    };
                    return g(s, {}), a.headers = {
                        "Content-Type": "application/json",
                        ...n && n.headers ? n.headers : {},
                        ...r.headers
                    }, a.data = m(t, a, e), {
                        url: y(s),
                        options: a
                    }
                },
                me: async (t = {}) => {
                    let r, n = new URL("/iam/v1/me", f);
                    e && (r = e.baseOptions);
                    let s = {
                        method: "GET",
                        ...r,
                        ...t
                    };
                    return g(n, {}), s.headers = {
                        ...r && r.headers ? r.headers : {},
                        ...t.headers
                    }, {
                        url: y(n),
                        options: s
                    }
                },
                poolOAuth: async (t, r = {}) => {
                    let n;
                    h("poolOAuth", "key", t);
                    let s = new URL("/iam/v1/oauth/pool", f);
                    e && (n = e.baseOptions);
                    let a = {
                            method: "POST",
                            ...n,
                            ...r
                        },
                        i = {},
                        o = {};
                    await p(i, e), void 0 !== t && (o.key = t), g(s, o);
                    let l = n && n.headers ? n.headers : {};
                    return a.headers = {
                        ...i,
                        ...l,
                        ...r.headers
                    }, {
                        url: y(s),
                        options: a
                    }
                },
                refresh: async (t, r = {}) => {
                    let n;
                    h("refresh", "refreshTokenRequest", t);
                    let s = new URL("/iam/v1/sessions", f);
                    e && (n = e.baseOptions);
                    let a = {
                            method: "POST",
                            ...n,
                            ...r
                        },
                        i = {};
                    await p(i, e), i["Content-Type"] = "application/json", g(s, {});
                    let o = n && n.headers ? n.headers : {};
                    return a.headers = {
                        ...i,
                        ...o,
                        ...r.headers
                    }, a.data = m(t, a, e), {
                        url: y(s),
                        options: a
                    }
                },
                registerGuest: async (t, r = {}) => {
                    let n, s = new URL("/iam/v1/guest", f);
                    e && (n = e.baseOptions);
                    let a = {
                            method: "POST",
                            ...n,
                            ...r
                        },
                        i = {};
                    await p(i, e), null != t && (i["x-game"] = String(t)), g(s, {});
                    let o = n && n.headers ? n.headers : {};
                    return a.headers = {
                        ...i,
                        ...o,
                        ...r.headers
                    }, {
                        url: y(s),
                        options: a
                    }
                },
                requestEmailVerification: async (t, r = {}) => {
                    let n;
                    h("requestEmailVerification", "requestVerifyEmailRequest", t);
                    let s = new URL("/iam/v1/password/request_email_verification", f);
                    e && (n = e.baseOptions);
                    let a = {
                            method: "POST",
                            ...n,
                            ...r
                        },
                        i = {};
                    await p(i, e), i["Content-Type"] = "application/json", g(s, {});
                    let o = n && n.headers ? n.headers : {};
                    return a.headers = {
                        ...i,
                        ...o,
                        ...r.headers
                    }, a.data = m(t, a, e), {
                        url: y(s),
                        options: a
                    }
                },
                requestResetPassword: async (t, r = {}) => {
                    let n;
                    h("requestResetPassword", "requestResetPasswordRequest", t);
                    let s = new URL("/iam/v1/password/request_reset", f);
                    e && (n = e.baseOptions);
                    let a = {
                            method: "POST",
                            ...n,
                            ...r
                        },
                        i = {};
                    await p(i, e), i["Content-Type"] = "application/json", g(s, {});
                    let o = n && n.headers ? n.headers : {};
                    return a.headers = {
                        ...i,
                        ...o,
                        ...r.headers
                    }, a.data = m(t, a, e), {
                        url: y(s),
                        options: a
                    }
                },
                resetPassword: async (t, r = {}) => {
                    let n;
                    h("resetPassword", "resetPasswordRequest", t);
                    let s = new URL("/iam/v1/password/reset", f);
                    e && (n = e.baseOptions);
                    let a = {
                            method: "POST",
                            ...n,
                            ...r
                        },
                        i = {};
                    await p(i, e), i["Content-Type"] = "application/json", g(s, {});
                    let o = n && n.headers ? n.headers : {};
                    return a.headers = {
                        ...i,
                        ...o,
                        ...r.headers
                    }, a.data = m(t, a, e), {
                        url: y(s),
                        options: a
                    }
                },
                signupEmailPassword: async (t, r, n = {}) => {
                    let s;
                    h("signupEmailPassword", "signupRequest", t);
                    let a = new URL("/iam/v1/password/signup", f);
                    e && (s = e.baseOptions);
                    let i = {
                            method: "POST",
                            ...s,
                            ...n
                        },
                        o = {};
                    await p(o, e), null != r && (o["x-game"] = String(r)), o["Content-Type"] = "application/json", g(a, {});
                    let l = s && s.headers ? s.headers : {};
                    return i.headers = {
                        ...o,
                        ...l,
                        ...n.headers
                    }, i.data = m(t, i, e), {
                        url: y(a),
                        options: i
                    }
                },
                thirdParty: async (t, r, n = {}) => {
                    let s;
                    h("thirdParty", "thirdPartyOAuthRequest", t);
                    let a = new URL("/iam/v1/oauth/third_party", f);
                    e && (s = e.baseOptions);
                    let i = {
                            method: "POST",
                            ...s,
                            ...n
                        },
                        o = {};
                    await p(o, e), null != r && (o["x-game"] = String(r)), o["Content-Type"] = "application/json", g(a, {});
                    let l = s && s.headers ? s.headers : {};
                    return i.headers = {
                        ...o,
                        ...l,
                        ...n.headers
                    }, i.data = m(t, i, e), {
                        url: y(a),
                        options: i
                    }
                },
                unlinkEmail: async (t, r = {}) => {
                    let n;
                    h("unlinkEmail", "unlinkEmailRequest", t);
                    let s = new URL("/iam/v1/password/unlink", f);
                    e && (n = e.baseOptions);
                    let a = {
                        method: "POST",
                        ...n,
                        ...r
                    };
                    return g(s, {}), a.headers = {
                        "Content-Type": "application/json",
                        ...n && n.headers ? n.headers : {},
                        ...r.headers
                    }, a.data = m(t, a, e), {
                        url: y(s),
                        options: a
                    }
                },
                unlinkOAuth: async (t, r = {}) => {
                    let n;
                    h("unlinkOAuth", "unlinkOAuthRequest", t);
                    let s = new URL("/iam/v1/oauth/unlink", f);
                    e && (n = e.baseOptions);
                    let a = {
                        method: "POST",
                        ...n,
                        ...r
                    };
                    return g(s, {}), a.headers = {
                        "Content-Type": "application/json",
                        ...n && n.headers ? n.headers : {},
                        ...r.headers
                    }, a.data = m(t, a, e), {
                        url: y(s),
                        options: a
                    }
                },
                unlinkSIWE: async (t, r = {}) => {
                    let n;
                    h("unlinkSIWE", "sIWERequest", t);
                    let s = new URL("/iam/v1/siwe/unlink", f);
                    e && (n = e.baseOptions);
                    let a = {
                        method: "POST",
                        ...n,
                        ...r
                    };
                    return g(s, {}), a.headers = {
                        "Content-Type": "application/json",
                        ...n && n.headers ? n.headers : {},
                        ...r.headers
                    }, a.data = m(t, a, e), {
                        url: y(s),
                        options: a
                    }
                },
                verifyEmail: async (t, r = {}) => {
                    let n;
                    h("verifyEmail", "verifyEmailRequest", t);
                    let s = new URL("/iam/v1/password/verify_email", f);
                    e && (n = e.baseOptions);
                    let a = {
                            method: "POST",
                            ...n,
                            ...r
                        },
                        i = {};
                    await p(i, e), i["Content-Type"] = "application/json", g(s, {});
                    let o = n && n.headers ? n.headers : {};
                    return a.headers = {
                        ...i,
                        ...o,
                        ...r.headers
                    }, a.data = m(t, a, e), {
                        url: y(s),
                        options: a
                    }
                },
                verifyOAuthToken: async (t, r = {}) => {
                    let n;
                    h("verifyOAuthToken", "authenticateOAuthRequest", t);
                    let s = new URL("/iam/v1/oauth/verify", f);
                    e && (n = e.baseOptions);
                    let a = {
                            method: "POST",
                            ...n,
                            ...r
                        },
                        i = {};
                    await p(i, e), i["Content-Type"] = "application/json", g(s, {});
                    let o = n && n.headers ? n.headers : {};
                    return a.headers = {
                        ...i,
                        ...o,
                        ...r.headers
                    }, a.data = m(t, a, e), {
                        url: y(s),
                        options: a
                    }
                }
            };
            return {
                authenticateSIWE: async (r, n) => b(await t.authenticateSIWE(r, n), i.default, c, e),
                getJwks: async (r, n) => b(await t.getJwks(r, n), i.default, c, e),
                initOAuth: async (r, n, s) => b(await t.initOAuth(r, n, s), i.default, c, e),
                initSIWE: async (r, n, s) => b(await t.initSIWE(r, n, s), i.default, c, e),
                linkEmail: async (r, n, s) => b(await t.linkEmail(r, n, s), i.default, c, e),
                linkOAuth: async (r, n, s) => b(await t.linkOAuth(r, n, s), i.default, c, e),
                linkSIWE: async (r, n) => b(await t.linkSIWE(r, n), i.default, c, e),
                linkThirdParty: async (r, n, s) => b(await t.linkThirdParty(r, n, s), i.default, c, e),
                loginEmailPassword: async (r, n, s) => b(await t.loginEmailPassword(r, n, s), i.default, c, e),
                loginOIDC: async (r, n, s) => b(await t.loginOIDC(r, n, s), i.default, c, e),
                loginWithIdToken: async (r, n) => b(await t.loginWithIdToken(r, n), i.default, c, e),
                logout: async (r, n) => b(await t.logout(r, n), i.default, c, e),
                me: async r => b(await t.me(r), i.default, c, e),
                poolOAuth: async (r, n) => b(await t.poolOAuth(r, n), i.default, c, e),
                refresh: async (r, n) => b(await t.refresh(r, n), i.default, c, e),
                registerGuest: async (r, n) => b(await t.registerGuest(r, n), i.default, c, e),
                requestEmailVerification: async (r, n) => b(await t.requestEmailVerification(r, n), i.default, c, e),
                requestResetPassword: async (r, n) => b(await t.requestResetPassword(r, n), i.default, c, e),
                resetPassword: async (r, n) => b(await t.resetPassword(r, n), i.default, c, e),
                signupEmailPassword: async (r, n, s) => b(await t.signupEmailPassword(r, n, s), i.default, c, e),
                thirdParty: async (r, n, s) => b(await t.thirdParty(r, n, s), i.default, c, e),
                unlinkEmail: async (r, n) => b(await t.unlinkEmail(r, n), i.default, c, e),
                unlinkOAuth: async (r, n) => b(await t.unlinkOAuth(r, n), i.default, c, e),
                unlinkSIWE: async (r, n) => b(await t.unlinkSIWE(r, n), i.default, c, e),
                verifyEmail: async (r, n) => b(await t.verifyEmail(r, n), i.default, c, e),
                verifyOAuthToken: async (r, n) => b(await t.verifyOAuthToken(r, n), i.default, c, e)
            }
        };
        class E extends d {
            authenticateSIWE(e, t) {
                return w(this.configuration).authenticateSIWE(e.sIWEAuthenticateRequest, t).then(e => e(this.axios, this.basePath))
            }
            getJwks(e, t) {
                return w(this.configuration).getJwks(e.publishableKey, t).then(e => e(this.axios, this.basePath))
            }
            initOAuth(e, t) {
                return w(this.configuration).initOAuth(e.oAuthInitRequest, e.xGame, t).then(e => e(this.axios, this.basePath))
            }
            initSIWE(e, t) {
                return w(this.configuration).initSIWE(e.sIWERequest, e.xGame, t).then(e => e(this.axios, this.basePath))
            }
            linkEmail(e, t) {
                return w(this.configuration).linkEmail(e.loginRequest, e.xGame, t).then(e => e(this.axios, this.basePath))
            }
            linkOAuth(e, t) {
                return w(this.configuration).linkOAuth(e.oAuthInitRequest, e.xGame, t).then(e => e(this.axios, this.basePath))
            }
            linkSIWE(e, t) {
                return w(this.configuration).linkSIWE(e.sIWEAuthenticateRequest, t).then(e => e(this.axios, this.basePath))
            }
            linkThirdParty(e, t) {
                return w(this.configuration).linkThirdParty(e.thirdPartyLinkRequest, e.xGame, t).then(e => e(this.axios, this.basePath))
            }
            loginEmailPassword(e, t) {
                return w(this.configuration).loginEmailPassword(e.loginRequest, e.xGame, t).then(e => e(this.axios, this.basePath))
            }
            loginOIDC(e, t) {
                return w(this.configuration).loginOIDC(e.loginOIDCRequest, e.xGame, t).then(e => e(this.axios, this.basePath))
            }
            loginWithIdToken(e, t) {
                return w(this.configuration).loginWithIdToken(e.loginWithIdTokenRequest, t).then(e => e(this.axios, this.basePath))
            }
            logout(e, t) {
                return w(this.configuration).logout(e.logoutRequest, t).then(e => e(this.axios, this.basePath))
            }
            me(e) {
                return w(this.configuration).me(e).then(e => e(this.axios, this.basePath))
            }
            poolOAuth(e, t) {
                return w(this.configuration).poolOAuth(e.key, t).then(e => e(this.axios, this.basePath))
            }
            refresh(e, t) {
                return w(this.configuration).refresh(e.refreshTokenRequest, t).then(e => e(this.axios, this.basePath))
            }
            registerGuest(e = {}, t) {
                return w(this.configuration).registerGuest(e.xGame, t).then(e => e(this.axios, this.basePath))
            }
            requestEmailVerification(e, t) {
                return w(this.configuration).requestEmailVerification(e.requestVerifyEmailRequest, t).then(e => e(this.axios, this.basePath))
            }
            requestResetPassword(e, t) {
                return w(this.configuration).requestResetPassword(e.requestResetPasswordRequest, t).then(e => e(this.axios, this.basePath))
            }
            resetPassword(e, t) {
                return w(this.configuration).resetPassword(e.resetPasswordRequest, t).then(e => e(this.axios, this.basePath))
            }
            signupEmailPassword(e, t) {
                return w(this.configuration).signupEmailPassword(e.signupRequest, e.xGame, t).then(e => e(this.axios, this.basePath))
            }
            thirdParty(e, t) {
                return w(this.configuration).thirdParty(e.thirdPartyOAuthRequest, e.xGame, t).then(e => e(this.axios, this.basePath))
            }
            unlinkEmail(e, t) {
                return w(this.configuration).unlinkEmail(e.unlinkEmailRequest, t).then(e => e(this.axios, this.basePath))
            }
            unlinkOAuth(e, t) {
                return w(this.configuration).unlinkOAuth(e.unlinkOAuthRequest, t).then(e => e(this.axios, this.basePath))
            }
            unlinkSIWE(e, t) {
                return w(this.configuration).unlinkSIWE(e.sIWERequest, t).then(e => e(this.axios, this.basePath))
            }
            verifyEmail(e, t) {
                return w(this.configuration).verifyEmail(e.verifyEmailRequest, t).then(e => e(this.axios, this.basePath))
            }
            verifyOAuthToken(e, t) {
                return w(this.configuration).verifyOAuthToken(e.authenticateOAuthRequest, t).then(e => e(this.axios, this.basePath))
            }
        }
        let A = function(e) {
            let t = {
                createSession: async (t, r, n = {}) => {
                    let s;
                    h("createSession", "createSessionRequest", t);
                    let a = new URL("/v1/sessions", f);
                    e && (s = e.baseOptions);
                    let i = {
                            method: "POST",
                            ...s,
                            ...n
                        },
                        o = {};
                    await p(o, e), null != r && (o["X-Behalf-Of-Project"] = String(r)), o["Content-Type"] = "application/json", g(a, {});
                    let l = s && s.headers ? s.headers : {};
                    return i.headers = {
                        ...o,
                        ...l,
                        ...n.headers
                    }, i.data = m(t, i, e), {
                        url: y(a),
                        options: i
                    }
                },
                getPlayerSessions: async (t, r, n, s, a, i = {}) => {
                    let o;
                    h("getPlayerSessions", "player", t);
                    let l = new URL("/v1/sessions", f);
                    e && (o = e.baseOptions);
                    let c = {
                            method: "GET",
                            ...o,
                            ...i
                        },
                        d = {},
                        u = {};
                    await p(d, e), void 0 !== r && (u.limit = r), void 0 !== n && (u.skip = n), void 0 !== s && (u.order = s), void 0 !== t && (u.player = t), a && (u.expand = a), g(l, u);
                    let m = o && o.headers ? o.headers : {};
                    return c.headers = {
                        ...d,
                        ...m,
                        ...i.headers
                    }, {
                        url: y(l),
                        options: c
                    }
                },
                getSession: async (t, r, n = {}) => {
                    let s;
                    h("getSession", "id", t);
                    let a = new URL("/v1/sessions/{id}".replace("{id}", encodeURIComponent(String(t))), f);
                    e && (s = e.baseOptions);
                    let i = {
                            method: "GET",
                            ...s,
                            ...n
                        },
                        o = {},
                        l = {};
                    await p(o, e), r && (l.expand = r), g(a, l);
                    let c = s && s.headers ? s.headers : {};
                    return i.headers = {
                        ...o,
                        ...c,
                        ...n.headers
                    }, {
                        url: y(a),
                        options: i
                    }
                },
                revokeSession: async (t, r, n = {}) => {
                    let s;
                    h("revokeSession", "revokeSessionRequest", t);
                    let a = new URL("/v1/sessions/revoke", f);
                    e && (s = e.baseOptions);
                    let i = {
                            method: "POST",
                            ...s,
                            ...n
                        },
                        o = {};
                    await p(o, e), null != r && (o["X-Behalf-Of-Project"] = String(r)), o["Content-Type"] = "application/json", g(a, {});
                    let l = s && s.headers ? s.headers : {};
                    return i.headers = {
                        ...o,
                        ...l,
                        ...n.headers
                    }, i.data = m(t, i, e), {
                        url: y(a),
                        options: i
                    }
                },
                signatureSession: async (t, r, n = {}) => {
                    let s;
                    h("signatureSession", "id", t), h("signatureSession", "signatureRequest", r);
                    let a = new URL("/v1/sessions/{id}/signature".replace("{id}", encodeURIComponent(String(t))), f);
                    e && (s = e.baseOptions);
                    let i = {
                            method: "POST",
                            ...s,
                            ...n
                        },
                        o = {};
                    await p(o, e), await p(o, e), o["Content-Type"] = "application/json", g(a, {});
                    let l = s && s.headers ? s.headers : {};
                    return i.headers = {
                        ...o,
                        ...l,
                        ...n.headers
                    }, i.data = m(r, i, e), {
                        url: y(a),
                        options: i
                    }
                }
            };
            return {
                createSession: async (r, n, s) => b(await t.createSession(r, n, s), i.default, c, e),
                getPlayerSessions: async (r, n, s, a, o, l) => b(await t.getPlayerSessions(r, n, s, a, o, l), i.default, c, e),
                getSession: async (r, n, s) => b(await t.getSession(r, n, s), i.default, c, e),
                revokeSession: async (r, n, s) => b(await t.revokeSession(r, n, s), i.default, c, e),
                signatureSession: async (r, n, s) => b(await t.signatureSession(r, n, s), i.default, c, e)
            }
        };
        class j extends d {
            createSession(e, t) {
                return A(this.configuration).createSession(e.createSessionRequest, e.xBehalfOfProject, t).then(e => e(this.axios, this.basePath))
            }
            getPlayerSessions(e, t) {
                return A(this.configuration).getPlayerSessions(e.player, e.limit, e.skip, e.order, e.expand, t).then(e => e(this.axios, this.basePath))
            }
            getSession(e, t) {
                return A(this.configuration).getSession(e.id, e.expand, t).then(e => e(this.axios, this.basePath))
            }
            revokeSession(e, t) {
                return A(this.configuration).revokeSession(e.revokeSessionRequest, e.xBehalfOfProject, t).then(e => e(this.axios, this.basePath))
            }
            signatureSession(e, t) {
                return A(this.configuration).signatureSession(e.id, e.signatureRequest, t).then(e => e(this.axios, this.basePath))
            }
        }
        let I = function(e) {
            let t = {
                createTransactionIntent: async (t, r, n = {}) => {
                    let s;
                    h("createTransactionIntent", "createTransactionIntentRequest", t);
                    let a = new URL("/v1/transaction_intents", f);
                    e && (s = e.baseOptions);
                    let i = {
                            method: "POST",
                            ...s,
                            ...n
                        },
                        o = {};
                    await p(o, e), null != r && (o["X-Behalf-Of-Project"] = String(r)), o["Content-Type"] = "application/json", g(a, {});
                    let l = s && s.headers ? s.headers : {};
                    return i.headers = {
                        ...o,
                        ...l,
                        ...n.headers
                    }, i.data = m(t, i, e), {
                        url: y(a),
                        options: i
                    }
                },
                estimateTransactionIntentCost: async (t, r = {}) => {
                    let n;
                    h("estimateTransactionIntentCost", "createTransactionIntentRequest", t);
                    let s = new URL("/v1/transaction_intents/estimate_gas_cost", f);
                    e && (n = e.baseOptions);
                    let a = {
                            method: "POST",
                            ...n,
                            ...r
                        },
                        i = {};
                    await p(i, e), i["Content-Type"] = "application/json", g(s, {});
                    let o = n && n.headers ? n.headers : {};
                    return a.headers = {
                        ...i,
                        ...o,
                        ...r.headers
                    }, a.data = m(t, a, e), {
                        url: y(s),
                        options: a
                    }
                },
                getTransactionIntent: async (t, r, n = {}) => {
                    let s;
                    h("getTransactionIntent", "id", t);
                    let a = new URL("/v1/transaction_intents/{id}".replace("{id}", encodeURIComponent(String(t))), f);
                    e && (s = e.baseOptions);
                    let i = {
                            method: "GET",
                            ...s,
                            ...n
                        },
                        o = {},
                        l = {};
                    await p(o, e), r && (l.expand = r), g(a, l);
                    let c = s && s.headers ? s.headers : {};
                    return i.headers = {
                        ...o,
                        ...c,
                        ...n.headers
                    }, {
                        url: y(a),
                        options: i
                    }
                },
                getTransactionIntents: async (t, r, n, s, a, i, o, l, c, d = {}) => {
                    let u, h = new URL("/v1/transaction_intents", f);
                    e && (u = e.baseOptions);
                    let m = {
                            method: "GET",
                            ...u,
                            ...d
                        },
                        b = {},
                        x = {};
                    await p(b, e), void 0 !== t && (x.limit = t), void 0 !== r && (x.skip = r), void 0 !== n && (x.order = n), s && (x.expand = s), void 0 !== a && (x.chainId = a), i && (x.account = i), o && (x.player = o), void 0 !== l && (x.status = l), c && (x.policy = c), g(h, x);
                    let v = u && u.headers ? u.headers : {};
                    return m.headers = {
                        ...b,
                        ...v,
                        ...d.headers
                    }, {
                        url: y(h),
                        options: m
                    }
                },
                signature: async (t, r, n = {}) => {
                    let s;
                    h("signature", "id", t), h("signature", "signatureRequest", r);
                    let a = new URL("/v1/transaction_intents/{id}/signature".replace("{id}", encodeURIComponent(String(t))), f);
                    e && (s = e.baseOptions);
                    let i = {
                            method: "POST",
                            ...s,
                            ...n
                        },
                        o = {};
                    await p(o, e), await p(o, e), o["Content-Type"] = "application/json", g(a, {});
                    let l = s && s.headers ? s.headers : {};
                    return i.headers = {
                        ...o,
                        ...l,
                        ...n.headers
                    }, i.data = m(r, i, e), {
                        url: y(a),
                        options: i
                    }
                }
            };
            return {
                createTransactionIntent: async (r, n, s) => b(await t.createTransactionIntent(r, n, s), i.default, c, e),
                estimateTransactionIntentCost: async (r, n) => b(await t.estimateTransactionIntentCost(r, n), i.default, c, e),
                getTransactionIntent: async (r, n, s) => b(await t.getTransactionIntent(r, n, s), i.default, c, e),
                getTransactionIntents: async (r, n, s, a, o, l, d, u, f, h) => b(await t.getTransactionIntents(r, n, s, a, o, l, d, u, f, h), i.default, c, e),
                signature: async (r, n, s) => b(await t.signature(r, n, s), i.default, c, e)
            }
        };
        class S extends d {
            createTransactionIntent(e, t) {
                return I(this.configuration).createTransactionIntent(e.createTransactionIntentRequest, e.xBehalfOfProject, t).then(e => e(this.axios, this.basePath))
            }
            estimateTransactionIntentCost(e, t) {
                return I(this.configuration).estimateTransactionIntentCost(e.createTransactionIntentRequest, t).then(e => e(this.axios, this.basePath))
            }
            getTransactionIntent(e, t) {
                return I(this.configuration).getTransactionIntent(e.id, e.expand, t).then(e => e(this.axios, this.basePath))
            }
            getTransactionIntents(e = {}, t) {
                return I(this.configuration).getTransactionIntents(e.limit, e.skip, e.order, e.expand, e.chainId, e.account, e.player, e.status, e.policy, t).then(e => e(this.axios, this.basePath))
            }
            signature(e, t) {
                return I(this.configuration).signature(e.id, e.signatureRequest, t).then(e => e(this.axios, this.basePath))
            }
        }
        class R {
            apiKey;
            username;
            password;
            accessToken;
            basePath;
            baseOptions;
            formDataCtor;
            constructor(e = {}) {
                this.apiKey = e.apiKey, this.username = e.username, this.password = e.password, this.accessToken = e.accessToken, this.basePath = e.basePath, this.baseOptions = e.baseOptions, this.formDataCtor = e.formDataCtor
            }
            isJsonMime(e) {
                let t = RegExp("^(application/json|[^;/     ]+/[^;/     ]+[+]json)[     ]*(;.*)?$", "i");
                return null !== e && (t.test(e) || "application/json-patch+json" === e.toLowerCase())
            }
        }
        let k = ({
            basePath: e,
            accessToken: t
        }) => {
            if (!e.trim()) throw Error("basePath can not be empty");
            return new R({
                basePath: e,
                accessToken: t
            })
        };
        class _ {
            config;
            transactionIntentsApi;
            accountsApi;
            sessionsApi;
            authenticationApi;
            constructor(e) {
                let t = i.default.create();
                (0, l.default)(t, {
                    retries: 3,
                    retryDelay: l.default.exponentialDelay,
                    retryCondition: l.default.isRetryableError
                });
                let r = {
                    basePath: e.basePath,
                    accessToken: e.accessToken
                };
                this.config = {
                    backend: k(r)
                }, this.transactionIntentsApi = new S(this.config.backend, void 0, t), this.accountsApi = new v(this.config.backend, void 0, t), this.sessionsApi = new j(this.config.backend, void 0, t), this.authenticationApi = new E(this.config.backend, void 0, t)
            }
        }
    }, {
        axios: "jhAcT",
        "axios-retry": "8va09",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "8va09": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "namespace", () => o), s.export(r, "isNetworkError", () => l), s.export(r, "isRetryableError", () => u), s.export(r, "isSafeRequestError", () => f), s.export(r, "isIdempotentRequestError", () => h), s.export(r, "isNetworkOrIdempotentRequestError", () => p), s.export(r, "retryAfter", () => g), s.export(r, "exponentialDelay", () => m), s.export(r, "linearDelay", () => y), s.export(r, "DEFAULT_OPTIONS", () => b);
        var a = e("is-retry-allowed"),
            i = s.interopDefault(a);
        let o = "axios-retry";

        function l(e) {
            return !(e.response || !e.code || ["ERR_CANCELED", "ECONNABORTED"].includes(e.code)) && (0, i.default)(e)
        }
        let c = ["get", "head", "options"],
            d = c.concat(["put", "delete"]);

        function u(e) {
            return "ECONNABORTED" !== e.code && (!e.response || 429 === e.response.status || e.response.status >= 500 && e.response.status <= 599)
        }

        function f(e) {
            return !!e.config?.method && u(e) && -1 !== c.indexOf(e.config.method)
        }

        function h(e) {
            return !!e.config?.method && u(e) && -1 !== d.indexOf(e.config.method)
        }

        function p(e) {
            return l(e) || h(e)
        }

        function g(e) {
            let t = e?.response?.headers["retry-after"];
            if (!t) return 0;
            let r = 1e3 * (Number(t) || 0);
            return 0 === r && (r = (new Date(t).valueOf() || 0) - Date.now()), Math.max(0, r)
        }

        function m(e = 0, t, r = 100) {
            let n = Math.max(2 ** e * r, g(t)),
                s = .2 * n * Math.random();
            return n + s
        }

        function y(e = 100) {
            return (t = 0, r) => Math.max(t * e, g(r))
        }
        let b = {
            retries: 3,
            retryCondition: p,
            retryDelay: function(e = 0, t) {
                return Math.max(0, g(t))
            },
            shouldResetTimeout: !1,
            onRetry: () => {},
            onMaxRetryTimesExceeded: () => {},
            validateResponse: null
        };

        function x(e, t, r = !1) {
            var n;
            let s = (n = t || {}, {
                ...b,
                ...n,
                ...e[o]
            });
            return s.retryCount = s.retryCount || 0, (!s.lastRequestTime || r) && (s.lastRequestTime = Date.now()), e[o] = s, s
        }
        async function v(e, t) {
            let {
                retries: r,
                retryCondition: n
            } = e, s = (e.retryCount || 0) < r && n(t);
            if ("object" == typeof s) try {
                let e = await s;
                return !1 !== e
            } catch (e) {
                return !1
            }
            return s
        }
        async function w(e, t, r, n) {
            t.retryCount += 1;
            let {
                retryDelay: s,
                shouldResetTimeout: a,
                onRetry: i
            } = t, o = s(t.retryCount, r);
            if (e.defaults.agent === n.agent && delete n.agent, e.defaults.httpAgent === n.httpAgent && delete n.httpAgent, e.defaults.httpsAgent === n.httpsAgent && delete n.httpsAgent, !a && n.timeout && t.lastRequestTime) {
                let e = Date.now() - t.lastRequestTime,
                    s = n.timeout - e - o;
                if (s <= 0) return Promise.reject(r);
                n.timeout = s
            }
            return (n.transformRequest = [e => e], await i(t.retryCount, r, n), n.signal?.aborted) ? Promise.resolve(e(n)) : new Promise(t => {
                let r = () => {
                        clearTimeout(s), t(e(n))
                    },
                    s = setTimeout(() => {
                        t(e(n)), n.signal?.removeEventListener && n.signal.removeEventListener("abort", r)
                    }, o);
                n.signal?.addEventListener && n.signal.addEventListener("abort", r, {
                    once: !0
                })
            })
        }
        async function E(e, t) {
            e.retryCount >= e.retries && await e.onMaxRetryTimesExceeded(t, e.retryCount)
        }
        let A = (e, t) => ({
            requestInterceptorId: e.interceptors.request.use(e => (x(e, t, !0), e[o]?.validateResponse && (e.validateStatus = () => !1), e)),
            responseInterceptorId: e.interceptors.response.use(null, async r => {
                let {
                    config: n
                } = r;
                if (!n) return Promise.reject(r);
                let s = x(n, t);
                return r.response && s.validateResponse?.(r.response) ? r.response : await v(s, r) ? w(e, s, r, n) : (await E(s, r), Promise.reject(r))
            })
        });
        A.isNetworkError = l, A.isSafeRequestError = f, A.isIdempotentRequestError = h, A.isNetworkOrIdempotentRequestError = p, A.exponentialDelay = m, A.linearDelay = y, A.isRetryableError = u, r.default = A
    }, {
        "is-retry-allowed": "gqdKH",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    gqdKH: [function(e, t, r, n) {
        "use strict";
        let s = new Set(["ENOTFOUND", "ENETUNREACH", "UNABLE_TO_GET_ISSUER_CERT", "UNABLE_TO_GET_CRL", "UNABLE_TO_DECRYPT_CERT_SIGNATURE", "UNABLE_TO_DECRYPT_CRL_SIGNATURE", "UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY", "CERT_SIGNATURE_FAILURE", "CRL_SIGNATURE_FAILURE", "CERT_NOT_YET_VALID", "CERT_HAS_EXPIRED", "CRL_NOT_YET_VALID", "CRL_HAS_EXPIRED", "ERROR_IN_CERT_NOT_BEFORE_FIELD", "ERROR_IN_CERT_NOT_AFTER_FIELD", "ERROR_IN_CRL_LAST_UPDATE_FIELD", "ERROR_IN_CRL_NEXT_UPDATE_FIELD", "OUT_OF_MEM", "DEPTH_ZERO_SELF_SIGNED_CERT", "SELF_SIGNED_CERT_IN_CHAIN", "UNABLE_TO_GET_ISSUER_CERT_LOCALLY", "UNABLE_TO_VERIFY_LEAF_SIGNATURE", "CERT_CHAIN_TOO_LONG", "CERT_REVOKED", "INVALID_CA", "PATH_LENGTH_EXCEEDED", "INVALID_PURPOSE", "CERT_UNTRUSTED", "CERT_REJECTED", "HOSTNAME_MISMATCH"]);
        t.exports = e => !s.has(e && e.code)
    }, {}],
    i2ayE: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "LazyStorage", () => o);
        var a = e("./storage.js"),
            i = e("../core/errors/openfortError.js");
        class o {
            realStorage = null;
            customStorage;
            constructor(e) {
                this.customStorage = e
            }
            getRealStorage() {
                if (!this.realStorage)
                    if (this.customStorage) this.realStorage = this.customStorage;
                    else {
                        if ("undefined" == typeof window || "undefined" == typeof localStorage) throw new(0, i.OpenfortError)("Storage not available. Please provide custom storage or use in browser environment.", i.OpenfortErrorType.INVALID_CONFIGURATION);
                        this.realStorage = new(0, a.StorageImplementation)(localStorage)
                    } return this.realStorage
            }
            async get(e) {
                return this.getRealStorage().get(e)
            }
            save(e, t) {
                this.getRealStorage().save(e, t)
            }
            remove(e) {
                this.getRealStorage().remove(e)
            }
            flush() {
                this.getRealStorage().flush()
            }
        }
    }, {
        "./storage.js": "O8SR8",
        "../core/errors/openfortError.js": "3xESR",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    O8SR8: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "StorageImplementation", () => i);
        var a = e("./istorage.js");
        class i {
            storage;
            constructor(e) {
                this.storage = e
            }
            async get(e) {
                return Promise.resolve(this.storage.getItem(e))
            }
            save(e, t) {
                this.storage.setItem(e, t)
            }
            remove(e) {
                this.storage.removeItem(e)
            }
            flush() {
                for (let e of Object.values(a.StorageKeys)) this.storage.removeItem(e)
            }
        }
    }, {
        "./istorage.js": "8EpXG",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    aurKi: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "AuthManager", () => m);
        var a = e("jose"),
            i = e("../utils/debug.js"),
            o = e("../core/errors/openfortError.js"),
            l = e("../core/errors/sentry.js"),
            c = e("../types/types.js"),
            d = e("../storage/istorage.js"),
            u = e("../utils/crypto.js");
        async function f(e) {
            let t = (new TextEncoder).encode(e);
            return new Uint8Array(await (0, u.cryptoDigest)("SHA-256", t))
        }

        function h(e) {
            let t = new Uint8Array(e);
            return crypto.getRandomValues(t), t
        }
        class p {
            decodedPayload;
            value;
            constructor(e) {
                this.value = e;
                try {
                    this.decodedPayload = (0, a.decodeJwt)(e)
                } catch (e) {
                    throw new(0, o.OpenfortError)("Invalid token format", o.OpenfortErrorType.AUTHENTICATION_ERROR)
                }
            }
            get subject() {
                return this.decodedPayload.sub
            }
            get expiration() {
                return this.decodedPayload.exp
            }
            get issuer() {
                return this.decodedPayload.iss
            }
            isExpired(e = 30) {
                return !this.expiration || ((0, i.debugLog)("Token expiration:", 1e3 * (this.expiration - e), "Current time:", Date.now()), Date.now() >= 1e3 * (this.expiration - e))
            }
            static parse(e) {
                try {
                    return new p(e)
                } catch {
                    return null
                }
            }
        }
        class g {
            storage;
            constructor(e) {
                this.storage = e
            }
            async savePKCEData(e) {
                this.storage.save(d.StorageKeys.PKCE_STATE, e.state), this.storage.save(d.StorageKeys.PKCE_VERIFIER, e.verifier)
            }
            async getPKCEData() {
                let e = await this.storage.get(d.StorageKeys.PKCE_STATE),
                    t = await this.storage.get(d.StorageKeys.PKCE_VERIFIER);
                return e && t ? {
                    state: e,
                    verifier: t
                } : null
            }
            async clearPKCEData() {
                this.storage.remove(d.StorageKeys.PKCE_STATE), this.storage.remove(d.StorageKeys.PKCE_VERIFIER)
            }
        }
        class m {
            deviceCredentialsManager;
            backendApiClientsInstance;
            publishableKeyInstance;
            constructor(e) {
                this.deviceCredentialsManager = new g(e)
            }
            setBackendApiClients(e, t) {
                this.backendApiClientsInstance = e, this.publishableKeyInstance = t
            }
            get backendApiClients() {
                if (!this.backendApiClientsInstance) throw new(0, o.OpenfortError)("Backend API clients not initialized", o.OpenfortErrorType.INTERNAL_ERROR);
                return this.backendApiClientsInstance
            }
            get publishableKey() {
                if (!this.publishableKeyInstance) throw new(0, o.OpenfortError)("Publishable key not initialized", o.OpenfortErrorType.INTERNAL_ERROR);
                return this.publishableKeyInstance
            }
            async initOAuth(e, t, r) {
                let n = t?.usePooling ?? !1,
                    s = t?.skipBrowserRedirect ?? !1,
                    {
                        usePooling: a,
                        skipBrowserRedirect: i,
                        ...l
                    } = t || {},
                    c = {
                        oAuthInitRequest: {
                            provider: e,
                            options: l,
                            usePooling: n
                        }
                    },
                    d = await (0, o.withOpenfortError)(async () => this.backendApiClients.authenticationApi.initOAuth(c, m.getEcosystemGameOptsOrUndefined(r)), {
                        default: o.OpenfortErrorType.AUTHENTICATION_ERROR
                    });
                return "undefined" == typeof window || s || window.location.assign(d.data.url), {
                    url: d.data.url,
                    key: d.data.key
                }
            }
            async registerGuest() {
                let e = {};
                return (0, o.withOpenfortError)(async () => (await this.backendApiClients.authenticationApi.registerGuest(e)).data, {
                    default: o.OpenfortErrorType.USER_REGISTRATION_ERROR
                })
            }
            async poolOAuth(e) {
                let t = {
                    key: e
                };
                for (let e = 0; e < 600; e++) try {
                    let e = await (0, o.withOpenfortError)(async () => this.backendApiClients.authenticationApi.poolOAuth(t), {
                        default: o.OpenfortErrorType.AUTHENTICATION_ERROR
                    });
                    if (200 === e.status) return e.data
                } catch (e) {
                    if (e.response && 404 === e.response.status) {
                        await new Promise(e => {
                            setTimeout(e, 500)
                        });
                        continue
                    }
                    throw e
                }
                throw Error("Failed to pool OAuth, try again later")
            }
            async loginWithIdToken(e, t, r) {
                let n = {
                    loginWithIdTokenRequest: {
                        provider: e,
                        token: t
                    }
                };
                return (0, o.withOpenfortError)(async () => (await this.backendApiClients.authenticationApi.loginWithIdToken(n, m.getEcosystemGameOptsOrUndefined(r))).data, {
                    default: o.OpenfortErrorType.AUTHENTICATION_ERROR,
                    401: o.OpenfortErrorType.AUTHENTICATION_ERROR,
                    403: o.OpenfortErrorType.USER_NOT_AUTHORIZED_ON_ECOSYSTEM
                }, e => {
                    l.sentry.captureAxiosError("loginWithIdToken", e)
                })
            }
            async authenticateThirdParty(e, t, r, n) {
                let s = {
                    thirdPartyOAuthRequest: {
                        provider: e,
                        token: t,
                        tokenType: r
                    }
                };
                return (0, o.withOpenfortError)(async () => (await this.backendApiClients.authenticationApi.thirdParty(s, m.getEcosystemGameOptsOrUndefined(n))).data, {
                    default: o.OpenfortErrorType.AUTHENTICATION_ERROR,
                    401: o.OpenfortErrorType.AUTHENTICATION_ERROR,
                    403: o.OpenfortErrorType.USER_NOT_AUTHORIZED_ON_ECOSYSTEM
                }, e => {
                    l.sentry.captureAxiosError("authenticateThirdParty", e)
                })
            }
            async initSIWE(e, t) {
                let r = {
                        sIWERequest: {
                            address: e
                        }
                    },
                    n = await (0, o.withOpenfortError)(async () => this.backendApiClients.authenticationApi.initSIWE(r, m.getEcosystemGameOptsOrUndefined(t)), {
                        default: o.OpenfortErrorType.AUTHENTICATION_ERROR
                    });
                return {
                    address: n.data.address,
                    nonce: n.data.nonce,
                    expiresAt: n.data.expiresAt
                }
            }
            async authenticateSIWE(e, t, r, n) {
                let s = {
                    sIWEAuthenticateRequest: {
                        signature: e,
                        message: t,
                        walletClientType: r,
                        connectorType: n
                    }
                };
                return (0, o.withOpenfortError)(async () => (await this.backendApiClients.authenticationApi.authenticateSIWE(s)).data, {
                    default: o.OpenfortErrorType.AUTHENTICATION_ERROR,
                    401: o.OpenfortErrorType.AUTHENTICATION_ERROR,
                    403: o.OpenfortErrorType.USER_NOT_AUTHORIZED_ON_ECOSYSTEM
                }, e => {
                    l.sentry.captureAxiosError("authenticateSIWE", e)
                })
            }
            static getEcosystemGameOptsOrUndefined(e) {
                if (e) return {
                    headers: {
                        "x-game": e
                    }
                }
            }
            async loginEmailPassword(e, t, r) {
                let n = {
                    loginRequest: {
                        email: e,
                        password: t
                    }
                };
                return (0, o.withOpenfortError)(async () => (await this.backendApiClients.authenticationApi.loginEmailPassword(n, m.getEcosystemGameOptsOrUndefined(r))).data, {
                    default: o.OpenfortErrorType.AUTHENTICATION_ERROR,
                    401: o.OpenfortErrorType.AUTHENTICATION_ERROR,
                    403: o.OpenfortErrorType.USER_NOT_AUTHORIZED_ON_ECOSYSTEM
                }, e => {
                    l.sentry.captureAxiosError("loginEmailPassword", e)
                })
            }
            async requestResetPassword(e, t) {
                let r = h(32),
                    n = a.base64url.encode(r),
                    s = await f(n),
                    i = a.base64url.encode(s),
                    l = h(32),
                    d = a.base64url.encode(l);
                await this.deviceCredentialsManager.savePKCEData({
                    state: d,
                    verifier: n
                });
                let u = {
                    requestResetPasswordRequest: {
                        email: e,
                        redirectUrl: t,
                        challenge: {
                            codeChallenge: i,
                            method: c.CodeChallengeMethodEnum.S256
                        }
                    }
                };
                await (0, o.withOpenfortError)(async () => {
                    await this.backendApiClients.authenticationApi.requestResetPassword(u)
                }, {
                    default: o.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            }
            async resetPassword(e, t, r) {
                return (0, o.withOpenfortError)(async () => {
                    let n = await this.deviceCredentialsManager.getPKCEData();
                    if (!n) throw Error("No code verifier or state for PKCE");
                    let s = {
                        resetPasswordRequest: {
                            email: e,
                            password: t,
                            state: r,
                            challenge: {
                                codeVerifier: n.verifier
                            }
                        }
                    };
                    await this.backendApiClients.authenticationApi.resetPassword(s)
                }, {
                    default: o.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            }
            async requestEmailVerification(e, t) {
                let r = h(32),
                    n = a.base64url.encode(r),
                    s = await f(n),
                    i = a.base64url.encode(s),
                    l = h(32),
                    d = a.base64url.encode(l);
                await this.deviceCredentialsManager.savePKCEData({
                    state: d,
                    verifier: n
                });
                let u = {
                    requestVerifyEmailRequest: {
                        email: e,
                        redirectUrl: t,
                        challenge: {
                            codeChallenge: i,
                            method: c.CodeChallengeMethodEnum.S256
                        }
                    }
                };
                await (0, o.withOpenfortError)(async () => {
                    await this.backendApiClients.authenticationApi.requestEmailVerification(u)
                }, {
                    default: o.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            }
            async verifyEmail(e, t) {
                return (0, o.withOpenfortError)(async () => {
                    let r = await this.deviceCredentialsManager.getPKCEData();
                    if (!r) throw Error("No code verifier or state for PKCE");
                    let n = {
                        verifyEmailRequest: {
                            email: e,
                            token: t,
                            challenge: {
                                codeVerifier: r.verifier
                            }
                        }
                    };
                    await this.backendApiClients.authenticationApi.verifyEmail(n)
                }, {
                    default: o.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            }
            async signupEmailPassword(e, t, r, n) {
                let s = {
                    signupRequest: {
                        email: e,
                        password: t,
                        name: r
                    }
                };
                return (0, o.withOpenfortError)(async () => (await this.backendApiClients.authenticationApi.signupEmailPassword(s, m.getEcosystemGameOptsOrUndefined(n))).data, {
                    default: o.OpenfortErrorType.USER_REGISTRATION_ERROR,
                    401: o.OpenfortErrorType.USER_REGISTRATION_ERROR,
                    403: o.OpenfortErrorType.USER_NOT_AUTHORIZED_ON_ECOSYSTEM
                }, e => {
                    l.sentry.captureAxiosError("signupEmailPassword", e)
                })
            }
            async validateCredentials(e, t) {
                if (!e.refreshToken) throw new(0, o.OpenfortError)("No refresh token provided", o.OpenfortErrorType.AUTHENTICATION_ERROR);
                if (t) return this.refreshTokens(e.refreshToken, t);
                (0, i.debugLog)("Validating credentials with token:", e.token);
                let r = p.parse(e.token);
                return r ? r.isExpired() ? ((0, i.debugLog)("Token expired, refreshing..."), this.refreshTokens(e.refreshToken)) : {
                    player: r.subject,
                    accessToken: e.token,
                    refreshToken: e.refreshToken
                } : this.refreshTokens(e.refreshToken)
            }
            async refreshTokens(e, t) {
                let r = {
                    refreshTokenRequest: {
                        refreshToken: e,
                        forceRefresh: t
                    }
                };
                return (0, o.withOpenfortError)(async () => {
                    let e = await this.backendApiClients.authenticationApi.refresh(r);
                    return {
                        player: e.data.player.id,
                        accessToken: e.data.token,
                        refreshToken: e.data.refreshToken
                    }
                }, {
                    default: o.OpenfortErrorType.REFRESH_TOKEN_ERROR
                })
            }
            async logout(e, t) {
                let r = {
                    logoutRequest: {
                        refreshToken: t
                    }
                };
                return (0, o.withOpenfortError)(async () => {
                    await this.backendApiClients.authenticationApi.logout(r, {
                        headers: {
                            authorization: `Bearer ${this.publishableKey}`,
                            "x-player-token": e
                        }
                    })
                }, {
                    default: o.OpenfortErrorType.LOGOUT_ERROR
                })
            }
            async getUser(e) {
                return (0, o.withOpenfortError)(async () => (await this.backendApiClients.authenticationApi.me({
                    headers: {
                        authorization: `Bearer ${this.publishableKey}`,
                        "x-player-token": e.token,
                        "x-auth-provider": e.thirdPartyProvider,
                        "x-token-type": e.thirdPartyTokenType
                    }
                })).data, {
                    default: o.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            }
            async linkThirdParty(e, t, r, n, s) {
                let a = {
                    thirdPartyLinkRequest: {
                        provider: t,
                        token: r,
                        tokenType: n
                    }
                };
                return (0, o.withOpenfortError)(async () => (await this.backendApiClients.authenticationApi.linkThirdParty(a, {
                    headers: {
                        authorization: `Bearer ${this.publishableKey}`,
                        "x-player-token": e.token,
                        "x-auth-provider": e.thirdPartyProvider || void 0,
                        "x-token-type": e.thirdPartyTokenType || void 0,
                        "x-game": s || void 0
                    }
                })).data, {
                    default: o.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            }
            async linkOAuth(e, t, r, n) {
                let s = r?.skipBrowserRedirect ?? !1;
                delete r?.skipBrowserRedirect;
                let a = {
                        oAuthInitRequest: {
                            provider: t,
                            options: r,
                            usePooling: r?.usePooling || !1
                        }
                    },
                    i = await (0, o.withOpenfortError)(async () => this.backendApiClients.authenticationApi.linkOAuth(a, {
                        headers: {
                            authorization: `Bearer ${this.publishableKey}`,
                            "x-player-token": e.token,
                            "x-auth-provider": e.thirdPartyProvider || void 0,
                            "x-token-type": e.thirdPartyTokenType || void 0,
                            "x-game": n || void 0
                        }
                    }), {
                        default: o.OpenfortErrorType.AUTHENTICATION_ERROR
                    });
                return "undefined" == typeof window || s || window.location.assign(i.data.url), {
                    url: i.data.url,
                    key: i.data.key
                }
            }
            async unlinkOAuth(e, t) {
                let r = {
                    unlinkOAuthRequest: {
                        provider: e
                    }
                };
                return (0, o.withOpenfortError)(async () => (await this.backendApiClients.authenticationApi.unlinkOAuth(r, {
                    headers: {
                        authorization: `Bearer ${this.publishableKey}`,
                        "x-player-token": t
                    }
                })).data, {
                    default: o.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            }
            async unlinkWallet(e, t) {
                let r = {
                    sIWERequest: {
                        address: e
                    }
                };
                return (0, o.withOpenfortError)(async () => (await this.backendApiClients.authenticationApi.unlinkSIWE(r, {
                    headers: {
                        authorization: `Bearer ${this.publishableKey}`,
                        "x-player-token": t
                    }
                })).data, {
                    default: o.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            }
            async linkWallet(e, t, r, n, s) {
                let a = {
                    sIWEAuthenticateRequest: {
                        signature: e,
                        message: t,
                        walletClientType: r,
                        connectorType: n
                    }
                };
                return (0, o.withOpenfortError)(async () => (await this.backendApiClients.authenticationApi.linkSIWE(a, {
                    headers: {
                        authorization: `Bearer ${this.publishableKey}`,
                        "x-player-token": s
                    }
                })).data, {
                    default: o.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            }
            async unlinkEmail(e, t) {
                let r = {
                    unlinkEmailRequest: {
                        email: e
                    }
                };
                return (0, o.withOpenfortError)(async () => (await this.backendApiClients.authenticationApi.unlinkEmail(r, {
                    headers: {
                        authorization: `Bearer ${this.publishableKey}`,
                        "x-player-token": t
                    }
                })).data, {
                    default: o.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            }
            async linkEmail(e, t, r, n) {
                let s = {
                    loginRequest: {
                        email: e,
                        password: t
                    }
                };
                return (0, o.withOpenfortError)(async () => (await this.backendApiClients.authenticationApi.linkEmail(s, {
                    headers: {
                        authorization: `Bearer ${this.publishableKey}`,
                        "x-player-token": r,
                        "x-game": n || void 0
                    }
                })).data, {
                    default: o.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            }
        }
    }, {
        jose: "kXgGE",
        "../utils/debug.js": "8822a",
        "../core/errors/openfortError.js": "3xESR",
        "../core/errors/sentry.js": "913SB",
        "../types/types.js": "fUPIN",
        "../storage/istorage.js": "8EpXG",
        "../utils/crypto.js": "3dq9D",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    kxNZ1: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "AuthApi", () => c);
        var a = e("../storage/istorage.js"),
            i = e("../core/configuration/authentication.js"),
            o = e("../core/errors/openfortError.js"),
            l = e("../types/types.js");
        class c {
            storage;
            authManager;
            validateAndRefreshToken;
            ensureInitialized;
            eventEmitter;
            constructor(e, t, r, n, s) {
                this.storage = e, this.authManager = t, this.validateAndRefreshToken = r, this.ensureInitialized = n, this.eventEmitter = s
            }
            async logInWithEmailPassword({
                email: e,
                password: t,
                ecosystemGame: r
            }) {
                if (await this.ensureInitialized(), await i.Authentication.fromStorage(this.storage)) throw new(0, o.OpenfortError)("Already logged in", o.OpenfortErrorType.ALREADY_LOGGED_IN_ERROR);
                let n = await this.authManager.loginEmailPassword(e, t, r);
                return "action" in n || new(0, i.Authentication)("jwt", n.token, n.player.id, n.refreshToken).save(this.storage), n
            }
            async signUpGuest() {
                if (await this.ensureInitialized(), await i.Authentication.fromStorage(this.storage)) throw new(0, o.OpenfortError)("Already logged in", o.OpenfortErrorType.ALREADY_LOGGED_IN_ERROR);
                let e = await this.authManager.registerGuest();
                return new(0, i.Authentication)("jwt", e.token, e.player.id, e.refreshToken).save(this.storage), e
            }
            async signUpWithEmailPassword({
                email: e,
                password: t,
                options: r,
                ecosystemGame: n
            }) {
                if (await this.ensureInitialized(), await i.Authentication.fromStorage(this.storage)) throw new(0, o.OpenfortError)("Already logged in", o.OpenfortErrorType.ALREADY_LOGGED_IN_ERROR);
                let s = await this.authManager.signupEmailPassword(e, t, r?.data.name, n);
                return "action" in s || new(0, i.Authentication)("jwt", s.token, s.player.id, s.refreshToken).save(this.storage), s
            }
            async linkEmailPassword({
                email: e,
                password: t,
                authToken: r,
                ecosystemGame: n
            }) {
                return await this.validateAndRefreshToken(), await this.authManager.linkEmail(e, t, r, n)
            }
            async unlinkEmailPassword({
                email: e,
                authToken: t
            }) {
                return await this.validateAndRefreshToken(), await this.authManager.unlinkEmail(e, t)
            }
            async requestEmailVerification({
                email: e,
                redirectUrl: t
            }) {
                await this.ensureInitialized(), await this.authManager.requestEmailVerification(e, t)
            }
            async resetPassword({
                email: e,
                password: t,
                state: r
            }) {
                await this.ensureInitialized(), await this.authManager.resetPassword(e, t, r)
            }
            async requestResetPassword({
                email: e,
                redirectUrl: t
            }) {
                await this.ensureInitialized(), await this.authManager.requestResetPassword(e, t)
            }
            async verifyEmail({
                email: e,
                state: t
            }) {
                await this.ensureInitialized(), await this.authManager.verifyEmail(e, t)
            }
            async initOAuth({
                provider: e,
                options: t,
                ecosystemGame: r
            }) {
                if (await this.ensureInitialized(), await i.Authentication.fromStorage(this.storage)) throw new(0, o.OpenfortError)("Already logged in", o.OpenfortErrorType.ALREADY_LOGGED_IN_ERROR);
                return await this.authManager.initOAuth(e, t, r)
            }
            async initLinkOAuth({
                provider: e,
                options: t,
                ecosystemGame: r
            }) {
                await this.validateAndRefreshToken();
                let n = await i.Authentication.fromStorage(this.storage);
                if (!n) throw new(0, o.OpenfortError)("No authentication found", o.OpenfortErrorType.NOT_LOGGED_IN_ERROR);
                return await this.authManager.linkOAuth(n, e, t, r)
            }
            async linkThirdPartyProvider({
                provider: e,
                token: t,
                tokenType: r
            }) {
                await this.validateAndRefreshToken();
                let n = await i.Authentication.fromStorage(this.storage);
                if (!n) throw new(0, o.OpenfortError)("No authentication found", o.OpenfortErrorType.NOT_LOGGED_IN_ERROR);
                return await this.authManager.linkThirdParty(n, e, t, r)
            }
            async unlinkOAuth({
                provider: e,
                authToken: t
            }) {
                return await this.validateAndRefreshToken(), await this.authManager.unlinkOAuth(e, t)
            }
            async poolOAuth(e) {
                await this.ensureInitialized();
                let t = await this.authManager.poolOAuth(e);
                return new(0, i.Authentication)("jwt", t.token, t.player.id, t.refreshToken).save(this.storage), t
            }
            async authenticateWithThirdPartyProvider({
                provider: e,
                token: t,
                tokenType: r,
                ecosystemGame: n
            }) {
                await this.ensureInitialized();
                let s = await this.authManager.authenticateThirdParty(e, t, r, n);
                return new(0, i.Authentication)("third_party", t, s.id, null, e, r).save(this.storage), s
            }
            async loginWithIdToken({
                provider: e,
                token: t,
                ecosystemGame: r
            }) {
                if (await this.ensureInitialized(), await i.Authentication.fromStorage(this.storage)) throw new(0, o.OpenfortError)("Already logged in", o.OpenfortErrorType.ALREADY_LOGGED_IN_ERROR);
                let n = await this.authManager.loginWithIdToken(e, t, r);
                return new(0, i.Authentication)("jwt", n.token, n.player.id, n.refreshToken).save(this.storage), n
            }
            async initSIWE({
                address: e,
                ecosystemGame: t
            }) {
                return await this.ensureInitialized(), await this.authManager.initSIWE(e, t)
            }
            async authenticateWithSIWE({
                signature: e,
                message: t,
                walletClientType: r,
                connectorType: n
            }) {
                if (await this.ensureInitialized(), await i.Authentication.fromStorage(this.storage)) throw new(0, o.OpenfortError)("Already logged in", o.OpenfortErrorType.ALREADY_LOGGED_IN_ERROR);
                let s = await this.authManager.authenticateSIWE(e, t, r, n);
                return new(0, i.Authentication)("jwt", s.token, s.player.id, s.refreshToken).save(this.storage), s
            }
            async linkWallet({
                signature: e,
                message: t,
                walletClientType: r,
                connectorType: n,
                authToken: s
            }) {
                return await this.validateAndRefreshToken(), await this.authManager.linkWallet(e, t, r, n, s)
            }
            async unlinkWallet({
                address: e,
                authToken: t
            }) {
                return await this.validateAndRefreshToken(), await this.authManager.unlinkWallet(e, t)
            }
            async storeCredentials(e) {
                if (await this.ensureInitialized(), !e.player) throw new(0, o.OpenfortError)("Player ID is required to store credentials", o.OpenfortErrorType.INVALID_CONFIGURATION);
                new(0, i.Authentication)("jwt", e.accessToken, e.player, e.refreshToken).save(this.storage)
            }
            async logout() {
                let e = await i.Authentication.fromStorage(this.storage);
                if (e) {
                    try {
                        "third_party" !== e.type && await this.authManager.logout(e.token, e?.refreshToken)
                    } catch (e) {}
                    this.storage.remove(a.StorageKeys.AUTHENTICATION), this.eventEmitter.emit(l.OpenfortEvents.LOGGED_OUT)
                }
            }
        }
    }, {
        "../storage/istorage.js": "8EpXG",
        "../core/configuration/authentication.js": "1Nfd7",
        "../core/errors/openfortError.js": "3xESR",
        "../types/types.js": "fUPIN",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    cN17n: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "EmbeddedWalletApi", () => v);
        var a = e("../../../packages/internal/openapi-clients/dist/index.js"),
            i = e("../core/configuration/account.js"),
            o = e("../core/configuration/authentication.js"),
            l = e("../core/config/config.js"),
            c = e("../core/errors/openfortError.js"),
            d = e("../wallets/evm/walletHelpers.js"),
            u = e("../wallets/evm/evmProvider.js");
        e("../wallets/evm/types.js");
        var f = e("../wallets/evm/provider/eip6963.js"),
            h = e("../types/types.js"),
            p = e("../wallets/iframeManager.js"),
            g = e("../wallets/embedded.js");
        e("../wallets/messaging/browserMessenger/backwardCompatibility.js");
        var m = e("../wallets/messaging/browserMessenger/messengers/WindowMessenger.js"),
            y = s.interopDefault(m),
            b = e("../wallets/messaging/ReactNativeMessenger.js"),
            x = e("../utils/debug.js");
        class v {
            storage;
            validateAndRefreshToken;
            ensureInitialized;
            eventEmitter;
            iframeManager = null;
            iframeManagerPromise = null;
            signer = null;
            signerPromise = null;
            provider = null;
            messagePoster = null;
            messenger = null;
            constructor(e, t, r, n) {
                this.storage = e, this.validateAndRefreshToken = t, this.ensureInitialized = r, this.eventEmitter = n, this.eventEmitter.on(h.OpenfortEvents.TOKEN_REFRESHED, () => {
                    (0, x.debugLog)("Handling token refresh event in EmbeddedWalletApi"), this.handleTokenRefreshed()
                }), this.eventEmitter.on(h.OpenfortEvents.LOGGED_OUT, () => {
                    (0, x.debugLog)("Handling logout event in EmbeddedWalletApi"), this.handleLogout()
                })
            }
            get backendApiClients() {
                let e = l.SDKConfiguration.fromStorage();
                if (!e) throw new(0, c.OpenfortError)("Configuration not found", c.OpenfortErrorType.INVALID_CONFIGURATION);
                return new(0, a.BackendApiClients)({
                    basePath: e.backendUrl,
                    accessToken: e.baseConfiguration.publishableKey
                })
            }
            async getIframeManager() {
                if ((0, x.debugLog)("[HANDSHAKE DEBUG] getIframeManager called"), this.iframeManager) return (0, x.debugLog)("[HANDSHAKE DEBUG] Returning existing iframeManager instance"), this.iframeManager;
                if (this.iframeManagerPromise) return (0, x.debugLog)("[HANDSHAKE DEBUG] Returning existing iframeManagerPromise"), this.iframeManagerPromise;
                (0, x.debugLog)("[HANDSHAKE DEBUG] Creating new iframeManager"), this.iframeManagerPromise = this.createIframeManager();
                try {
                    return (0, x.debugLog)("[HANDSHAKE DEBUG] Awaiting iframeManager creation"), this.iframeManager = await this.iframeManagerPromise, (0, x.debugLog)("[HANDSHAKE DEBUG] IframeManager created successfully"), this.iframeManagerPromise = null, this.iframeManager
                } catch (e) {
                    throw (0, x.debugLog)("[HANDSHAKE DEBUG] Error creating iframeManager:", e), this.iframeManagerPromise = null, e
                }
            }
            async createIframeManager() {
                let e;
                (0, x.debugLog)("[HANDSHAKE DEBUG] createIframeManager starting");
                let t = l.SDKConfiguration.fromStorage();
                if (!t) throw (0, x.debugLog)("[HANDSHAKE DEBUG] Configuration not found"), new(0, c.OpenfortError)("Configuration not found", c.OpenfortErrorType.INVALID_CONFIGURATION);
                if ((0, x.debugLog)("[HANDSHAKE DEBUG] Configuration found"), this.messagePoster)(0, x.debugLog)("[HANDSHAKE DEBUG] Creating ReactNativeMessenger with messagePoster"), this.messenger = new(0, b.ReactNativeMessenger)(this.messagePoster), (0, x.debugLog)("[HANDSHAKE DEBUG] Created new ReactNativeMessenger instance"), e = this.messenger;
                else {
                    (0, x.debugLog)("[HANDSHAKE DEBUG] Creating WindowMessenger for browser mode");
                    let r = this.createIframe(t.iframeUrl),
                        n = new URL(t.iframeUrl).origin;
                    e = new(0, y.default)({
                        remoteWindow: r.contentWindow,
                        allowedOrigins: [n]
                    }), (0, x.debugLog)("[HANDSHAKE DEBUG] Created WindowMessenger")
                }
                return (0, x.debugLog)("[HANDSHAKE DEBUG] Creating IframeManager instance"), new(0, p.IframeManager)(t, this.storage, e)
            }
            async ensureSigner() {
                if (this.signer) return this.signer;
                if (this.signerPromise) return this.signerPromise;
                this.signerPromise = this.createSigner();
                try {
                    return this.signer = await this.signerPromise, this.signer
                } catch (e) {
                    throw this.signerPromise = null, e
                } finally {
                    this.signerPromise = null
                }
            }
            async createSigner() {
                let e = await this.getIframeManager();
                return new(0, g.EmbeddedSigner)(e, this.storage, this.backendApiClients, this.eventEmitter)
            }
            createIframe(e) {
                if ("undefined" == typeof document) throw new(0, c.OpenfortError)("Document is not available. Please provide a message poster for non-browser environments.", c.OpenfortErrorType.INVALID_CONFIGURATION);
                let t = document.getElementById("openfort-iframe");
                t && t.remove();
                let r = document.createElement("iframe");
                return r.style.display = "none", r.id = "openfort-iframe", r.src = e, document.body.appendChild(r), (0, x.debugLog)("Iframe created and appended to document"), r
            }
            async configure(e) {
                let t;
                await this.validateAndRefreshToken();
                let r = e.recoveryParams ?? {
                    recoveryMethod: h.RecoveryMethod.AUTOMATIC
                };
                (r.recoveryMethod === h.RecoveryMethod.PASSWORD || e.shieldAuthentication?.encryptionSession) && (t = {
                    encryptionSession: e.shieldAuthentication?.encryptionSession,
                    recoveryPassword: r.recoveryMethod === h.RecoveryMethod.PASSWORD ? r.password : void 0
                });
                let n = await this.ensureSigner(),
                    s = await n.configure({
                        chainId: e.chainId,
                        entropy: t
                    }),
                    a = await o.Authentication.fromStorage(this.storage);
                return {
                    id: s.id,
                    chainId: s.chainId,
                    user: a.player,
                    address: s.address,
                    ownerAddress: s.ownerAddress,
                    chainType: s.chainType,
                    accountType: s.accountType,
                    implementationType: s.implementationType
                }
            }
            async create(e) {
                let t;
                await this.validateAndRefreshToken();
                let r = e.recoveryParams ?? {
                    recoveryMethod: h.RecoveryMethod.AUTOMATIC
                };
                (r.recoveryMethod === h.RecoveryMethod.PASSWORD || e.shieldAuthentication?.encryptionSession) && (t = {
                    encryptionSession: e.shieldAuthentication?.encryptionSession,
                    recoveryPassword: r.recoveryMethod === h.RecoveryMethod.PASSWORD ? r.password : void 0
                });
                let n = await this.ensureSigner(),
                    s = await n.create({
                        accountType: e.accountType,
                        chainType: e.chainType,
                        chainId: e.chainId,
                        entropy: t
                    }),
                    a = await o.Authentication.fromStorage(this.storage);
                return {
                    id: s.id,
                    chainId: s.chainId,
                    user: a.player,
                    address: s.address,
                    ownerAddress: s.ownerAddress,
                    chainType: s.chainType,
                    accountType: s.accountType,
                    implementationType: s.implementationType
                }
            }
            async recover(e) {
                let t;
                await this.validateAndRefreshToken();
                let r = e.recoveryParams ?? {
                    recoveryMethod: h.RecoveryMethod.AUTOMATIC
                };
                (r.recoveryMethod === h.RecoveryMethod.PASSWORD || e.shieldAuthentication?.encryptionSession) && (t = {
                    encryptionSession: e.shieldAuthentication?.encryptionSession,
                    recoveryPassword: r.recoveryMethod === h.RecoveryMethod.PASSWORD ? r.password : void 0
                });
                let n = await this.ensureSigner(),
                    s = await n.recover({
                        account: e.account,
                        entropy: t
                    }),
                    a = await o.Authentication.fromStorage(this.storage);
                return {
                    id: s.id,
                    chainId: s.chainId,
                    user: a.player,
                    address: s.address,
                    ownerAddress: s.ownerAddress,
                    chainType: s.chainType,
                    accountType: s.accountType,
                    implementationType: s.implementationType
                }
            }
            async signMessage(e, t) {
                await this.validateAndRefreshToken();
                let r = await this.ensureSigner(),
                    {
                        hashMessage: n = !0,
                        arrayifyMessage: s = !1
                    } = t || {};
                return await r.sign(e, s, n)
            }
            async signTypedData(t, r, n) {
                await this.validateAndRefreshToken();
                let s = await this.ensureSigner(),
                    a = await i.Account.fromStorage(this.storage);
                if (!a) throw new(0, c.OpenfortError)("No account found", c.OpenfortErrorType.MISSING_SIGNER_ERROR);
                let o = {
                    ...r
                };
                delete o.EIP712Domain;
                let {
                    _TypedDataEncoder: l
                } = await e("e9b2dbfd4a72e730"), u = l.hash(t, o, n);
                return await (0, d.signMessage)({
                    hash: u,
                    implementationType: a.implementationType || a.type,
                    chainId: Number(a.chainId),
                    signer: s,
                    address: a.address,
                    ownerAddress: a.ownerAddress,
                    factoryAddress: a.factoryAddress,
                    salt: a.salt
                })
            }
            async exportPrivateKey() {
                await this.validateAndRefreshToken();
                let e = await this.ensureSigner();
                return await e.export()
            }
            async setEmbeddedRecovery({
                recoveryMethod: e,
                recoveryPassword: t,
                encryptionSession: r
            }) {
                await this.validateAndRefreshToken();
                let n = await this.ensureSigner();
                if ("password" === e && !t) throw new(0, c.OpenfortError)("Recovery password is required", c.OpenfortErrorType.INVALID_CONFIGURATION);
                await n.setEmbeddedRecovery({
                    recoveryMethod: e,
                    recoveryPassword: t,
                    encryptionSession: r
                })
            }
            async get() {
                let e = await i.Account.fromStorage(this.storage);
                if (!e) throw new(0, c.OpenfortError)("No signer configured", c.OpenfortErrorType.MISSING_SIGNER_ERROR);
                let t = await o.Authentication.fromStorage(this.storage);
                if (!t) throw new(0, c.OpenfortError)("No access token found", c.OpenfortErrorType.NOT_LOGGED_IN_ERROR);
                return {
                    id: e.id,
                    chainId: e.chainId,
                    user: t.player,
                    address: e.address,
                    ownerAddress: e.ownerAddress,
                    chainType: e.chainType,
                    accountType: e.accountType,
                    implementationType: e.implementationType
                }
            }
            async list() {
                let e = l.SDKConfiguration.fromStorage();
                if (!e) throw new(0, c.OpenfortError)("Configuration not found", c.OpenfortErrorType.INVALID_CONFIGURATION);
                await this.validateAndRefreshToken();
                let t = await o.Authentication.fromStorage(this.storage);
                if (!t) throw new(0, c.OpenfortError)("No access token found", c.OpenfortErrorType.NOT_LOGGED_IN_ERROR);
                return (0, c.withOpenfortError)(async () => (await this.backendApiClients.accountsApi.getAccountsV2({
                    accountType: h.AccountTypeEnum.SMART_ACCOUNT
                }, {
                    headers: {
                        authorization: `Bearer ${e.baseConfiguration.publishableKey}`,
                        "x-player-token": t.token,
                        "x-auth-provider": t.thirdPartyProvider,
                        "x-token-type": t.thirdPartyTokenType
                    }
                })).data.data.map(e => ({
                    user: e.user,
                    chainType: e.accountType,
                    id: e.id,
                    address: e.address,
                    ownerAddress: e.ownerAddress,
                    accountType: e.accountType,
                    createdAt: e.createdAt,
                    implementationType: e.smartAccount?.implementationType,
                    chainId: e.chainId
                })), {
                    default: c.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            }
            async getEmbeddedState() {
                try {
                    if (!await o.Authentication.fromStorage(this.storage)) return h.EmbeddedState.UNAUTHENTICATED;
                    return await i.Account.fromStorage(this.storage) ? h.EmbeddedState.READY : h.EmbeddedState.EMBEDDED_SIGNER_NOT_CONFIGURED
                } catch (e) {
                    return (0, x.debugLog)("Failed to get embedded state:", e), h.EmbeddedState.UNAUTHENTICATED
                }
            }
            async getEthereumProvider(e) {
                await this.ensureInitialized();
                let t = {
                        announceProvider: !0,
                        ...e
                    },
                    r = await o.Authentication.fromStorage(this.storage),
                    n = await i.Account.fromStorage(this.storage);
                return this.provider ? this.provider && t.policy && this.provider.updatePolicy(t.policy) : (this.provider = new(0, u.EvmProvider)({
                    storage: this.storage,
                    openfortEventEmitter: this.eventEmitter,
                    ensureSigner: this.ensureSigner.bind(this),
                    account: n || void 0,
                    authentication: r || void 0,
                    backendApiClients: this.backendApiClients,
                    policyId: t.policy,
                    validateAndRefreshSession: this.validateAndRefreshToken.bind(this),
                    chains: t.chains
                }), t.announceProvider && (0, f.announceProvider)({
                    info: {
                        ...f.openfortProviderInfo,
                        ...t.providerInfo
                    },
                    provider: this.provider
                })), this.provider
            }
            async ping(e) {
                try {
                    e > 0 && await new Promise(t => {
                        setTimeout(t, e)
                    });
                    let t = await this.getIframeManager();
                    if (!t.isLoaded()) return !1;
                    let r = await o.Authentication.fromStorage(this.storage);
                    if (r) try {
                        return await t.getCurrentDevice(r.player), !0
                    } catch (e) {
                        return !1
                    }
                    return t.isLoaded()
                } catch (e) {
                    return (0, x.debugLog)("Ping failed:", e), !1
                }
            }
            getURL() {
                let e = l.SDKConfiguration.fromStorage();
                if (!e) throw new(0, c.OpenfortError)("Configuration not found", c.OpenfortErrorType.INVALID_CONFIGURATION);
                return e.iframeUrl
            }
            async setMessagePoster(e) {
                if (!e || "function" != typeof e.postMessage) throw new(0, c.OpenfortError)("Invalid message poster", c.OpenfortErrorType.INVALID_CONFIGURATION);
                this.messagePoster = e, this.messenger && this.messenger.destroy(), this.iframeManager && this.iframeManager.destroy(), this.signer = null, this.signerPromise = null, this.iframeManager = null, this.iframeManagerPromise = null, this.messenger = null
            }
            async handleTokenRefreshed() {
                if (this.iframeManager) try {
                    await this.iframeManager.updateAuthentication(), (0, x.debugLog)("Updated IframeManager authentication after token refresh")
                } catch (e) {
                    (0, x.debugLog)("Failed to update IframeManager authentication:", e)
                } else(0, x.debugLog)("IframeManager not initialized, skipping authentication update")
            }
            async handleLogout() {
                this.signer && await this.signer.disconnect(), this.provider = null, this.messenger = null, this.iframeManager = null, this.iframeManagerPromise = null, this.signer = null, this.signerPromise = null
            }
            async onMessage(e) {
                if (!e || "object" != typeof e) return void(0, x.debugLog)("Invalid message received:", e);
                (0, x.debugLog)("[HANDSHAKE DEBUG] EmbeddedWalletApi onMessage:", e);
                let t = "penpal" === e.namespace && "SYN" === e.type || e.penpal && "string" == typeof e.penpal;
                if (t && this.messenger && this.messagePoster) return (0, x.debugLog)("[HANDSHAKE DEBUG] Passing message directly to existing ReactNativeMessenger"), void this.messenger.handleMessage(e);
                let r = await this.getIframeManager();
                (0, x.debugLog)(`[HANDSHAKE DEBUG] IframeManager obtained, isLoaded: ${r.isLoaded()}`), t && !r.isLoaded() && (0, x.debugLog)("[HANDSHAKE DEBUG] Received penpal message before connection initialized, setting up connection..."), (0, x.debugLog)("[HANDSHAKE DEBUG] Calling iframeManager.onMessage"), await r.onMessage(e), (0, x.debugLog)("[HANDSHAKE DEBUG] iframeManager.onMessage completed")
            }
            isReady() {
                return this.iframeManager?.isLoaded() || !1
            }
        }
    }, {
        "../../../packages/internal/openapi-clients/dist/index.js": "5IDb0",
        "../core/configuration/account.js": "f6fHD",
        "../core/configuration/authentication.js": "1Nfd7",
        "../core/config/config.js": "8pPBU",
        "../core/errors/openfortError.js": "3xESR",
        "../wallets/evm/walletHelpers.js": "arpu2",
        "../wallets/evm/evmProvider.js": "4mZuV",
        "../wallets/evm/types.js": "h6Lv9",
        "../wallets/evm/provider/eip6963.js": "3LTkv",
        "../types/types.js": "fUPIN",
        "../wallets/iframeManager.js": "kcx6I",
        "../wallets/embedded.js": "18PER",
        "../wallets/messaging/browserMessenger/backwardCompatibility.js": "hsQQI",
        "../wallets/messaging/browserMessenger/messengers/WindowMessenger.js": "eYWLa",
        "../wallets/messaging/ReactNativeMessenger.js": "19aZg",
        "../utils/debug.js": "8822a",
        e9b2dbfd4a72e730: "duGRv",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    arpu2: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "signMessage", () => i);
        var a = e("../../types/types.js");
        let i = async t => {
            let {
                hash: r,
                signer: n,
                ownerAddress: s,
                factoryAddress: i,
                salt: o,
                chainId: l,
                address: c,
                implementationType: d
            } = t, u = r;
            if ([a.AccountType.UPGRADEABLE_V5, a.AccountType.UPGRADEABLE_V6, a.AccountType.ZKSYNC_UPGRADEABLE_V1, a.AccountType.ZKSYNC_UPGRADEABLE_V2].includes(d)) {
                let t = {
                        name: "Openfort",
                        version: "0.5",
                        chainId: Number(l),
                        verifyingContract: c
                    },
                    r = {
                        hashedMessage: u
                    },
                    {
                        _TypedDataEncoder: n
                    } = await e("9ea20aecf4a918ce");
                u = n.hash(t, {
                    OpenfortMessage: [{
                        name: "hashedMessage",
                        type: "bytes32"
                    }]
                }, r)
            }
            let f = await n.sign(u, !1, !1);
            if (i && o && [a.AccountType.UPGRADEABLE_V5, a.AccountType.UPGRADEABLE_V6].includes(d)) {
                let {
                    id: t
                } = await e("9ea20aecf4a918ce"), {
                    defaultAbiCoder: r
                } = await e("5ed2fd0dd216bb46"), {
                    hexConcat: n
                } = await e("553cda3d14fc6f01"), a = n([t("createAccountWithNonce(address,bytes32,bool)").slice(0, 10), r.encode(["address", "bytes32", "bool"], [s, o, !1])]);
                return n([r.encode(["address", "bytes", "bytes"], [i, a, f]), "0x6492649264926492649264926492649264926492649264926492649264926492"])
            }
            return f
        }
    }, {
        "../../types/types.js": "fUPIN",
        "9ea20aecf4a918ce": "duGRv",
        "5ed2fd0dd216bb46": "1KCZC",
        "553cda3d14fc6f01": "9veFU",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    duGRv: [function(e, t, r, n) {
        t.exports = Promise.resolve(t.bundle.root("jLDfB"))
    }, {}],
    "1KCZC": [function(e, t, r, n) {
        t.exports = Promise.resolve(t.bundle.root("gbtNr"))
    }, {}],
    "9veFU": [function(e, t, r, n) {
        t.exports = Promise.resolve(t.bundle.root("19SwW"))
    }, {}],
    "4mZuV": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "EvmProvider", () => A);
        var a = e("../../utils/debug.js"),
            i = e("../../core/configuration/authentication.js"),
            o = e("./types.js"),
            l = e("./JsonRpcError.js"),
            c = e("./signTypedDataV4.js"),
            d = e("../../types/types.js"),
            u = e("../../utils/typedEventEmitter.js"),
            f = s.interopDefault(u),
            h = e("../../utils/chains/index.js"),
            p = e("../../core/configuration/account.js"),
            g = e("./addEthereumChain.js"),
            m = e("./registerSession.js"),
            y = e("./revokeSession.js"),
            b = e("./sendCalls.js"),
            x = e("./getCallsStatus.js"),
            v = e("./personalSign.js"),
            w = e("./estimateGas.js"),
            E = e("../../utils/crypto.js");
        class A {
            #t;
            #r;
            #n;
            #e;
            updatePolicy(e) {
                this.#r = e
            }
            #s;
            #a;
            #i = null;
            #o;
            isOpenfort = !0;
            #l;
            constructor({
                storage: e,
                backendApiClients: t,
                openfortEventEmitter: r,
                policyId: n,
                ensureSigner: s,
                chains: a,
                validateAndRefreshSession: i
            }) {
                this.#l = s, this.#t = e, this.#n = a, this.#r = n, this.#s = i, this.#o = t, this.#o = t, this.#a = new(0, f.default), r.on(d.OpenfortEvents.LOGGED_OUT, this.#c), r.on(d.OpenfortEvents.SWITCH_ACCOUNT, this.#d)
            }
            #u = async () => (this.#e || (this.#e = await this.#l()), this.#e);
            #c = async () => {
                this.#e = void 0, this.#a.emit(o.ProviderEvent.ACCOUNTS_CHANGED, [])
            };
            #d = async e => {
                this.#a.emit(o.ProviderEvent.ACCOUNTS_CHANGED, [e])
            };
            async getRpcProvider() {
                if (!this.#i) {
                    let t = await p.Account.fromStorage(this.#t),
                        r = t?.chainId || 8453;
                    await e("369f3e054ad6e98f").then(e => {
                        let t = this.#n ? this.#n[r] : void 0;
                        this.#i = new e.StaticJsonRpcProvider(t ?? h.defaultChainRpcs[r])
                    })
                }
                if (!this.#i) throw Error("RPC provider not initialized");
                return this.#i
            }
            async #f(t) {
                switch (t.method) {
                    case "eth_accounts": {
                        let e = await p.Account.fromStorage(this.#t);
                        return e ? [e.address] : []
                    }
                    case "eth_requestAccounts": {
                        let e = await p.Account.fromStorage(this.#t);
                        if (e) return this.#a.emit(o.ProviderEvent.ACCOUNTS_CONNECT, {
                            chainId: String(e.chainId)
                        }), [e.address];
                        throw new(0, l.JsonRpcError)(l.ProviderErrorCode.UNAUTHORIZED, "Unauthorized - must be authenticated and configured with a signer.")
                    }
                    case "eth_sendTransaction": {
                        let e = await p.Account.fromStorage(this.#t),
                            r = await this.#u(),
                            n = await i.Authentication.fromStorage(this.#t);
                        if (!e || !n) throw new(0, l.JsonRpcError)(l.ProviderErrorCode.UNAUTHORIZED, "Unauthorized - call eth_requestAccounts first");
                        return await this.#s(), await (0, b.sendCalls)({
                            params: t.params || [],
                            signer: r,
                            account: e,
                            authentication: n,
                            backendClient: this.#o,
                            policyId: this.#r
                        })
                    }
                    case "eth_estimateGas": {
                        let e = await p.Account.fromStorage(this.#t),
                            r = await i.Authentication.fromStorage(this.#t);
                        if (!e || !r) throw new(0, l.JsonRpcError)(l.ProviderErrorCode.UNAUTHORIZED, "Unauthorized - call eth_requestAccounts first");
                        return await this.#s(), await (0, w.estimateGas)({
                            params: t.params || [],
                            account: e,
                            authentication: r,
                            backendClient: this.#o,
                            policyId: this.#r
                        })
                    }
                    case "eth_signTypedData":
                    case "eth_signTypedData_v4": {
                        let e = await p.Account.fromStorage(this.#t),
                            r = await this.#u();
                        if (!e) throw new(0, l.JsonRpcError)(l.ProviderErrorCode.UNAUTHORIZED, "Unauthorized - call eth_requestAccounts first");
                        await this.#s();
                        let n = await this.getRpcProvider();
                        return await (0, c.signTypedDataV4)({
                            method: t.method,
                            params: t.params || [],
                            signer: r,
                            implementationType: e.implementationType || e.type,
                            rpcProvider: n,
                            account: e
                        })
                    }
                    case "personal_sign": {
                        let e = await p.Account.fromStorage(this.#t);
                        if (!e) throw new(0, l.JsonRpcError)(l.ProviderErrorCode.UNAUTHORIZED, "Unauthorized - call eth_requestAccounts first");
                        let r = await this.#u();
                        return await this.#s(), (0, a.debugLog)("[personal_sign] validateAndRefreshSession:"), await (0, v.personalSign)({
                            params: t.params || [],
                            signer: r,
                            account: e
                        })
                    }
                    case "eth_chainId": {
                        let e = await this.getRpcProvider(),
                            {
                                chainId: t
                            } = await e.detectNetwork();
                        return (0, E.numberToHex)(t)
                    }
                    case "wallet_switchEthereumChain": {
                        let r = await this.#u();
                        if (!t.params || !Array.isArray(t.params) || 0 === t.params.length) throw new(0, l.JsonRpcError)(l.RpcErrorCode.INVALID_PARAMS, "Invalid parameters for wallet_switchEthereumChain");
                        await this.#s();
                        try {
                            let n = parseInt(t.params[0].chainId, 16);
                            await r.switchChain({
                                chainId: n
                            }), await e("369f3e054ad6e98f").then(e => {
                                let t = this.#n ? this.#n[n] : void 0;
                                this.#i = new e.StaticJsonRpcProvider(t ?? h.defaultChainRpcs[n])
                            })
                        } catch (e) {
                            throw new(0, l.JsonRpcError)(l.RpcErrorCode.INTERNAL_ERROR, `Failed to switch chain: ${e.message}`)
                        }
                        return null
                    }
                    case "wallet_addEthereumChain": {
                        await this.#u();
                        let e = await this.getRpcProvider();
                        return await (0, g.addEthereumChain)({
                            params: t.params || [],
                            rpcProvider: e,
                            storage: this.#t
                        })
                    }
                    case "wallet_showCallsStatus":
                        return null;
                    case "wallet_getCallsStatus": {
                        let e = await p.Account.fromStorage(this.#t);
                        await this.#u();
                        let r = await i.Authentication.fromStorage(this.#t);
                        if (!e || !r) throw new(0, l.JsonRpcError)(l.ProviderErrorCode.UNAUTHORIZED, "Unauthorized - call eth_requestAccounts first");
                        return await this.#s(), await (0, x.getCallStatus)({
                            params: t.params || {},
                            authentication: r,
                            backendClient: this.#o,
                            account: e
                        })
                    }
                    case "wallet_sendCalls": {
                        let e = await p.Account.fromStorage(this.#t),
                            r = await this.#u(),
                            n = await i.Authentication.fromStorage(this.#t);
                        if (!e || !n) throw new(0, l.JsonRpcError)(l.ProviderErrorCode.UNAUTHORIZED, "Unauthorized - call eth_requestAccounts first");
                        return await this.#s(), await (0, b.sendCalls)({
                            params: t.params ? t.params[0].calls : [],
                            signer: r,
                            account: e,
                            authentication: n,
                            backendClient: this.#o,
                            policyId: this.#r
                        })
                    }
                    case "wallet_grantPermissions": {
                        let e = await p.Account.fromStorage(this.#t),
                            r = await this.#u(),
                            n = await i.Authentication.fromStorage(this.#t);
                        if (!e || !n) throw new(0, l.JsonRpcError)(l.ProviderErrorCode.UNAUTHORIZED, "Unauthorized - call eth_requestAccounts first");
                        return await this.#s(), await (0, m.registerSession)({
                            params: t.params || [],
                            signer: r,
                            account: e,
                            authentication: n,
                            backendClient: this.#o,
                            policyId: this.#r
                        })
                    }
                    case "wallet_revokePermissions": {
                        let e = await p.Account.fromStorage(this.#t),
                            r = await this.#u(),
                            n = await i.Authentication.fromStorage(this.#t);
                        if (!e || !n) throw new(0, l.JsonRpcError)(l.ProviderErrorCode.UNAUTHORIZED, "Unauthorized - call eth_requestAccounts first");
                        return await this.#s(), await (0, y.revokeSession)({
                            params: t.params || [],
                            signer: r,
                            account: e,
                            authentication: n,
                            backendClient: this.#o
                        })
                    }
                    case "wallet_getCapabilities": {
                        let e = await this.getRpcProvider(),
                            {
                                chainId: t
                            } = await e.detectNetwork();
                        return {
                            [(0, E.numberToHex)(t)]: {
                                permissions: {
                                    supported: !0,
                                    signerTypes: ["account", "key"],
                                    keyTypes: ["secp256k1"],
                                    permissionTypes: ["contract-calls"]
                                },
                                paymasterService: {
                                    supported: !0
                                },
                                atomicBatch: {
                                    supported: !0
                                }
                            }
                        }
                    }
                    case "eth_gasPrice":
                    case "eth_getBalance":
                    case "eth_getCode":
                    case "eth_getStorageAt":
                    case "eth_call":
                    case "eth_blockNumber":
                    case "eth_getBlockByHash":
                    case "eth_getBlockByNumber":
                    case "eth_getTransactionByHash":
                    case "eth_getTransactionReceipt":
                    case "eth_getTransactionCount":
                        return (await this.getRpcProvider()).send(t.method, t.params || []);
                    default:
                        throw new(0, l.JsonRpcError)(l.ProviderErrorCode.UNSUPPORTED_METHOD, `${t.method}: Method not supported`)
                }
            }
            async request(e) {
                try {
                    return this.#f(e)
                } catch (e) {
                    if (e instanceof l.JsonRpcError) throw e;
                    if (e instanceof Error) throw new(0, l.JsonRpcError)(l.RpcErrorCode.INTERNAL_ERROR, e.message);
                    throw new(0, l.JsonRpcError)(l.RpcErrorCode.INTERNAL_ERROR, "Internal error")
                }
            }
            on(e, t) {
                this.#a.on(e, t)
            }
            removeListener(e, t) {
                this.#a.off(e, t)
            }
        }
    }, {
        "../../utils/debug.js": "8822a",
        "../../core/configuration/authentication.js": "1Nfd7",
        "./types.js": "h6Lv9",
        "./JsonRpcError.js": "5MjlL",
        "./signTypedDataV4.js": "4S1Sk",
        "../../types/types.js": "fUPIN",
        "../../utils/typedEventEmitter.js": "gZetA",
        "../../utils/chains/index.js": "lU4aU",
        "../../core/configuration/account.js": "f6fHD",
        "./addEthereumChain.js": "kBFnU",
        "./registerSession.js": "iRVAB",
        "./revokeSession.js": "h0LtA",
        "./sendCalls.js": "bOo3j",
        "./getCallsStatus.js": "fT4j5",
        "./personalSign.js": "dk0yV",
        "./estimateGas.js": "d2KSV",
        "../../utils/crypto.js": "3dq9D",
        "369f3e054ad6e98f": "aaQIv",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    h6Lv9: [function(e, t, r, n) {
        var s, a, i, o, l = e("@parcel/transformer-js/src/esmodule-helpers.js");
        l.defineInteropFlag(r), l.export(r, "BackendTransactionStatus", () => i), l.export(r, "ProviderEvent", () => o), (s = i || (i = {})).PENDING = "PENDING", s.SUBMITTED = "SUBMITTED", s.SUCCESSFUL = "SUCCESSFUL", s.REVERTED = "REVERTED", s.FAILED = "FAILED", s.CANCELLED = "CANCELLED", (a = o || (o = {})).ACCOUNTS_CHANGED = "accountsChanged", a.ACCOUNTS_CONNECT = "connect"
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "5MjlL": [function(e, t, r, n) {
        var s, a, i, o, l = e("@parcel/transformer-js/src/esmodule-helpers.js");
        l.defineInteropFlag(r), l.export(r, "JsonRpcError", () => c), l.export(r, "ProviderErrorCode", () => i), l.export(r, "RpcErrorCode", () => o), (s = i || (i = {}))[s.USER_REJECTED_REQUEST = 4001] = "USER_REJECTED_REQUEST", s[s.UNAUTHORIZED = 4100] = "UNAUTHORIZED", s[s.UNSUPPORTED_METHOD = 4200] = "UNSUPPORTED_METHOD", s[s.DISCONNECTED = 4900] = "DISCONNECTED", (a = o || (o = {}))[a.RPC_SERVER_ERROR = -32e3] = "RPC_SERVER_ERROR", a[a.INVALID_REQUEST = -32600] = "INVALID_REQUEST", a[a.METHOD_NOT_FOUND = -32601] = "METHOD_NOT_FOUND", a[a.INVALID_PARAMS = -32602] = "INVALID_PARAMS", a[a.INTERNAL_ERROR = -32603] = "INTERNAL_ERROR", a[a.PARSE_ERROR = -32700] = "PARSE_ERROR", a[a.TRANSACTION_REJECTED = -32003] = "TRANSACTION_REJECTED";
        class c extends Error {
            message;
            code;
            constructor(e, t) {
                super(t), this.message = t, this.code = e
            }
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "4S1Sk": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "signTypedDataV4", () => l);
        var a = e("./walletHelpers.js"),
            i = e("./JsonRpcError.js");
        let o = ["types", "domain", "primaryType", "message"],
            l = async ({
                params: t,
                method: r,
                signer: n,
                implementationType: s,
                rpcProvider: l,
                account: c
            }) => {
                let d = t[0],
                    u = t[1];
                if (!d || !u) throw new(0, i.JsonRpcError)(i.RpcErrorCode.INVALID_PARAMS, `${r} requires an address and a typed data JSON`);
                let {
                    chainId: f
                } = await l.detectNetwork(), h = ((e, t) => {
                    let r, n;
                    if ("string" == typeof e) try {
                        r = JSON.parse(e)
                    } catch (e) {
                        throw new(0, i.JsonRpcError)(i.RpcErrorCode.INVALID_PARAMS, `Failed to parse typed data JSON: ${e}`)
                    } else {
                        if ("object" != typeof e) throw new(0, i.JsonRpcError)(i.RpcErrorCode.INVALID_PARAMS, `Invalid typed data argument: ${e}`);
                        r = e
                    }
                    if (n = r, !o.every(e => e in n)) throw new(0, i.JsonRpcError)(i.RpcErrorCode.INVALID_PARAMS, `Invalid typed data argument. The following properties are required: 
      ${o.join(", ")}`);
                    let s = r.domain?.chainId;
                    if (s && ("string" == typeof s && (s.startsWith("0x") ? r.domain.chainId = parseInt(s, 16) : r.domain.chainId = parseInt(s, 10)), r.domain.chainId !== t)) throw new(0, i.JsonRpcError)(i.RpcErrorCode.INVALID_PARAMS, `Invalid chainId, expected ${t}`);
                    return r
                })(u, f), p = {
                    ...h.types
                };
                delete p.EIP712Domain;
                let {
                    _TypedDataEncoder: g
                } = await e("f00f964c12e9a3d1"), m = g.hash(h.domain, p, h.message);
                return await (0, a.signMessage)({
                    hash: m,
                    implementationType: s,
                    chainId: f,
                    signer: n,
                    address: d,
                    ownerAddress: c.ownerAddress,
                    factoryAddress: c.factoryAddress,
                    salt: c.salt
                })
            }
    }, {
        "./walletHelpers.js": "arpu2",
        "./JsonRpcError.js": "5MjlL",
        f00f964c12e9a3d1: "duGRv",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    gZetA: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => i);
        var a = e("eventemitter3");
        class i {
            emitter = new(0, a.EventEmitter);
            on(e, t) {
                return this.emitter.on(e, t), this
            }
            off(e, t) {
                return this.emitter.off(e, t), this
            }
            emit(e, ...t) {
                return this.emitter.emit(e, ...t)
            }
            once(e, t) {
                return this.emitter.once(e, t), this
            }
            removeAllListeners(e) {
                return this.emitter.removeAllListeners(e), this
            }
            listenerCount(e) {
                return this.emitter.listenerCount(e)
            }
            listeners(e) {
                return this.emitter.listeners(e)
            }
        }
    }, {
        eventemitter3: "gddYA",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    lU4aU: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "defaultChainRpcs", () => a);
        let a = {
            1: "https://cloudflare-eth.com",
            10: "https://optimism-rpc.publicnode.com",
            56: "https://bsc.publicnode.com",
            97: "https://bsc-testnet.publicnode.com",
            137: "https://polygon-rpc.com",
            204: "https://opbnb-mainnet-rpc.bnbchain.org",
            300: "https://sepolia.era.zksync.dev",
            324: "https://mainnet.era.zksync.io",
            1946: "https://rpc.minato.soneium.org",
            2741: "https://api.mainnet.abs.xyz",
            3939: "https://test.doschain.com",
            4337: "https://build.onbeam.com/rpc",
            5611: "https://opbnb-testnet-rpc.bnbchain.org",
            7979: "https://main.doschain.com",
            8453: "https://mainnet.base.org",
            11124: "https://api.testnet.abs.xyz",
            13337: "https://build.onbeam.com/rpc/testnet",
            13473: "https://rpc.testnet.immutable.com",
            42161: "https://arb1.arbitrum.io/rpc",
            42170: "https://nova.arbitrum.io/rpc",
            43113: "https://api.avax-test.network/ext/bc/C/rpc",
            43114: "https://api.avax.network/ext/bc/C/rpc",
            50104: "https://rpc.sophon.xyz",
            80002: "https://polygon-amoy-bor-rpc.publicnode.com",
            84532: "https://sepolia.base.org",
            247253: "https://rpc-testnet.saakuru.network",
            421614: "https://sepolia-rollup.arbitrum.io/rpc",
            7225878: "https://rpc.saakuru.network",
            7777777: "https://rpc.zora.energy",
            0xaa36a7: "https://ethereum-sepolia-rpc.publicnode.com",
            0xaa37dc: "https://optimism-sepolia-rpc.publicnode.com",
            0x1ad1ba8: "https://rpcv2-testnet.ancient8.gg",
            0x1fa72e78: "https://rpc.testnet.sophon.xyz",
            0x27bc86aa: "https://rpc.degen.tips",
            0x34fb5e38: "https://rpc.ancient8.gg",
            0x3b9ac9ff: "https://sepolia.rpc.zora.energy",
            85011: "https://subnets.avax.network/criminalsa/testnet/rpc",
            84358: "https://subnets.avax.network/titan/mainnet/rpc",
            10143: "https://testnet-rpc.monad.xyz"
        }
    }, {
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    kBFnU: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "addEthereumChain", () => o);
        var a = e("./JsonRpcError.js");
        let i = ["chainId", "chainName", "nativeCurrency"],
            o = async ({
                params: e,
                rpcProvider: t,
                storage: r
            }) => {
                if (!e || !Array.isArray(e) || 0 === e.length) throw new(0, a.JsonRpcError)(a.RpcErrorCode.INVALID_PARAMS, "Invalid parameters for wallet_addEthereumChain");
                let n = parseInt((e => {
                        var t;
                        if (!e || "object" != typeof e) throw new(0, a.JsonRpcError)(a.RpcErrorCode.INVALID_PARAMS, "Invalid chain parameter: expected an object");
                        if (!i.every(t => t in e)) throw new(0, a.JsonRpcError)(a.RpcErrorCode.INVALID_PARAMS, `Invalid chain parameter. The following properties are required: ${i.join(", ")}`);
                        if (!e.chainName || "" === e.chainName.trim()) throw new(0, a.JsonRpcError)(a.RpcErrorCode.INVALID_PARAMS, "chainName cannot be empty");
                        if (!((t = e.nativeCurrency) && "object" == typeof t && "name" in t && "symbol" in t && "decimals" in t && "string" == typeof t.name && "string" == typeof t.symbol && "number" == typeof t.decimals && Number.isInteger(t.decimals))) throw new(0, a.JsonRpcError)(a.RpcErrorCode.INVALID_PARAMS, "Invalid nativeCurrency object");
                        if (0 === e.rpcUrls?.length) throw new(0, a.JsonRpcError)(a.RpcErrorCode.INVALID_PARAMS, "At least one RPC URL must be provided");
                        if (!/^0x[0-9a-fA-F]+$/.test(e.chainId)) throw new(0, a.JsonRpcError)(a.RpcErrorCode.INVALID_PARAMS, "chainId must be a valid hex string");
                        return {
                            chainId: e.chainId,
                            blockExplorerUrls: e.blockExplorerUrls || [],
                            chainName: e.chainName,
                            iconUrls: e.iconUrls || [],
                            rpcUrls: e.rpcUrls || [],
                            nativeCurrency: e.nativeCurrency
                        }
                    })(e[0]).chainId, 16),
                    {
                        chainId: s
                    } = await t.detectNetwork();
                return n !== s && null
            }
    }, {
        "./JsonRpcError.js": "5MjlL",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    iRVAB: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "registerSession", () => d);
        var a = e("../../core/errors/openfortError.js"),
            i = e("./JsonRpcError.js");

        function o(e) {
            return {
                data: "token-allowance" === e.type ? {
                    allowance: e.data.allowance.toString()
                } : "gas-limit" === e.type ? {
                    limit: e.data.limit.toString()
                } : e.data,
                type: "string" == typeof e.type ? e.type : e.type.custom
            }
        }

        function l(e) {
            return {
                ...e,
                policies: e.policies.map(o),
                required: e.required ?? !1,
                type: "string" == typeof e.type ? e.type : e.type.custom
            }
        }

        function c(e) {
            return {
                expiry: e.validUntil ? Number(e.validUntil) : 0,
                grantedPermissions: e.whitelist ? e.whitelist.map(t => ({
                    type: "contract-call",
                    data: {
                        address: t,
                        calls: []
                    },
                    policies: [{
                        data: {
                            limit: e.limit
                        },
                        type: {
                            custom: "usage-limit"
                        }
                    }]
                })) : [],
                permissionsContext: e.id
            }
        }
        let d = async ({
            params: e,
            signer: t,
            account: r,
            authentication: n,
            backendClient: s,
            policyId: o
        }) => {
            let d = await (async (e, t, r, n, s) => {
                let o, c = e[0],
                    d = Math.floor((new Date).getTime() / 1e3),
                    u = Math.floor(new Date(Date.now() + 1e3 * c.expiry).getTime() / 1e3),
                    f = c.permissions.map(l),
                    h = f.filter(e => "contract-call" === e.type || "erc20-token-transfer" === e.type).map(e => e.data.address),
                    p = f[0].policies.find(e => "usage-limit" === e.type)?.data?.limit;
                if ("signer" in c && c.signer) {
                    if ("keys" === c.signer.type) throw new(0, i.JsonRpcError)(i.RpcErrorCode.INVALID_PARAMS, "Multi-key signers are not supported for session creation");
                    "key" !== c.signer.type && "account" !== c.signer.type || (o = c.signer.data.id)
                } else "account" in c && c.account && (o = c.account);
                if (!o) throw new(0, i.JsonRpcError)(i.RpcErrorCode.INVALID_PARAMS, "Failed to request permissions - missing session address");
                let g = ((e, t, r, n, s, a = !1, i, o, l, c) => {
                    let d = {
                        address: e,
                        chainId: t,
                        validAfter: r,
                        validUntil: n,
                        optimistic: a,
                        whitelist: i,
                        player: o,
                        account: c
                    };
                    return s && (d.policy = s), l && (d.limit = l), d
                })(o, r.chainId, d, u, s, !1, h, n.player, p, r.id);
                return (0, a.withOpenfortError)(async () => (await t.sessionsApi.createSession({
                    createSessionRequest: g
                }, {
                    headers: {
                        authorization: `Bearer ${t.config.backend.accessToken}`,
                        "x-player-token": n.token,
                        "x-auth-provider": n.thirdPartyProvider,
                        "x-token-type": n.thirdPartyTokenType
                    }
                })).data, {
                    default: a.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            })(e, s, r, n, o).catch(e => {
                throw new(0, i.JsonRpcError)(i.RpcErrorCode.TRANSACTION_REJECTED, e.message)
            });
            if (d?.nextAction?.payload?.signableHash) {
                let e;
                return e = [300, 0x1fa72e78, 324, 50104, 2741, 11124].includes(r.chainId) ? await t.sign(d.nextAction.payload.signableHash, !1, !1) : await t.sign(d.nextAction.payload.signableHash), c(await (0, a.withOpenfortError)(async () => (await s.sessionsApi.signatureSession({
                    id: d.id,
                    signatureRequest: {
                        signature: e
                    }
                })).data, {
                    default: a.OpenfortErrorType.AUTHENTICATION_ERROR
                }).catch(e => {
                    throw new(0, i.JsonRpcError)(i.RpcErrorCode.TRANSACTION_REJECTED, e.message)
                }))
            }
            if (!1 === d.isActive) throw new(0, i.JsonRpcError)(i.RpcErrorCode.TRANSACTION_REJECTED, "Failed to grant permissions");
            return c(d)
        }
    }, {
        "../../core/errors/openfortError.js": "3xESR",
        "./JsonRpcError.js": "5MjlL",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    h0LtA: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "revokeSession", () => o);
        var a = e("../../core/errors/openfortError.js"),
            i = e("./JsonRpcError.js");
        let o = async ({
            params: e,
            signer: t,
            account: r,
            authentication: n,
            backendClient: s,
            policyId: o
        }) => {
            let l = e[0];
            if (!l.permissionContext) return await t.disconnect(), {};
            let c = await (async (e, t, r, n, s) => {
                let i = ((e, t, r, n, s) => {
                    let a = {
                        address: e,
                        chainId: t,
                        player: r,
                        account: s
                    };
                    return n && (a.policy = n), a
                })(e.permissionContext, r.chainId, n.player, s, r.id);
                return (0, a.withOpenfortError)(async () => (await t.sessionsApi.revokeSession({
                    revokeSessionRequest: i
                }, {
                    headers: {
                        authorization: `Bearer ${t.config.backend.accessToken}`,
                        "x-player-token": n.token,
                        "x-auth-provider": n.thirdPartyProvider,
                        "x-token-type": n.thirdPartyTokenType
                    }
                })).data, {
                    default: a.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            })(l, s, r, n, o).catch(e => {
                throw new(0, i.JsonRpcError)(i.RpcErrorCode.TRANSACTION_REJECTED, e.message)
            });
            if (c?.nextAction?.payload?.signableHash) {
                let e;
                return e = [300, 0x1fa72e78, 324, 50104, 2741, 11124].includes(r.chainId) ? await t.sign(c.nextAction.payload.signableHash, !1, !1) : await t.sign(c.nextAction.payload.signableHash), (await s.sessionsApi.signatureSession({
                    id: c.id,
                    signatureRequest: {
                        signature: e
                    }
                }).catch(e => {
                    throw new(0, i.JsonRpcError)(i.RpcErrorCode.TRANSACTION_REJECTED, e.message)
                })).data
            }
            return c
        }
    }, {
        "../../core/errors/openfortError.js": "3xESR",
        "./JsonRpcError.js": "5MjlL",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    bOo3j: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "sendCalls", () => o);
        var a = e("../../core/errors/openfortError.js"),
            i = e("./JsonRpcError.js");
        let o = async ({
            params: e,
            signer: t,
            account: r,
            authentication: n,
            backendClient: s,
            policyId: o
        }) => {
            let l = e[0]?.capabilities?.paymasterService?.policy ?? o,
                c = await (async (e, t, r, n, s) => {
                    let o = e.map(e => {
                        if (!e.to) throw new(0, i.JsonRpcError)(i.RpcErrorCode.INVALID_PARAMS, 'wallet_sendCalls requires a "to" field');
                        return {
                            to: String(e.to),
                            data: e.data ? String(e.data) : void 0,
                            value: e.value ? String(e.value) : void 0
                        }
                    });
                    return (0, a.withOpenfortError)(async () => (await t.transactionIntentsApi.createTransactionIntent({
                        createTransactionIntentRequest: {
                            account: r.id,
                            policy: s,
                            chainId: r.chainId,
                            interactions: o
                        }
                    }, {
                        headers: {
                            authorization: `Bearer ${t.config.backend.accessToken}`,
                            "x-player-token": n.token,
                            "x-auth-provider": n.thirdPartyProvider,
                            "x-token-type": n.thirdPartyTokenType
                        }
                    })).data, {
                        default: a.OpenfortErrorType.AUTHENTICATION_ERROR
                    })
                })(e, s, r, n, l).catch(e => {
                    throw new(0, i.JsonRpcError)(i.RpcErrorCode.TRANSACTION_REJECTED, e.message)
                });
            if (c.response?.error.reason) throw new(0, i.JsonRpcError)(i.RpcErrorCode.TRANSACTION_REJECTED, c.response?.error.reason);
            if (c?.nextAction?.payload?.signableHash) {
                let e;
                e = [300, 0x1fa72e78, 324, 50104, 2741, 11124].includes(r.chainId) ? await t.sign(c.nextAction.payload.signableHash, !1, !1) : await t.sign(c.nextAction.payload.signableHash);
                let n = await (0, a.withOpenfortError)(async () => await s.transactionIntentsApi.signature({
                    id: c.id,
                    signatureRequest: {
                        signature: e
                    }
                }), {
                    default: a.OpenfortErrorType.AUTHENTICATION_ERROR
                }).catch(e => {
                    throw new(0, i.JsonRpcError)(i.RpcErrorCode.TRANSACTION_REJECTED, e.message)
                });
                if (0 === n.data.response?.status) throw new(0, i.JsonRpcError)(i.RpcErrorCode.TRANSACTION_REJECTED, n.data.response?.error.reason);
                return n.data.response?.transactionHash
            }
            return c.response?.transactionHash
        }
    }, {
        "../../core/errors/openfortError.js": "3xESR",
        "./JsonRpcError.js": "5MjlL",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    fT4j5: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "getCallStatus", () => o);
        var a = e("../../core/errors/openfortError.js"),
            i = e("./JsonRpcError.js");
        let o = async ({
            params: e,
            authentication: t,
            backendClient: r
        }) => {
            let n = await (async (e, t, r) => (0, a.withOpenfortError)(async () => (await t.transactionIntentsApi.getTransactionIntent({
                id: e
            }, {
                headers: {
                    authorization: `Bearer ${t.config.backend.accessToken}`,
                    "x-player-token": r.token,
                    "x-auth-provider": r.thirdPartyProvider,
                    "x-token-type": r.thirdPartyTokenType
                }
            })).data, {
                default: a.OpenfortErrorType.AUTHENTICATION_ERROR
            }))(e[0], r, t).catch(e => {
                throw new(0, i.JsonRpcError)(i.RpcErrorCode.TRANSACTION_REJECTED, e.message)
            });
            return {
                status: n.response ? "CONFIRMED" : "PENDING",
                receipts: n.response ? [{
                    status: 0 === n.response.status ? "reverted" : "success",
                    logs: n.response.logs?.map(e => ({
                        address: e.address,
                        data: e.data,
                        topics: e.topics
                    })) || [],
                    blockHash: n.response.transactionHash || "",
                    blockNumber: BigInt(n.response.blockNumber || 0),
                    gasUsed: BigInt(n.response.gasUsed || 0),
                    transactionHash: n.response.transactionHash || ""
                }] : void 0
            }
        }
    }, {
        "../../core/errors/openfortError.js": "3xESR",
        "./JsonRpcError.js": "5MjlL",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    dk0yV: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "personalSign", () => l);
        var a = e("../../utils/crypto.js"),
            i = e("./JsonRpcError.js"),
            o = e("./walletHelpers.js");
        let l = async ({
            params: t,
            signer: r,
            account: n
        }) => {
            let s = t[0],
                l = t[1];
            if (!l || !s) throw new(0, i.JsonRpcError)(i.RpcErrorCode.INVALID_PARAMS, "personal_sign requires an address and a message");
            if (l.toLowerCase() !== n.address.toLowerCase()) throw new(0, i.JsonRpcError)(i.RpcErrorCode.INVALID_PARAMS, "personal_sign requires the signer to be the from address");
            let {
                hashMessage: c
            } = await e("ac18b93a38ef0b94");
            return await (0, o.signMessage)({
                hash: c((0, a.hexToString)(s)),
                implementationType: n.implementationType || n.type,
                chainId: Number(n.chainId),
                signer: r,
                address: l,
                salt: n.salt,
                factoryAddress: n.factoryAddress,
                ownerAddress: n.ownerAddress
            })
        }
    }, {
        "../../utils/crypto.js": "3dq9D",
        "./JsonRpcError.js": "5MjlL",
        "./walletHelpers.js": "arpu2",
        ac18b93a38ef0b94: "duGRv",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    d2KSV: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "estimateGas", () => o);
        var a = e("../../core/errors/openfortError.js"),
            i = e("./JsonRpcError.js");
        let o = async ({
            params: e,
            account: t,
            authentication: r,
            backendClient: n,
            policyId: s
        }) => (await (async (e, t, r, n, s) => {
            let o = e.map(e => {
                if (!e.to) throw new(0, i.JsonRpcError)(i.RpcErrorCode.INVALID_PARAMS, 'eth_estimateGas requires a "to" field');
                return {
                    to: String(e.to),
                    data: e.data ? String(e.data) : void 0,
                    value: e.value ? String(e.value) : void 0
                }
            });
            return (0, a.withOpenfortError)(async () => (await t.transactionIntentsApi.estimateTransactionIntentCost({
                createTransactionIntentRequest: {
                    policy: s,
                    chainId: r.chainId,
                    interactions: o
                }
            }, {
                headers: {
                    authorization: `Bearer ${t.config.backend.accessToken}`,
                    "x-player-token": n.token,
                    "x-auth-provider": n.thirdPartyProvider,
                    "x-token-type": n.thirdPartyTokenType
                }
            })).data, {
                default: a.OpenfortErrorType.AUTHENTICATION_ERROR
            })
        })(e, n, t, r, s).catch(e => {
            throw new(0, i.JsonRpcError)(i.RpcErrorCode.TRANSACTION_REJECTED, e.message)
        })).estimatedTXGas
    }, {
        "../../core/errors/openfortError.js": "3xESR",
        "./JsonRpcError.js": "5MjlL",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    aaQIv: [function(e, t, r, n) {
        t.exports = Promise.resolve(t.bundle.root("lpm2Y"))
    }, {}],
    "3LTkv": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "announceProvider", () => i), s.export(r, "openfortProviderInfo", () => a);
        let a = {
            icon: 'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" viewBox="597.32 331.34 171.36 105.32" ><g><rect x="673.9" y="404.26" width="18.2" height="32.4" /><polygon points="768.68,331.36 768.68,331.36 768.68,331.34 610.78,331.34 610.78,331.36 597.32,331.36 597.32,436.64    615.52,436.64 615.52,349.54 750.48,349.54 750.48,436.64 768.68,436.64  " /><polygon points="732.16,367.79 633.83,367.79 633.83,370.19 633.79,370.19 633.79,436.64 651.99,436.64 651.99,385.99    713.9,385.99 713.9,436.64 732.09,436.64 732.09,385.99 732.16,385.99  " /></g></svg>',
            name: "Openfort",
            rdns: "xyz.openfort",
            uuid: (0, e("../../../utils/crypto.js").randomUUID)()
        };

        function i(e) {
            if ("undefined" == typeof window) return;
            let t = new CustomEvent("eip6963:announceProvider", {
                detail: Object.freeze(e)
            });
            window.dispatchEvent(t), window.addEventListener("eip6963:requestProvider", () => window.dispatchEvent(t))
        }
    }, {
        "../../../utils/crypto.js": "3dq9D",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "18PER": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "EmbeddedSigner", () => u);
        var a = e("../core/configuration/authentication.js"),
            i = e("../core/errors/openfortError.js"),
            o = e("../types/types.js");
        e("./types.js");
        var l = e("../core/configuration/account.js");
        e("./messaging/browserMessenger/backwardCompatibility.js");
        var c = e("../storage/istorage.js"),
            d = e("../core/config/config.js");
        e("../core/errors/sentry.js"), e("jose"), e("./evm/types.js"), e("./evm/JsonRpcError.js"), e("eventemitter3"), e("./evm/provider/eip6963.js");
        class u {
            iframeManager;
            storage;
            backendApiClients;
            eventEmitter;
            constructor(e, t, r, n) {
                this.iframeManager = e, this.storage = t, this.backendApiClients = r, this.eventEmitter = n
            }
            async configure(e) {
                let t = await this.iframeManager.configure(e),
                    r = await a.Authentication.fromStorage(this.storage);
                if (!r) throw new(0, i.OpenfortError)("No access token found", i.OpenfortErrorType.NOT_LOGGED_IN_ERROR);
                let n = d.SDKConfiguration.fromStorage();
                if (!n) throw new(0, i.OpenfortError)("Configuration not found", i.OpenfortErrorType.INVALID_CONFIGURATION);
                return t?.account || (0, i.withOpenfortError)(async () => {
                    let e = await this.backendApiClients.accountsApi.getAccountsV2({
                        chainId: t.chainId,
                        address: t.address
                    }, {
                        headers: {
                            authorization: `Bearer ${n.baseConfiguration.publishableKey}`,
                            "x-player-token": r.token,
                            "x-auth-provider": r.thirdPartyProvider,
                            "x-token-type": r.thirdPartyTokenType
                        }
                    });
                    if (0 === e.data.data.length) throw new(0, i.OpenfortError)("No account found", i.OpenfortErrorType.MISSING_SIGNER_ERROR);
                    let s = new(0, l.Account)({
                        user: e.data.data[0].user,
                        chainType: e.data.data[0].accountType,
                        id: e.data.data[0].id,
                        address: e.data.data[0].address,
                        ownerAddress: e.data.data[0].ownerAddress,
                        accountType: e.data.data[0].accountType,
                        createdAt: e.data.data[0].createdAt,
                        implementationType: e.data.data[0].smartAccount?.implementationType,
                        chainId: e.data.data[0].chainId,
                        factoryAddress: e.data.data[0].smartAccount?.factoryAddress,
                        salt: e.data.data[0].smartAccount?.salt
                    });
                    return s.save(this.storage), this.eventEmitter.emit(o.OpenfortEvents.SWITCH_ACCOUNT, e.data.data[0].address), s
                }, {
                    default: i.OpenfortErrorType.AUTHENTICATION_ERROR
                }), (0, i.withOpenfortError)(async () => {
                    let e = await this.backendApiClients.accountsApi.getAccountV2({
                            id: t.account
                        }, {
                            headers: {
                                authorization: `Bearer ${n.baseConfiguration.publishableKey}`,
                                "x-player-token": r.token,
                                "x-auth-provider": r.thirdPartyProvider,
                                "x-token-type": r.thirdPartyTokenType
                            }
                        }),
                        s = new(0, l.Account)({
                            user: e.data.user,
                            chainType: e.data.accountType,
                            id: e.data.id,
                            address: e.data.address,
                            ownerAddress: e.data.ownerAddress,
                            accountType: e.data.accountType,
                            createdAt: e.data.createdAt,
                            implementationType: e.data.smartAccount?.implementationType,
                            chainId: e.data.chainId,
                            salt: e.data.smartAccount?.salt,
                            factoryAddress: e.data.smartAccount?.factoryAddress
                        });
                    return s.save(this.storage), this.eventEmitter.emit(o.OpenfortEvents.SWITCH_ACCOUNT, e.data.address), s
                }, {
                    default: i.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            }
            async sign(e, t, r) {
                return await this.iframeManager.sign(e, t, r)
            }
            async export () {
                return await this.iframeManager.export()
            }
            async switchChain({
                chainId: e
            }) {
                let t = await this.iframeManager.switchChain(e),
                    r = await l.Account.fromStorage(this.storage);
                new(0, l.Account)({
                    ...r,
                    id: t.account,
                    chainId: e
                }).save(this.storage)
            }
            async create(e) {
                let t = await this.iframeManager.create(e),
                    r = await a.Authentication.fromStorage(this.storage);
                if (!r) throw new(0, i.OpenfortError)("No access token found", i.OpenfortErrorType.NOT_LOGGED_IN_ERROR);
                let n = d.SDKConfiguration.fromStorage();
                if (!n) throw new(0, i.OpenfortError)("Configuration not found", i.OpenfortErrorType.INVALID_CONFIGURATION);
                return (0, i.withOpenfortError)(async () => {
                    let e = await this.backendApiClients.accountsApi.getAccountV2({
                            id: t.account
                        }, {
                            headers: {
                                authorization: `Bearer ${n.baseConfiguration.publishableKey}`,
                                "x-player-token": r.token,
                                "x-auth-provider": r.thirdPartyProvider,
                                "x-token-type": r.thirdPartyTokenType
                            }
                        }),
                        s = new(0, l.Account)({
                            user: e.data.user,
                            chainType: e.data.accountType,
                            id: e.data.id,
                            address: e.data.address,
                            ownerAddress: e.data.ownerAddress,
                            accountType: e.data.accountType,
                            createdAt: e.data.createdAt,
                            implementationType: e.data.smartAccount?.implementationType,
                            chainId: e.data.chainId,
                            salt: e.data.smartAccount?.salt,
                            factoryAddress: e.data.smartAccount?.factoryAddress
                        });
                    return s.save(this.storage), this.eventEmitter.emit(o.OpenfortEvents.SWITCH_ACCOUNT, e.data.address), s
                }, {
                    default: i.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            }
            async recover(e) {
                let t = await this.iframeManager.recover(e),
                    r = await a.Authentication.fromStorage(this.storage);
                if (!r) throw new(0, i.OpenfortError)("No access token found", i.OpenfortErrorType.NOT_LOGGED_IN_ERROR);
                let n = d.SDKConfiguration.fromStorage();
                if (!n) throw new(0, i.OpenfortError)("Configuration not found", i.OpenfortErrorType.INVALID_CONFIGURATION);
                return (0, i.withOpenfortError)(async () => {
                    let e = await this.backendApiClients.accountsApi.getAccountV2({
                            id: t.account
                        }, {
                            headers: {
                                authorization: `Bearer ${n.baseConfiguration.publishableKey}`,
                                "x-player-token": r.token,
                                "x-auth-provider": r.thirdPartyProvider,
                                "x-token-type": r.thirdPartyTokenType
                            }
                        }),
                        s = new(0, l.Account)({
                            user: e.data.user,
                            chainType: e.data.accountType,
                            id: e.data.id,
                            address: e.data.address,
                            ownerAddress: e.data.ownerAddress,
                            accountType: e.data.accountType,
                            createdAt: e.data.createdAt,
                            implementationType: e.data.smartAccount?.implementationType,
                            chainId: e.data.chainId,
                            salt: e.data.smartAccount?.salt,
                            factoryAddress: e.data.smartAccount?.factoryAddress
                        });
                    return s.save(this.storage), this.eventEmitter.emit(o.OpenfortEvents.SWITCH_ACCOUNT, e.data.address), s
                }, {
                    default: i.OpenfortErrorType.AUTHENTICATION_ERROR
                })
            }
            async setEmbeddedRecovery({
                recoveryMethod: e,
                recoveryPassword: t,
                encryptionSession: r
            }) {
                await this.iframeManager.setEmbeddedRecovery(e, t, r)
            }
            async disconnect() {
                await this.iframeManager.disconnect(), this.storage.remove(c.StorageKeys.ACCOUNT)
            }
        }
    }, {
        "../core/configuration/authentication.js": "1Nfd7",
        "../core/errors/openfortError.js": "3xESR",
        "../types/types.js": "fUPIN",
        "./types.js": "iBeSb",
        "../core/configuration/account.js": "f6fHD",
        "./messaging/browserMessenger/backwardCompatibility.js": "hsQQI",
        "../storage/istorage.js": "8EpXG",
        "../core/config/config.js": "8pPBU",
        "../core/errors/sentry.js": "913SB",
        jose: "kXgGE",
        "./evm/types.js": "h6Lv9",
        "./evm/JsonRpcError.js": "5MjlL",
        eventemitter3: "gddYA",
        "./evm/provider/eip6963.js": "3LTkv",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    eYWLa: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "default", () => u);
        var a = e("../backwardCompatibility.js"),
            i = e("../guards.js"),
            o = e("../PenpalError.js"),
            l = s.interopDefault(o),
            c = e("../PenpalBugError.js"),
            d = s.interopDefault(c);
        class u {
            #r;
            #e;
            #t;
            #s;
            #o;
            #a = new Set;
            #i;
            #n = !1;
            constructor({
                remoteWindow: e,
                allowedOrigins: t
            }) {
                if (!e) throw new(0, l.default)("INVALID_ARGUMENT", "remoteWindow must be defined");
                this.#r = e, this.#e = t?.length ? t : [window.origin]
            }
            initialize = ({
                log: e,
                validateReceivedMessage: t
            }) => {
                this.#t = e, this.#s = t, window.addEventListener("message", this.#d)
            };
            sendMessage = (e, t) => {
                if ((0, i.isSynMessage)(e)) {
                    let r = this.#h(e);
                    return void this.#r.postMessage(e, {
                        targetOrigin: r,
                        transfer: t
                    })
                }
                if ((0, i.isAck1Message)(e) || this.#n) {
                    let r = this.#n ? (0, a.downgradeMessage)(e) : e,
                        n = this.#h(e);
                    return void this.#r.postMessage(r, {
                        targetOrigin: n,
                        transfer: t
                    })
                }
                if ((0, i.isAck2Message)(e)) {
                    let {
                        port1: r,
                        port2: n
                    } = new MessageChannel;
                    this.#i = r, r.addEventListener("message", this.#p), r.start();
                    let s = [n, ...t || []],
                        a = this.#h(e);
                    return void this.#r.postMessage(e, {
                        targetOrigin: a,
                        transfer: s
                    })
                }
                if (!this.#i) throw new(0, d.default)("Port is undefined");
                this.#i.postMessage(e, {
                    transfer: t
                })
            };
            addMessageHandler = e => {
                this.#a.add(e)
            };
            removeMessageHandler = e => {
                this.#a.delete(e)
            };
            destroy = () => {
                window.removeEventListener("message", this.#d), this.#c(), this.#a.clear()
            };
            #l = e => this.#e.some(t => t instanceof RegExp ? t.test(e) : t === e || "*" === t);
            #h = e => {
                if ((0, i.isSynMessage)(e)) return "*";
                if (!this.#o) throw new(0, d.default)("Concrete remote origin not set");
                return "null" === this.#o && this.#e.includes("*") ? "*" : this.#o
            };
            #c = () => {
                this.#i?.removeEventListener("message", this.#p), this.#i?.close(), this.#i = void 0
            };
            #d = ({
                source: e,
                origin: t,
                ports: r,
                data: n
            }) => {
                if (e === this.#r && ((0, a.isDeprecatedMessage)(n) && (this.#t?.("Please upgrade the child window to the latest version of Penpal."), this.#n = !0, n = (0, a.upgradeMessage)(n)), this.#s?.(n)))
                    if (this.#l(t)) {
                        if ((0, i.isSynMessage)(n) && (this.#c(), this.#o = t), (0, i.isAck2Message)(n) && !this.#n) {
                            if ([this.#i] = r, !this.#i) throw new(0, d.default)("No port received on ACK2");
                            this.#i.addEventListener("message", this.#p), this.#i.start()
                        }
                        for (let e of this.#a) e(n)
                    } else this.#t?.(`Received a message from origin \`${t}\` which did not match allowed origins \`[${this.#e.join(", ")}]\``)
            };
            #p = ({
                data: e
            }) => {
                if (this.#s?.(e))
                    for (let t of this.#a) t(e)
            }
        }
    }, {
        "../backwardCompatibility.js": "hsQQI",
        "../guards.js": "6PYiY",
        "../PenpalError.js": "dwP65",
        "../PenpalBugError.js": "4tDPR",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "6FRSo": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "UserApi", () => o);
        var a = e("../core/configuration/authentication.js"),
            i = e("../core/errors/openfortError.js");
        class o {
            storage;
            authManager;
            validateAndRefreshToken;
            constructor(e, t, r) {
                this.storage = e, this.authManager = t, this.validateAndRefreshToken = r
            }
            async get() {
                await this.validateAndRefreshToken();
                let e = await a.Authentication.fromStorage(this.storage);
                if (!e) throw new(0, i.OpenfortError)("No access token found", i.OpenfortErrorType.NOT_LOGGED_IN_ERROR);
                return await this.authManager.getUser(e)
            }
        }
    }, {
        "../core/configuration/authentication.js": "1Nfd7",
        "../core/errors/openfortError.js": "3xESR",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    "3zeZX": [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "ProxyApi", () => o);
        var a = e("../core/config/config.js"),
            i = e("../core/errors/openfortError.js");
        class o {
            storage;
            backendApiClients;
            validateAndRefreshToken;
            ensureInitialized;
            getSignerSignFunction;
            constructor(e, t, r, n, s) {
                this.storage = e, this.backendApiClients = t, this.validateAndRefreshToken = r, this.ensureInitialized = n, this.getSignerSignFunction = s
            }
            async sendSignatureTransactionIntentRequest(e, t = null, r = null, n = !1) {
                if (await this.ensureInitialized(), !a.SDKConfiguration.fromStorage()) throw new(0, i.OpenfortError)("Configuration not found", i.OpenfortErrorType.INVALID_CONFIGURATION);
                await this.validateAndRefreshToken();
                let s = r;
                if (!s) {
                    if (!t) throw new(0, i.OpenfortError)("No signableHash or signature provided", i.OpenfortErrorType.OPERATION_NOT_SUPPORTED_ERROR);
                    if (!this.getSignerSignFunction) throw new(0, i.OpenfortError)("In order to sign a transaction intent, a signer must be configured", i.OpenfortErrorType.MISSING_SIGNER_ERROR);
                    let e = await this.getSignerSignFunction();
                    s = await e(t)
                }
                let o = {
                    id: e,
                    signatureRequest: {
                        signature: s,
                        optimistic: n
                    }
                };
                return (0, i.withOpenfortError)(async () => (await this.backendApiClients.transactionIntentsApi.signature(o)).data, {
                    default: i.OpenfortErrorType.INTERNAL_ERROR
                })
            }
            async sendSignatureSessionRequest(e, t, r) {
                await this.ensureInitialized();
                let n = {
                    id: e,
                    signatureRequest: {
                        signature: t,
                        optimistic: r
                    }
                };
                return (0, i.withOpenfortError)(async () => (await this.backendApiClients.sessionsApi.signatureSession(n)).data, {
                    default: i.OpenfortErrorType.INTERNAL_ERROR
                })
            }
        }
    }, {
        "../core/config/config.js": "8pPBU",
        "../core/errors/openfortError.js": "3xESR",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }],
    kvnur: [function(e, t, r, n) {
        var s = e("@parcel/transformer-js/src/esmodule-helpers.js");
        s.defineInteropFlag(r), s.export(r, "OpenfortInternal", () => d);
        var a = e("../utils/debug.js"),
            i = e("../storage/istorage.js"),
            o = e("./errors/openfortError.js"),
            l = e("./configuration/authentication.js"),
            c = e("../types/types.js");
        class d {
            storage;
            authManager;
            eventEmitter;
            constructor(e, t, r) {
                this.storage = e, this.authManager = t, this.eventEmitter = r
            }
            async getAccessToken() {
                return (await l.Authentication.fromStorage(this.storage))?.token ?? null
            }
            async validateAndRefreshToken(e) {
                let t, r = await l.Authentication.fromStorage(this.storage);
                if (!r) throw new(0, o.OpenfortError)("Must be logged in to validate and refresh token", o.OpenfortErrorType.NOT_LOGGED_IN_ERROR);
                if ("jwt" === r.type) {
                    (0, a.debugLog)("validating credentials...");
                    try {
                        t = await this.authManager.validateCredentials(r, e)
                    } catch (e) {
                        throw this.storage.remove(i.StorageKeys.AUTHENTICATION), this.eventEmitter.emit(c.OpenfortEvents.LOGGED_OUT), e
                    }
                    if (!t.player) throw new(0, o.OpenfortError)("No user found in credentials", o.OpenfortErrorType.INTERNAL_ERROR);
                    t.accessToken !== r.token && ((0, a.debugLog)("tokens refreshed"), new(0, l.Authentication)("jwt", t.accessToken, t.player, t.refreshToken).save(this.storage), this.eventEmitter.emit(c.OpenfortEvents.TOKEN_REFRESHED))
                }
            }
        }
    }, {
        "../utils/debug.js": "8822a",
        "../storage/istorage.js": "8EpXG",
        "./errors/openfortError.js": "3xESR",
        "./configuration/authentication.js": "1Nfd7",
        "../types/types.js": "fUPIN",
        "@parcel/transformer-js/src/esmodule-helpers.js": "cI3Jn"
    }]
}, ["6Df0C", "id4SM"], "id4SM", "parcelRequire3602", {}, "./", 0);
//# sourceMappingURL=index.js.map
